/** \file algo/swstate/auto_generated/types/port_tpid_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __PORT_TPID_TYPES_H__
#define __PORT_TPID_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <include/bcm/types.h>
#include <include/soc/dnx/dbal/auto_generated/dbal_defines_fields.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_vlan.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
/*
 * MACROs
 */

#define DNX_PORT_TPID_BUFFER_BITS_PER_TAG_STRCT 19

#define DNX_PORT_TPID_LLVP_KEY_SIZE (1+3+3)

#define DNX_PORT_TPID_LLVP_BLOCK_SIZE (SAL_BIT(DNX_PORT_TPID_LLVP_KEY_SIZE))

#define DNX_PORT_TPID_CLASS_TEMPLATE_SIZE_NUM_OF_UINT32 ((DNX_PORT_TPID_BUFFER_BITS_PER_TAG_STRCT*DNX_PORT_TPID_LLVP_BLOCK_SIZE)/32)

#define DNX_PORT_TPID_TPID_INDEX_SIZE SAL_BIT(3)

/*
 * STRUCTs
 */

typedef struct {
    uint32 llvp_template[DNX_PORT_TPID_CLASS_TEMPLATE_SIZE_NUM_OF_UINT32];
} llvp_template_t;

typedef struct {
    llvp_template_t ingress;
    llvp_template_t egress;
} native_ac_llvp_template_t;

typedef struct {
    dnx_algo_res_t bcm_tag_format_class_id_ingress;
    dnx_algo_res_t bcm_tag_format_class_id_egress;
    dnx_algo_res_t bcm_tag_format_class_id_symmetric;
    SHR_BITDCL* bcm_tag_format_class_id_symmetric_indication;
    dnx_algo_res_t incoming_tag_structure_ingress;
    dnx_algo_res_t incoming_tag_structure_egress;
} port_tpid_tag_struct_t;

typedef struct {
    native_ac_llvp_template_t native_ac_llvp_templates;
    llvp_template_t egress_ip_tunnel_llvp_template;
    port_tpid_tag_struct_t tag_struct_allocation;
} port_tpid_db_t;

typedef struct {
    dbal_enum_value_field_egress_acceptable_frame_type_filter_action_e acceptable_frame_type_template[DNX_PORT_TPID_TPID_INDEX_SIZE][DNX_PORT_TPID_TPID_INDEX_SIZE];
} acceptable_frame_type_template_t;


#endif /* __PORT_TPID_TYPES_H__ */
