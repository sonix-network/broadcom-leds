/** \file algo/swstate/auto_generated/types/lif_mngr_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __LIF_MNGR_TYPES_H__
#define __LIF_MNGR_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <include/soc/dnx/dbal/dbal_structures.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_device.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_lif.h>
#include <soc/dnxc/swstate/callbacks/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <soc/dnxc/swstate/types/sw_state_hash_table.h>
#include <soc/dnxc/swstate/types/sw_state_htb.h>
#include <soc/dnxc/swstate/types/sw_state_index_hash_table.h>
/*
 * STRUCTs
 */

typedef struct {
    int local_lifs[DNX_DATA_MAX_DEVICE_GENERAL_NOF_CORES];
} inlif_array_t;

typedef struct {
    int local_lif;
    dbal_physical_tables_e phy_table;
} lif_mapping_local_lif_info_t;

typedef struct {
    dbal_tables_e dbal_table_id;
    int dbal_result_type;
} ingress_lif_info_t;

typedef struct {
    dbal_tables_e dbal_table_id;
    int8 dbal_result_type;
    int8 ll_exists;
    int8 stat_pp_etpp_is_count_profile;
    int8 logical_phase;
} egress_lif_info_t;

typedef struct {
    int8 dbal_result_type;
    int8 ll_exists;
    int8 stat_pp_etpp_is_count_profile;
    int8 logical_phase;
} egress_lif_info_per_table_t;

typedef struct {
    int* ingress_lif1_to_global_lif_map;
    int* ingress_lif2_to_global_lif_map;
    sw_state_htbl_t ingress_global_lif_to_lif_htb;
    int* egress_lif_to_global_lif_map;
    sw_state_htbl_t egress_global_lif_to_lif_htb;
} lif_mapping_info_t;

typedef struct {
    dnx_algo_res_t symmetric_global_lif;
    dnx_algo_res_t ingress_global_lif;
    dnx_algo_res_t egress_global_lif;
    int ingress_global_lif_counter;
    int egress_global_lif_counter;
    SHR_BITDCL* global_lif_symmetric_indication;
} global_lif_allocation_info_t;

typedef struct {
    dnx_algo_res_t inlif_table_shared_by_cores;
    dnx_algo_res_t* inlif_table_dedicated_per_core;
    dnx_algo_res_t inlif_table_dpc_all_cores;
    SHR_BITDCL* inlif_table_dpc_all_cores_indication;
} local_inlif_allocation_info_t;

typedef struct {
    ingress_lif_info_t* ingress_lif1;
    ingress_lif_info_t* ingress_lif2;
    sw_state_htbl_t egress_lif_htb;
    sw_state_idx_htbl_t egress_lif_table_to_index_htb;
    sw_state_multihead_htb_t egress_lif_sw_info_per_table_htb;
} lif_mngr_local_lif_info_t;

typedef struct {
    lif_mapping_info_t lif_mapping;
    global_lif_allocation_info_t global_lif_allocation;
    local_inlif_allocation_info_t local_inlif;
    dnx_algo_res_t* egress_local_lif;
    lif_mngr_local_lif_info_t local_lif_info;
    int number_of_outlif_tables;
} lif_mngr_sw_state_t;


#endif /* __LIF_MNGR_TYPES_H__ */
