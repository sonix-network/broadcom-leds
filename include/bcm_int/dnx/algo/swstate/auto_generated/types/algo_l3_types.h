/** \file algo/swstate/auto_generated/types/algo_l3_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __ALGO_L3_TYPES_H__
#define __ALGO_L3_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/l3/algo_l3.h>
#include <bcm_int/dnx/algo/l3/source_address_table_allocation.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <bcm_int/dnx/l3/l3_ecmp.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_l3.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_max_l3.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/algo_consistent_hashing_types.h>
/*
 * STRUCTs
 */

typedef struct {
    dnx_algo_res_t rif_res_manager;
    dnx_algo_res_t intf_rif_res_mngr;
} rif_t;

typedef struct {
    dnx_algo_template_t source_address_table;
} source_address_table_allocation_t;

typedef struct {
    dnx_algo_res_t res_bitmap;
} vrrp_exem_table_allocation_t;

typedef struct {
    dnx_algo_res_t* fec_res_manager;
} l3_fec_res_t;

typedef struct {
    dnx_algo_res_t egr_pointed_res_manager;
} l3_egr_pointed_res_t;

typedef struct {
    l3_fec_res_t l3_fec_res_mngr;
} l3_fec_alloc_t;

typedef struct {
    dnx_algo_res_t l3_ecmp_tunnel_priority_modes_res_mngr;
} l3_ecmp_tunnel_priority_modes_t;

typedef struct {
    dnx_algo_res_t vip_ecmp_res_manager;
} vip_ecmp_t;

typedef struct {
    uint8 database_enable[DNX_DATA_MAX_L3_VRRP_NOF_DBS];
} l3_vrrp_t;

typedef struct {
    mdb_physical_table_e** fec_db;
} l3_fec_t;

typedef struct {
    dnx_algo_template_t ecmp_consistent_manager;
    dnx_algo_template_t vrrp_vsi_tcam_table;
    dnx_algo_template_t* ecmp_profile_hier_table;
    dnx_algo_template_t vrrp_exem_tcam_table;
} algo_l3_template_t;

typedef struct {
    SHR_BITDCL* mac_compress_id_bitmap;
} mac_compress_t;

typedef struct {
    SHR_BITDCL* ipv6_msb32_compress_id_bitmap;
} ipv6_msb32_compress_t;

typedef struct {
    source_address_table_allocation_t source_address_table_allocation;
    l3_fec_alloc_t fec_alloc;
    l3_egr_pointed_res_t egr_pointed_alloc;
    algo_l3_template_t algo_l3_templates;
    vrrp_exem_table_allocation_t vrrp_exem_l2_station_id_alloc;
    l3_vrrp_t vrrp_db;
    rif_t rif_alloc;
    l3_ecmp_tunnel_priority_modes_t* tp_modes;
    vip_ecmp_t vip_ecmp_alloc;
    l3_fec_t fec_db_info;
    int* out_rif_result_type_info;
    mac_compress_t mac_compress_id_alloc;
    ipv6_msb32_compress_t ipv6_msb32_compress_id_alloc;
    uint32* mac_compress_ref;
    uint32* ipv6_msb32_compress_ref;
} algo_l3_sw_state_t;


#endif /* __ALGO_L3_TYPES_H__ */
