/** \file algo/swstate/auto_generated/types/instru_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __INSTRU_TYPES_H__
#define __INSTRU_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <include/bcm_int/dnx/algo/instru/algo_instru.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_instru.h>
#include <soc/dnxc/swstate/callbacks/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <soc/dnxc/swstate/types/sw_state_hash_table.h>
/*
 * STRUCTs
 */

typedef struct {
    bcm_gport_t udp_tunnel;
    uint32 sub_agent_id;
    uint16 eventor_id;
} sflow_destination_key_t;

typedef struct {
    dnx_algo_template_t sflow_destination_profile;
    int** raw_outlifs_by_profile;
    sw_state_htbl_t sflow_encap_to_sflow_destination_profile;
    int nof_sflow_encaps;
    uint32 agent_ip_address;
} sflow_info_t;

typedef struct {
    uint32 offset;
} eventor_const_values_info_t;

typedef struct {
    uint32 buffer0_offset;
    uint32 buffer1_offset;
    uint32 buffer_size;
    uint32 program0_offset;
    uint32 program1_offset;
    uint32 nof_operations;
    uint32 nof_const_values;
    uint32 builders;
} eventor_tx_context_info_t;

typedef struct {
    uint32 context_type;
    uint32 buffer0_offset;
    uint32 buffer1_offset;
    uint32 buffer_size;
    uint32 program0_offset;
    uint32 program1_offset;
} eventor_rx_context_info_t;

typedef struct {
    uint32 flags;
    uint64 start_time;
    uint64 trigger_period;
    uint32 nof_triggers;
    uint32 enable;
} synced_trigger_config_t;

typedef struct {
    uint32 flags;
    SHR_BITDCL* rx_sram_banks_bitmap;
    SHR_BITDCL* builder_configured_bitmap;
    SHR_BITDCL* rx_contexts_bitmap;
    eventor_rx_context_info_t* rx_contexts_info;
    SHR_BITDCL* tx_contexts_bitmap;
    SHR_BITDCL* tx_contexts_queue_type_bitmap;
    SHR_BITDCL* tx_sram_banks_bitmap;
    eventor_tx_context_info_t* tx_contexts_info;
} eventor_info_t;

typedef struct {
    sflow_info_t sflow_info;
    eventor_info_t eventor_info;
    synced_trigger_config_t trigger_info[bcmInstruSyncedTriggerTypeCount];
} instru_sw_state_t;


#endif /* __INSTRU_TYPES_H__ */
