/** \file algo/swstate/auto_generated/types/flow_control_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __FLOW_CONTROL_TYPES_H__
#define __FLOW_CONTROL_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm/cosq.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <bcm_int/dnx/cosq/flow_control/flow_control_imp.h>
#include <bcm_int/dnx/cosq/flow_control/pfc_deadlock.h>
#include <include/shared/shr_thread_manager.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_max_nif.h>
/*
 * STRUCTs
 */

typedef struct {
    int timer[DNX_DATA_MAX_NIF_PHYS_NOF_PHYS][BCM_COS_COUNT];
    int occurances[DNX_DATA_MAX_NIF_PHYS_NOF_PHYS][BCM_COS_COUNT];
    int enabled[DNX_DATA_MAX_NIF_ETH_ETHU_NOF];
    int action;
    int detection_timer_granularity;
    shr_thread_manager_handler_t event_handle;
    pfc_deadlock_recovery_userdata_t data;
} pfc_deadlock_recovery_t;

typedef struct {
    dnx_algo_template_t fc_generic_bmp;
    pfc_deadlock_recovery_t pfc_deadlock_recovery;
    dnx_algo_template_t rmc_thresholds;
} flow_control_sw_state_t;


#endif /* __FLOW_CONTROL_TYPES_H__ */
