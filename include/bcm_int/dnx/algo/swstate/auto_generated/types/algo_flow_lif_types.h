/** \file algo/swstate/auto_generated/types/algo_flow_lif_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __ALGO_FLOW_LIF_TYPES_H__
#define __ALGO_FLOW_LIF_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/lif_mngr_types.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/lif_table_mngr_types.h>
#include <soc/dnx/dbal/auto_generated/dbal_defines_tables.h>
#include <soc/dnxc/swstate/callbacks/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_hash_table.h>
/*
 * ENUMs
 */

typedef enum {
    ALGO_FLOW_LIF_ALL_BANKS_TYPE_NONE = 0,
    ALGO_FLOW_LIF_ALL_BANKS_TYPE_SYMMETRIC = 1,
    ALGO_FLOW_LIF_ALL_BANKS_TYPE_PER_CORE = 2,
    /**
     * dummy enum field, must be the last
     */
    ALGO_FLOW_LIF_INLIF_ALL_BANKS_TYPE_E_DUMMY
} algo_flow_lif_inlif_all_banks_type_e;

typedef enum {
    ALGO_FLOW_LIF_BANK_ENTRY_SIZES_NONE = 0,
    ALGO_FLOW_LIF_BANK_ENTRY_SIZES_FULL = 1,
    ALGO_FLOW_LIF_BANK_ENTRY_SIZES_120B = 2,
    ALGO_FLOW_LIF_BANK_ENTRY_SIZES_180B = 3,
    ALGO_FLOW_LIF_BANK_ENTRY_SIZES_ALL = 4,
    /**
     * dummy enum field, must be the last
     */
    ALGO_FLOW_LIF_INLIF_BANK_ENTRY_SIZES_E_DUMMY
} algo_flow_lif_inlif_bank_entry_sizes_e;

/*
 * STRUCTs
 */

typedef struct {
    dbal_tables_e dbal_table;
    uint8 dbal_result_type;
    int global_lif;
} inlif_info_t;

typedef struct {
    sw_state_htbl_t global_lif_to_local_inlif_htb;
    int* local_inlif_to_global_lif_map;
} inlif_mapping_info_t;

typedef struct {
    algo_flow_lif_inlif_bank_entry_sizes_e bank_entry_sizes;
    uint32 nof_added_entries;
} inlif_bank_manager_info_t;

typedef struct {
    inlif_mapping_info_t inlif_mapping;
    uint32 nof_inlif_banks;
    algo_flow_lif_inlif_all_banks_type_e* inlif_bank_manager;
    inlif_bank_manager_info_t** inlif_per_core_bank_manager;
    inlif_info_t* symmetric_info;
    sw_state_htbl_t per_core_info;
    dnx_algo_res_t* per_core_alloc;
    int nof_per_core_lifs;
    int nof_per_core_lifs_size_in_bits;
} algo_flow_inlif_t;

typedef struct {
    algo_flow_inlif_t inlif;
    dnx_algo_res_t flow_ingress_virtual_gport_id;
    dnx_algo_res_t flow_egress_esem_virtual_gport_id;
    dnx_algo_res_t flow_egress_virtual_gport_id;
    sw_state_htbl_t valid_fields_per_no_local_lif_egress_htb;
} algo_flow_lif_t;


#endif /* __ALGO_FLOW_LIF_TYPES_H__ */
