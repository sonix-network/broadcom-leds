/** \file algo/swstate/auto_generated/types/dnx_algo_flexe_general_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_ALGO_FLEXE_GENERAL_TYPES_H__
#define __DNX_ALGO_FLEXE_GENERAL_TYPES_H__

#ifdef BCM_DNX_SUPPORT
#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm/port.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_nif.h>
#include <soc/dnxc/swstate/types/sw_state_mutex.h>
#include <soc/dnxc/swstate/types/sw_state_pbmp.h>
/*
 * ENUMs
 */

typedef enum {
    DNX_ALGO_FLEXE_FIFO_SB_RX = 0,
    DNX_ALGO_FLEXE_FIFO_TMC = 1,
    DNX_ALGO_FLEXE_FIFO_RMC = 2,
    DNX_ALGO_FLEXE_FIFO_SB_TX = 3,
    DNX_ALGO_FLEXE_NOF_LINK_LIST_FIFOS = 4,
    /**
     * dummy enum field, must be the last
     */
    DNX_ALGO_FLEXE_LINK_LIST_FIFO_TYPE_E_DUMMY
} dnx_algo_flexe_link_list_fifo_type_e;

/*
 * STRUCTs
 */

typedef struct {
    dnx_algo_res_t client_channel;
    dnx_algo_res_t virtual_client_channel;
    dnx_algo_res_t mac1;
    dnx_algo_res_t mac2;
    dnx_algo_res_t mac_channel;
    dnx_algo_res_t sar_channel;
    dnx_algo_res_t flexe_core_port;
    dnx_algo_res_t rmc_id;
} dnx_algo_flexe_general_resource_alloc_t;

typedef struct {
    int valid;
    int group_id;
    bcm_pbmp_t phy_ports;
    int is_bypass;
    uint8 cal_slots_unaligned;
    bcm_port_flexe_phy_slot_mode_t slot_mode;
    bcm_port_flexe_group_ghao_action_t demux_ghao_action;
    bcm_port_flexe_group_ghao_action_t mux_ghao_action;
    bcm_port_flexe_group_cal_t demux_active_cal;
} dnx_algo_flexe_general_group_info_t;

typedef struct {
    int valid;
} dnx_algo_flexe_general_mgmt_channel_info_t;

typedef struct {
    uint16* cal_slots[bcmPortFlexeGroupCalCount];
} dnx_algo_flexe_general_demux_slot_info_t;

typedef struct {
    uint16* cal_slots[bcmPortFlexeGroupCalCount];
} dnx_algo_flexe_general_mux_slot_info_t;

typedef struct {
    int* fifo_link_list[DNX_ALGO_FLEXE_NOF_LINK_LIST_FIFOS];
    dnx_algo_flexe_general_group_info_t* group_info;
    dnx_algo_flexe_general_demux_slot_info_t* demux_slot_info;
    dnx_algo_flexe_general_mux_slot_info_t* mux_slot_info;
    sw_state_mutex_t tiny_mac_access_mutex;
    dnx_algo_flexe_general_resource_alloc_t resource_alloc;
    uint8 flexe_core_is_active;
    dnx_algo_flexe_general_mgmt_channel_info_t* mgmt_channel_info;
} dnx_algo_flexe_general_db_t;

#endif /* BCM_DNX_SUPPORT*/ 

#endif /* __DNX_ALGO_FLEXE_GENERAL_TYPES_H__ */
