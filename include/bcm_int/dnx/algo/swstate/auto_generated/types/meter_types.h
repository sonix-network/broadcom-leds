/** \file algo/swstate/auto_generated/types/meter_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __METER_TYPES_H__
#define __METER_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <bcm_int/dnx/policer/policer_mgmt.h>
#include <include/bcm/policer.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_device.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_max_crps.h>
/*
 * STRUCTs
 */

typedef struct {
    uint32 max_rate;
    uint32 max_burst_normal_mode;
    uint32 max_burst_large_mode;
    uint32 min_rate;
    uint32 min_burst;
    uint32 max_cbs_mant;
    uint32 max_cbs_exp;
    uint32 max_ir_mant;
    uint32 max_ir_exp;
} dnx_policer_profile_limits_info_t;

typedef struct {
    int bank_id;
    int base_meter_index;
} dnx_policer_bank_info_t;

typedef struct {
    uint32 enable;
    uint32 created;
    uint32 expansion_enable;
    uint32 expansion_is_per_tc;
    uint32 is_single_bucket;
    int use_small_engine;
    uint32 nof_generic_banks;
    dnx_policer_bank_info_t banks_arr[DNX_DATA_MAX_CRPS_ENGINE_NOF_BIG_ENGINES*2];
    uint32 expansion_bitmap;
} dnx_policer_database_info_t;

typedef struct {
    dnx_policer_database_info_t* db_info[2];
} dnx_generic_meter_info_t;

typedef struct {
    dnx_algo_template_t* policer_ingress_db0;
    dnx_algo_template_t* policer_ingress_db1;
    dnx_algo_template_t* policer_ingress_db2;
    dnx_algo_template_t* policer_egress_db0;
    dnx_algo_template_t* policer_egress_db1;
} policer_template_t;

typedef struct {
    dnx_algo_template_t* policer_ingress_db0;
    dnx_algo_template_t* policer_ingress_db1;
    dnx_algo_template_t* policer_ingress_db2;
    dnx_algo_template_t* policer_egress_db0;
    dnx_algo_template_t* policer_egress_db1;
} policer_compensation_template_t;

typedef struct {
    dnx_policer_profile_limits_info_t profile_limits_info;
    int* global_meter_enabled;
    dnx_generic_meter_info_t* generic_meter_info;
    policer_template_t policer_templates;
    policer_compensation_template_t policer_compensation_templates;
} dnx_meter_db_t;


#endif /* __METER_TYPES_H__ */
