/** \file algo/swstate/auto_generated/diagnostic/dnx_tsn_diagnostic.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_TSN_DIAGNOSTIC_H__
#define __DNX_TSN_DIAGNOSTIC_H__

#include <soc/dnxc/swstate/dnx_sw_state_dump.h>
#include <soc/dnxc/swstate/dnx_sw_state_size.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/dnx_tsn_types.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <include/bcm/cosq.h>
#include <include/bcm/tsn.h>
#include <include/shared/shr_thread_manager.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_device.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_tsn.h>
#include <soc/dnxc/swstate/callbacks/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <soc/dnxc/swstate/types/sw_state_linked_list.h>
#include <soc/dnxc/swstate/types/sw_state_mutex.h>
#if defined(DNX_SW_STATE_DIAGNOSTIC)
typedef enum {
    DNX_TSN_DB_INFO,
    DNX_TSN_DB_TAF_INFO,
    DNX_TSN_DB_TAF_GATE_ALLOC_INFO,
    DNX_TSN_DB_TAF_PID_ALLOC_INFO,
    DNX_TSN_DB_TAF_TAF_PROFILES_DATA_INFO,
    DNX_TSN_DB_TAF_TAF_PROFILES_DATA_PROFILE_STATE_INFO,
    DNX_TSN_DB_TAF_TAF_PROFILES_DATA_PROFILE_DATA_INFO,
    DNX_TSN_DB_TAF_TAF_PROFILES_DATA_CONFIG_CHANGE_TIME_INFO,
    DNX_TSN_DB_TAS_INFO,
    DNX_TSN_DB_TAS_GATE_ALLOC_INFO,
    DNX_TSN_DB_TAS_PID_ALLOC_INFO,
    DNX_TSN_DB_TAS_EGQ_IF_TO_GATE_MAPPING_INFO,
    DNX_TSN_DB_TAS_TAS_PROFILES_DATA_INFO,
    DNX_TSN_DB_TAS_TAS_PROFILES_DATA_PROFILE_STATE_INFO,
    DNX_TSN_DB_TAS_TAS_PROFILES_DATA_PROFILE_DATA_INFO,
    DNX_TSN_DB_TAS_TAS_PROFILES_DATA_CONFIG_CHANGE_TIME_INFO,
    DNX_TSN_DB_TAS_TAS_PROFILES_DATA_PORT_INFO,
    DNX_TSN_DB_CQF_INFO,
    DNX_TSN_DB_CQF_GATE_ALLOC_INFO,
    DNX_TSN_DB_CQF_TSN_EGR_IF_TO_GATE_MAPPING_INFO,
    DNX_TSN_DB_CQF_PTP_BASE_TIME_INFO,
    DNX_TSN_DB_TSN_THREAD_INFO,
    DNX_TSN_DB_TSN_THREAD_TSN_THREAD_HANDLER_INFO,
    DNX_TSN_DB_TSN_THREAD_PENDING_LIST_INFO,
    DNX_TSN_DB_TSN_THREAD_TAF_GATES_TO_RESET_INFO,
    DNX_TSN_DB_TSN_THREAD_TAS_PORTS_TO_RESET_INFO,
    DNX_TSN_DB_TSN_THREAD_MUTEX_INFO,
    DNX_TSN_DB_MUTEX_INFO,
    DNX_TSN_DB_INFO_NOF_ENTRIES
} sw_state_dnx_tsn_db_layout_e;


extern dnx_sw_state_diagnostic_info_t dnx_tsn_db_info[SOC_MAX_NUM_DEVICES][DNX_TSN_DB_INFO_NOF_ENTRIES];

extern const char* dnx_tsn_db_layout_str[DNX_TSN_DB_INFO_NOF_ENTRIES];
int dnx_tsn_db_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_taf_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_taf_gate_alloc_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_taf_pid_alloc_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_taf_taf_profiles_data_dump(
    int unit, int taf_profiles_data_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_taf_taf_profiles_data_profile_state_dump(
    int unit, int taf_profiles_data_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_taf_taf_profiles_data_profile_data_dump(
    int unit, int taf_profiles_data_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_taf_taf_profiles_data_config_change_time_dump(
    int unit, int taf_profiles_data_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tas_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tas_gate_alloc_dump(
    int unit, int gate_alloc_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tas_pid_alloc_dump(
    int unit, int pid_alloc_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tas_egq_if_to_gate_mapping_dump(
    int unit, int egq_if_to_gate_mapping_idx_0, int egq_if_to_gate_mapping_idx_1, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tas_tas_profiles_data_dump(
    int unit, int tas_profiles_data_idx_0, int tas_profiles_data_idx_1, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tas_tas_profiles_data_profile_state_dump(
    int unit, int tas_profiles_data_idx_0, int tas_profiles_data_idx_1, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tas_tas_profiles_data_profile_data_dump(
    int unit, int tas_profiles_data_idx_0, int tas_profiles_data_idx_1, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tas_tas_profiles_data_config_change_time_dump(
    int unit, int tas_profiles_data_idx_0, int tas_profiles_data_idx_1, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tas_tas_profiles_data_port_dump(
    int unit, int tas_profiles_data_idx_0, int tas_profiles_data_idx_1, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_cqf_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_cqf_gate_alloc_dump(
    int unit, int gate_alloc_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_cqf_tsn_egr_if_to_gate_mapping_dump(
    int unit, int tsn_egr_if_to_gate_mapping_idx_0, int tsn_egr_if_to_gate_mapping_idx_1, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_cqf_ptp_base_time_dump(
    int unit, int ptp_base_time_idx_0, int ptp_base_time_idx_1, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tsn_thread_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tsn_thread_tsn_thread_handler_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tsn_thread_pending_list_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tsn_thread_taf_gates_to_reset_dump(
    int unit, int taf_gates_to_reset_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tsn_thread_tas_ports_to_reset_dump(
    int unit, int tas_ports_to_reset_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_tsn_thread_mutex_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_tsn_db_mutex_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

#endif /* DNX_SW_STATE_DIAGNOSTIC */

#endif /* __DNX_TSN_DIAGNOSTIC_H__ */
