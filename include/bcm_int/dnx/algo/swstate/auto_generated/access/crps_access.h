/** \file algo/swstate/auto_generated/access/crps_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __CRPS_ACCESS_H__
#define __CRPS_ACCESS_H__

#include <bcm_int/dnx/algo/swstate/auto_generated/types/crps_types.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <include/bcm/stat.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_max_crps.h>
/*
 * TYPEDEFs
 */

typedef int (*dnx_crps_db_is_init_cb)(
    int unit, uint8 *is_init);

typedef int (*dnx_crps_db_init_cb)(
    int unit);

typedef int (*dnx_crps_db_proc_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

typedef int (*dnx_crps_db_proc_used_for_meter_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int used_for_meter);

typedef int (*dnx_crps_db_proc_used_for_meter_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *used_for_meter);

typedef int (*dnx_crps_db_proc_config_started_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int config_started);

typedef int (*dnx_crps_db_proc_config_started_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *config_started);

typedef int (*dnx_crps_db_proc_config_done_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int config_done);

typedef int (*dnx_crps_db_proc_config_done_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *config_done);

typedef int (*dnx_crps_db_proc_enablers_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, CONST dnx_engine_enablers_t *enablers);

typedef int (*dnx_crps_db_proc_enablers_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, dnx_engine_enablers_t *enablers);

typedef int (*dnx_crps_db_proc_enablers_counting_enable_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int counting_enable);

typedef int (*dnx_crps_db_proc_enablers_counting_enable_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *counting_enable);

typedef int (*dnx_crps_db_proc_enablers_eviction_enable_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int eviction_enable);

typedef int (*dnx_crps_db_proc_enablers_eviction_enable_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *eviction_enable);

typedef int (*dnx_crps_db_proc_interface_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, CONST dnx_engine_interface_info_t *interface);

typedef int (*dnx_crps_db_proc_interface_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, dnx_engine_interface_info_t *interface);

typedef int (*dnx_crps_db_proc_interface_next_engine_id_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int next_engine_id);

typedef int (*dnx_crps_db_proc_interface_next_engine_id_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *next_engine_id);

typedef int (*dnx_crps_db_proc_interface_prev_engine_id_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int prev_engine_id);

typedef int (*dnx_crps_db_proc_interface_prev_engine_id_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *prev_engine_id);

typedef int (*dnx_crps_db_proc_interface_database_id_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int database_id);

typedef int (*dnx_crps_db_proc_interface_database_id_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *database_id);

typedef int (*dnx_crps_db_proc_interface_src_type_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_stat_counter_interface_type_t src_type);

typedef int (*dnx_crps_db_proc_interface_src_type_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_stat_counter_interface_type_t *src_type);

typedef int (*dnx_crps_db_proc_interface_command_id_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int command_id);

typedef int (*dnx_crps_db_proc_interface_command_id_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *command_id);

typedef int (*dnx_crps_db_proc_interface_format_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_stat_counter_format_type_t format);

typedef int (*dnx_crps_db_proc_interface_format_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_stat_counter_format_type_t *format);

typedef int (*dnx_crps_db_proc_interface_counter_size_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int counter_size);

typedef int (*dnx_crps_db_proc_interface_counter_size_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *counter_size);

typedef int (*dnx_crps_db_proc_interface_mode_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_stat_counter_mode_t mode);

typedef int (*dnx_crps_db_proc_interface_mode_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_stat_counter_mode_t *mode);

typedef int (*dnx_crps_db_proc_interface_counter_set_size_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int counter_set_size);

typedef int (*dnx_crps_db_proc_interface_counter_set_size_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *counter_set_size);

typedef int (*dnx_crps_db_proc_interface_type_hw_valid_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 type_hw_valid_idx_0, int type_hw_valid);

typedef int (*dnx_crps_db_proc_interface_type_hw_valid_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 type_hw_valid_idx_0, int *type_hw_valid);

typedef int (*dnx_crps_db_proc_eviction_eviction_type_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_eviction_destination_type_t eviction_type);

typedef int (*dnx_crps_db_proc_eviction_eviction_type_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_eviction_destination_type_t *eviction_type);

typedef int (*dnx_crps_db_proc_eviction_record_format_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_eviction_record_format_t record_format);

typedef int (*dnx_crps_db_proc_eviction_record_format_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_eviction_record_format_t *record_format);

typedef int (*dnx_crps_db_proc_eviction_eviction_event_id_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int eviction_event_id);

typedef int (*dnx_crps_db_proc_eviction_eviction_event_id_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *eviction_event_id);

typedef int (*dnx_crps_db_proc_eviction_sequential_timer_value_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 sequential_timer_value);

typedef int (*dnx_crps_db_proc_eviction_sequential_timer_value_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 *sequential_timer_value);

typedef int (*dnx_crps_db_proc_eviction_dma_fifo_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int dma_fifo);

typedef int (*dnx_crps_db_proc_eviction_dma_fifo_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *dma_fifo);

typedef int (*dnx_crps_db_proc_eviction_eviction_algorithmic_disable_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int eviction_algorithmic_disable);

typedef int (*dnx_crps_db_proc_eviction_eviction_algorithmic_disable_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *eviction_algorithmic_disable);

typedef int (*dnx_crps_db_proc_eviction_conditional_condition_user_data_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint64 condition_user_data);

typedef int (*dnx_crps_db_proc_eviction_conditional_condition_user_data_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint64 *condition_user_data);

typedef int (*dnx_crps_db_proc_eviction_conditional_action_flags_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 action_flags);

typedef int (*dnx_crps_db_proc_eviction_conditional_action_flags_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 *action_flags);

typedef int (*dnx_crps_db_proc_eviction_conditional_enable_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int enable);

typedef int (*dnx_crps_db_proc_eviction_conditional_enable_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *enable);

typedef int (*dnx_crps_db_proc_eviction_conditional_condition_source_select_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_stat_eviction_conditional_source_t condition_source_select);

typedef int (*dnx_crps_db_proc_eviction_conditional_condition_source_select_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_stat_eviction_conditional_source_t *condition_source_select);

typedef int (*dnx_crps_db_proc_eviction_conditional_qualifier_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_stat_eviction_conditional_qual_t qualifier);

typedef int (*dnx_crps_db_proc_eviction_conditional_qualifier_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, bcm_stat_eviction_conditional_qual_t *qualifier);

typedef int (*dnx_crps_db_proc_eviction_eviction_range_start_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 start);

typedef int (*dnx_crps_db_proc_eviction_eviction_range_start_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 *start);

typedef int (*dnx_crps_db_proc_eviction_eviction_range_end_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 end);

typedef int (*dnx_crps_db_proc_eviction_eviction_range_end_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 *end);

typedef int (*dnx_crps_db_proc_log_obj_id_range_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, CONST dnx_engine_log_obj_id_range_t *log_obj_id_range);

typedef int (*dnx_crps_db_proc_log_obj_id_range_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, dnx_engine_log_obj_id_range_t *log_obj_id_range);

typedef int (*dnx_crps_db_proc_log_obj_id_range_logical_object_id_first_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 logical_object_id_first);

typedef int (*dnx_crps_db_proc_log_obj_id_range_logical_object_id_first_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 *logical_object_id_first);

typedef int (*dnx_crps_db_proc_log_obj_id_range_logical_object_id_last_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 logical_object_id_last);

typedef int (*dnx_crps_db_proc_log_obj_id_range_logical_object_id_last_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 *logical_object_id_last);

typedef int (*dnx_crps_db_proc_rate_rate_calculation_enable_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int rate_calculation_enable);

typedef int (*dnx_crps_db_proc_rate_rate_calculation_enable_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, int *rate_calculation_enable);

typedef int (*dnx_crps_db_proc_rate_next_seq_counter_idx_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 next_seq_counter_idx);

typedef int (*dnx_crps_db_proc_rate_next_seq_counter_idx_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 *next_seq_counter_idx);

typedef int (*dnx_crps_db_proc_rate_sequence_num_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 sequence_num_idx_0, uint8 sequence_num);

typedef int (*dnx_crps_db_proc_rate_sequence_num_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 sequence_num_idx_0, uint8 *sequence_num);

typedef int (*dnx_crps_db_proc_rate_sequence_num_range_read_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 from_idx, uint32 nof_elements, uint8 *dest);

typedef int (*dnx_crps_db_proc_rate_sequence_num_range_write_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 from_idx, uint32 nof_elements, const uint8 *source);

typedef int (*dnx_crps_db_proc_rate_sequence_num_range_fill_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 from_idx, uint32 nof_elements, uint8 value);

typedef int (*dnx_crps_db_proc_rate_sequence_num_alloc_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_crps_db_proc_rate_sequence_num_is_allocated_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint8 *is_allocated);

typedef int (*dnx_crps_db_proc_rate_seq_period_shadow_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 seq_period_shadow_idx_0, uint32 seq_period_shadow_idx_1, uint8 seq_period_shadow);

typedef int (*dnx_crps_db_proc_rate_seq_period_shadow_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 seq_period_shadow_idx_0, uint32 seq_period_shadow_idx_1, uint8 *seq_period_shadow);

typedef int (*dnx_crps_db_proc_rate_seq_period_shadow_alloc_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_crps_db_proc_rate_seq_period_shadow_is_allocated_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint8 *is_allocated);

typedef int (*dnx_crps_db_proc_rate_algo_shadow_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 algo_shadow_idx_0, uint32 algo_shadow_idx_1, uint8 algo_shadow);

typedef int (*dnx_crps_db_proc_rate_algo_shadow_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 algo_shadow_idx_0, uint32 algo_shadow_idx_1, uint8 *algo_shadow);

typedef int (*dnx_crps_db_proc_rate_algo_shadow_alloc_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_crps_db_proc_rate_algo_shadow_is_allocated_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint8 *is_allocated);

typedef int (*dnx_crps_db_proc_counter_set_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 counter_idx_0, uint64 counter);

typedef int (*dnx_crps_db_proc_counter_get_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 counter_idx_0, uint64 *counter);

typedef int (*dnx_crps_db_proc_counter_range_read_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 from_idx, uint32 nof_elements, uint64 *dest);

typedef int (*dnx_crps_db_proc_counter_range_write_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 from_idx, uint32 nof_elements, const uint64 *source);

typedef int (*dnx_crps_db_proc_counter_range_fill_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 from_idx, uint32 nof_elements, uint64 value);

typedef int (*dnx_crps_db_proc_counter_alloc_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_crps_db_proc_counter_is_allocated_cb)(
    int unit, uint32 proc_idx_0, uint32 proc_idx_1, uint8 *is_allocated);

typedef int (*dnx_crps_db_database_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

typedef int (*dnx_crps_db_database_base_engine_set_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, int base_engine);

typedef int (*dnx_crps_db_database_base_engine_get_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, int *base_engine);

typedef int (*dnx_crps_db_database_type_set_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 type_idx_0, CONST dnx_type_config_t *type);

typedef int (*dnx_crps_db_database_type_get_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 type_idx_0, dnx_type_config_t *type);

typedef int (*dnx_crps_db_database_type_valid_set_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 type_idx_0, uint32 valid);

typedef int (*dnx_crps_db_database_type_valid_get_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 type_idx_0, uint32 *valid);

typedef int (*dnx_crps_db_database_type_offset_set_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 type_idx_0, uint32 offset);

typedef int (*dnx_crps_db_database_type_offset_get_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 type_idx_0, uint32 *offset);

typedef int (*dnx_crps_db_database_type_start_set_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 type_idx_0, int start);

typedef int (*dnx_crps_db_database_type_start_get_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 type_idx_0, int *start);

typedef int (*dnx_crps_db_database_type_end_set_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 type_idx_0, int end);

typedef int (*dnx_crps_db_database_type_end_get_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 type_idx_0, int *end);

typedef int (*dnx_crps_db_database_set_set_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 set_idx_0, CONST dnx_set_config_t *set);

typedef int (*dnx_crps_db_database_set_get_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 set_idx_0, dnx_set_config_t *set);

typedef int (*dnx_crps_db_database_set_size_set_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 set_idx_0, int size);

typedef int (*dnx_crps_db_database_set_size_get_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 set_idx_0, int *size);

typedef int (*dnx_crps_db_database_set_start_set_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 set_idx_0, uint32 start);

typedef int (*dnx_crps_db_database_set_start_get_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 set_idx_0, uint32 *start);

typedef int (*dnx_crps_db_database_set_end_set_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 set_idx_0, uint32 end);

typedef int (*dnx_crps_db_database_set_end_get_cb)(
    int unit, uint32 database_idx_0, uint32 database_idx_1, uint32 set_idx_0, uint32 *end);

typedef int (*dnx_crps_db_database_res_set_cb)(
    int unit, uint32 database_res_idx_0, dnx_algo_res_t database_res);

typedef int (*dnx_crps_db_database_res_get_cb)(
    int unit, uint32 database_res_idx_0, dnx_algo_res_t *database_res);

typedef int (*dnx_crps_db_database_res_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_crps_db_database_res_create_cb)(
    int unit, uint32 database_res_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*dnx_crps_db_database_res_allocate_single_cb)(
    int unit, uint32 database_res_idx_0, uint32 flags, void *extra_arguments, int *element);

typedef int (*dnx_crps_db_database_res_free_single_cb)(
    int unit, uint32 database_res_idx_0, int element, void *extra_arguments);

typedef int (*dnx_crps_db_database_res_is_allocated_cb)(
    int unit, uint32 database_res_idx_0, int element, uint8 *is_allocated);

/*
 * STRUCTs
 */

typedef struct {
    dnx_crps_db_proc_used_for_meter_set_cb set;
    dnx_crps_db_proc_used_for_meter_get_cb get;
} dnx_crps_db_proc_used_for_meter_cbs;

typedef struct {
    dnx_crps_db_proc_config_started_set_cb set;
    dnx_crps_db_proc_config_started_get_cb get;
} dnx_crps_db_proc_config_started_cbs;

typedef struct {
    dnx_crps_db_proc_config_done_set_cb set;
    dnx_crps_db_proc_config_done_get_cb get;
} dnx_crps_db_proc_config_done_cbs;

typedef struct {
    dnx_crps_db_proc_enablers_counting_enable_set_cb set;
    dnx_crps_db_proc_enablers_counting_enable_get_cb get;
} dnx_crps_db_proc_enablers_counting_enable_cbs;

typedef struct {
    dnx_crps_db_proc_enablers_eviction_enable_set_cb set;
    dnx_crps_db_proc_enablers_eviction_enable_get_cb get;
} dnx_crps_db_proc_enablers_eviction_enable_cbs;

typedef struct {
    dnx_crps_db_proc_enablers_set_cb set;
    dnx_crps_db_proc_enablers_get_cb get;
    dnx_crps_db_proc_enablers_counting_enable_cbs counting_enable;
    dnx_crps_db_proc_enablers_eviction_enable_cbs eviction_enable;
} dnx_crps_db_proc_enablers_cbs;

typedef struct {
    dnx_crps_db_proc_interface_next_engine_id_set_cb set;
    dnx_crps_db_proc_interface_next_engine_id_get_cb get;
} dnx_crps_db_proc_interface_next_engine_id_cbs;

typedef struct {
    dnx_crps_db_proc_interface_prev_engine_id_set_cb set;
    dnx_crps_db_proc_interface_prev_engine_id_get_cb get;
} dnx_crps_db_proc_interface_prev_engine_id_cbs;

typedef struct {
    dnx_crps_db_proc_interface_database_id_set_cb set;
    dnx_crps_db_proc_interface_database_id_get_cb get;
} dnx_crps_db_proc_interface_database_id_cbs;

typedef struct {
    dnx_crps_db_proc_interface_src_type_set_cb set;
    dnx_crps_db_proc_interface_src_type_get_cb get;
} dnx_crps_db_proc_interface_src_type_cbs;

typedef struct {
    dnx_crps_db_proc_interface_command_id_set_cb set;
    dnx_crps_db_proc_interface_command_id_get_cb get;
} dnx_crps_db_proc_interface_command_id_cbs;

typedef struct {
    dnx_crps_db_proc_interface_format_set_cb set;
    dnx_crps_db_proc_interface_format_get_cb get;
} dnx_crps_db_proc_interface_format_cbs;

typedef struct {
    dnx_crps_db_proc_interface_counter_size_set_cb set;
    dnx_crps_db_proc_interface_counter_size_get_cb get;
} dnx_crps_db_proc_interface_counter_size_cbs;

typedef struct {
    dnx_crps_db_proc_interface_mode_set_cb set;
    dnx_crps_db_proc_interface_mode_get_cb get;
} dnx_crps_db_proc_interface_mode_cbs;

typedef struct {
    dnx_crps_db_proc_interface_counter_set_size_set_cb set;
    dnx_crps_db_proc_interface_counter_set_size_get_cb get;
} dnx_crps_db_proc_interface_counter_set_size_cbs;

typedef struct {
    dnx_crps_db_proc_interface_type_hw_valid_set_cb set;
    dnx_crps_db_proc_interface_type_hw_valid_get_cb get;
} dnx_crps_db_proc_interface_type_hw_valid_cbs;

typedef struct {
    dnx_crps_db_proc_interface_set_cb set;
    dnx_crps_db_proc_interface_get_cb get;
    dnx_crps_db_proc_interface_next_engine_id_cbs next_engine_id;
    dnx_crps_db_proc_interface_prev_engine_id_cbs prev_engine_id;
    dnx_crps_db_proc_interface_database_id_cbs database_id;
    dnx_crps_db_proc_interface_src_type_cbs src_type;
    dnx_crps_db_proc_interface_command_id_cbs command_id;
    dnx_crps_db_proc_interface_format_cbs format;
    dnx_crps_db_proc_interface_counter_size_cbs counter_size;
    dnx_crps_db_proc_interface_mode_cbs mode;
    dnx_crps_db_proc_interface_counter_set_size_cbs counter_set_size;
    dnx_crps_db_proc_interface_type_hw_valid_cbs type_hw_valid;
} dnx_crps_db_proc_interface_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_eviction_type_set_cb set;
    dnx_crps_db_proc_eviction_eviction_type_get_cb get;
} dnx_crps_db_proc_eviction_eviction_type_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_record_format_set_cb set;
    dnx_crps_db_proc_eviction_record_format_get_cb get;
} dnx_crps_db_proc_eviction_record_format_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_eviction_event_id_set_cb set;
    dnx_crps_db_proc_eviction_eviction_event_id_get_cb get;
} dnx_crps_db_proc_eviction_eviction_event_id_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_sequential_timer_value_set_cb set;
    dnx_crps_db_proc_eviction_sequential_timer_value_get_cb get;
} dnx_crps_db_proc_eviction_sequential_timer_value_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_dma_fifo_set_cb set;
    dnx_crps_db_proc_eviction_dma_fifo_get_cb get;
} dnx_crps_db_proc_eviction_dma_fifo_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_eviction_algorithmic_disable_set_cb set;
    dnx_crps_db_proc_eviction_eviction_algorithmic_disable_get_cb get;
} dnx_crps_db_proc_eviction_eviction_algorithmic_disable_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_conditional_condition_user_data_set_cb set;
    dnx_crps_db_proc_eviction_conditional_condition_user_data_get_cb get;
} dnx_crps_db_proc_eviction_conditional_condition_user_data_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_conditional_action_flags_set_cb set;
    dnx_crps_db_proc_eviction_conditional_action_flags_get_cb get;
} dnx_crps_db_proc_eviction_conditional_action_flags_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_conditional_enable_set_cb set;
    dnx_crps_db_proc_eviction_conditional_enable_get_cb get;
} dnx_crps_db_proc_eviction_conditional_enable_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_conditional_condition_source_select_set_cb set;
    dnx_crps_db_proc_eviction_conditional_condition_source_select_get_cb get;
} dnx_crps_db_proc_eviction_conditional_condition_source_select_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_conditional_qualifier_set_cb set;
    dnx_crps_db_proc_eviction_conditional_qualifier_get_cb get;
} dnx_crps_db_proc_eviction_conditional_qualifier_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_conditional_condition_user_data_cbs condition_user_data;
    dnx_crps_db_proc_eviction_conditional_action_flags_cbs action_flags;
    dnx_crps_db_proc_eviction_conditional_enable_cbs enable;
    dnx_crps_db_proc_eviction_conditional_condition_source_select_cbs condition_source_select;
    dnx_crps_db_proc_eviction_conditional_qualifier_cbs qualifier;
} dnx_crps_db_proc_eviction_conditional_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_eviction_range_start_set_cb set;
    dnx_crps_db_proc_eviction_eviction_range_start_get_cb get;
} dnx_crps_db_proc_eviction_eviction_range_start_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_eviction_range_end_set_cb set;
    dnx_crps_db_proc_eviction_eviction_range_end_get_cb get;
} dnx_crps_db_proc_eviction_eviction_range_end_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_eviction_range_start_cbs start;
    dnx_crps_db_proc_eviction_eviction_range_end_cbs end;
} dnx_crps_db_proc_eviction_eviction_range_cbs;

typedef struct {
    dnx_crps_db_proc_eviction_eviction_type_cbs eviction_type;
    dnx_crps_db_proc_eviction_record_format_cbs record_format;
    dnx_crps_db_proc_eviction_eviction_event_id_cbs eviction_event_id;
    dnx_crps_db_proc_eviction_sequential_timer_value_cbs sequential_timer_value;
    dnx_crps_db_proc_eviction_dma_fifo_cbs dma_fifo;
    dnx_crps_db_proc_eviction_eviction_algorithmic_disable_cbs eviction_algorithmic_disable;
    dnx_crps_db_proc_eviction_conditional_cbs conditional;
    dnx_crps_db_proc_eviction_eviction_range_cbs eviction_range;
} dnx_crps_db_proc_eviction_cbs;

typedef struct {
    dnx_crps_db_proc_log_obj_id_range_logical_object_id_first_set_cb set;
    dnx_crps_db_proc_log_obj_id_range_logical_object_id_first_get_cb get;
} dnx_crps_db_proc_log_obj_id_range_logical_object_id_first_cbs;

typedef struct {
    dnx_crps_db_proc_log_obj_id_range_logical_object_id_last_set_cb set;
    dnx_crps_db_proc_log_obj_id_range_logical_object_id_last_get_cb get;
} dnx_crps_db_proc_log_obj_id_range_logical_object_id_last_cbs;

typedef struct {
    dnx_crps_db_proc_log_obj_id_range_set_cb set;
    dnx_crps_db_proc_log_obj_id_range_get_cb get;
    dnx_crps_db_proc_log_obj_id_range_logical_object_id_first_cbs logical_object_id_first;
    dnx_crps_db_proc_log_obj_id_range_logical_object_id_last_cbs logical_object_id_last;
} dnx_crps_db_proc_log_obj_id_range_cbs;

typedef struct {
    dnx_crps_db_proc_rate_rate_calculation_enable_set_cb set;
    dnx_crps_db_proc_rate_rate_calculation_enable_get_cb get;
} dnx_crps_db_proc_rate_rate_calculation_enable_cbs;

typedef struct {
    dnx_crps_db_proc_rate_next_seq_counter_idx_set_cb set;
    dnx_crps_db_proc_rate_next_seq_counter_idx_get_cb get;
} dnx_crps_db_proc_rate_next_seq_counter_idx_cbs;

typedef struct {
    dnx_crps_db_proc_rate_sequence_num_set_cb set;
    dnx_crps_db_proc_rate_sequence_num_get_cb get;
    dnx_crps_db_proc_rate_sequence_num_range_read_cb range_read;
    dnx_crps_db_proc_rate_sequence_num_range_write_cb range_write;
    dnx_crps_db_proc_rate_sequence_num_range_fill_cb range_fill;
    dnx_crps_db_proc_rate_sequence_num_alloc_cb alloc;
    dnx_crps_db_proc_rate_sequence_num_is_allocated_cb is_allocated;
} dnx_crps_db_proc_rate_sequence_num_cbs;

typedef struct {
    dnx_crps_db_proc_rate_seq_period_shadow_set_cb set;
    dnx_crps_db_proc_rate_seq_period_shadow_get_cb get;
    dnx_crps_db_proc_rate_seq_period_shadow_alloc_cb alloc;
    dnx_crps_db_proc_rate_seq_period_shadow_is_allocated_cb is_allocated;
} dnx_crps_db_proc_rate_seq_period_shadow_cbs;

typedef struct {
    dnx_crps_db_proc_rate_algo_shadow_set_cb set;
    dnx_crps_db_proc_rate_algo_shadow_get_cb get;
    dnx_crps_db_proc_rate_algo_shadow_alloc_cb alloc;
    dnx_crps_db_proc_rate_algo_shadow_is_allocated_cb is_allocated;
} dnx_crps_db_proc_rate_algo_shadow_cbs;

typedef struct {
    dnx_crps_db_proc_rate_rate_calculation_enable_cbs rate_calculation_enable;
    dnx_crps_db_proc_rate_next_seq_counter_idx_cbs next_seq_counter_idx;
    dnx_crps_db_proc_rate_sequence_num_cbs sequence_num;
    dnx_crps_db_proc_rate_seq_period_shadow_cbs seq_period_shadow;
    dnx_crps_db_proc_rate_algo_shadow_cbs algo_shadow;
} dnx_crps_db_proc_rate_cbs;

typedef struct {
    dnx_crps_db_proc_counter_set_cb set;
    dnx_crps_db_proc_counter_get_cb get;
    dnx_crps_db_proc_counter_range_read_cb range_read;
    dnx_crps_db_proc_counter_range_write_cb range_write;
    dnx_crps_db_proc_counter_range_fill_cb range_fill;
    dnx_crps_db_proc_counter_alloc_cb alloc;
    dnx_crps_db_proc_counter_is_allocated_cb is_allocated;
} dnx_crps_db_proc_counter_cbs;

typedef struct {
    dnx_crps_db_proc_alloc_cb alloc;
    dnx_crps_db_proc_used_for_meter_cbs used_for_meter;
    dnx_crps_db_proc_config_started_cbs config_started;
    dnx_crps_db_proc_config_done_cbs config_done;
    dnx_crps_db_proc_enablers_cbs enablers;
    dnx_crps_db_proc_interface_cbs interface;
    dnx_crps_db_proc_eviction_cbs eviction;
    dnx_crps_db_proc_log_obj_id_range_cbs log_obj_id_range;
    dnx_crps_db_proc_rate_cbs rate;
    dnx_crps_db_proc_counter_cbs counter;
} dnx_crps_db_proc_cbs;

typedef struct {
    dnx_crps_db_database_base_engine_set_cb set;
    dnx_crps_db_database_base_engine_get_cb get;
} dnx_crps_db_database_base_engine_cbs;

typedef struct {
    dnx_crps_db_database_type_valid_set_cb set;
    dnx_crps_db_database_type_valid_get_cb get;
} dnx_crps_db_database_type_valid_cbs;

typedef struct {
    dnx_crps_db_database_type_offset_set_cb set;
    dnx_crps_db_database_type_offset_get_cb get;
} dnx_crps_db_database_type_offset_cbs;

typedef struct {
    dnx_crps_db_database_type_start_set_cb set;
    dnx_crps_db_database_type_start_get_cb get;
} dnx_crps_db_database_type_start_cbs;

typedef struct {
    dnx_crps_db_database_type_end_set_cb set;
    dnx_crps_db_database_type_end_get_cb get;
} dnx_crps_db_database_type_end_cbs;

typedef struct {
    dnx_crps_db_database_type_set_cb set;
    dnx_crps_db_database_type_get_cb get;
    dnx_crps_db_database_type_valid_cbs valid;
    dnx_crps_db_database_type_offset_cbs offset;
    dnx_crps_db_database_type_start_cbs start;
    dnx_crps_db_database_type_end_cbs end;
} dnx_crps_db_database_type_cbs;

typedef struct {
    dnx_crps_db_database_set_size_set_cb set;
    dnx_crps_db_database_set_size_get_cb get;
} dnx_crps_db_database_set_size_cbs;

typedef struct {
    dnx_crps_db_database_set_start_set_cb set;
    dnx_crps_db_database_set_start_get_cb get;
} dnx_crps_db_database_set_start_cbs;

typedef struct {
    dnx_crps_db_database_set_end_set_cb set;
    dnx_crps_db_database_set_end_get_cb get;
} dnx_crps_db_database_set_end_cbs;

typedef struct {
    dnx_crps_db_database_set_set_cb set;
    dnx_crps_db_database_set_get_cb get;
    dnx_crps_db_database_set_size_cbs size;
    dnx_crps_db_database_set_start_cbs start;
    dnx_crps_db_database_set_end_cbs end;
} dnx_crps_db_database_set_cbs;

typedef struct {
    dnx_crps_db_database_alloc_cb alloc;
    dnx_crps_db_database_base_engine_cbs base_engine;
    dnx_crps_db_database_type_cbs type;
    dnx_crps_db_database_set_cbs set;
} dnx_crps_db_database_cbs;

typedef struct {
    dnx_crps_db_database_res_set_cb set;
    dnx_crps_db_database_res_get_cb get;
    dnx_crps_db_database_res_alloc_cb alloc;
    dnx_crps_db_database_res_create_cb create;
    dnx_crps_db_database_res_allocate_single_cb allocate_single;
    dnx_crps_db_database_res_free_single_cb free_single;
    dnx_crps_db_database_res_is_allocated_cb is_allocated;
} dnx_crps_db_database_res_cbs;

typedef struct {
    dnx_crps_db_is_init_cb is_init;
    dnx_crps_db_init_cb init;
    dnx_crps_db_proc_cbs proc;
    dnx_crps_db_database_cbs database;
    dnx_crps_db_database_res_cbs database_res;
} dnx_crps_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern dnx_crps_db_cbs dnx_crps_db;

#endif /* __CRPS_ACCESS_H__ */
