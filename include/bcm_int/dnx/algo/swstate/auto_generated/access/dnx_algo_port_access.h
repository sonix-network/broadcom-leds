/** \file algo/swstate/auto_generated/access/dnx_algo_port_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_ALGO_PORT_ACCESS_H__
#define __DNX_ALGO_PORT_ACCESS_H__

#include <bcm_int/dnx/algo/swstate/auto_generated/types/dnx_algo_port_types.h>
#include <bcm/port.h>
#include <bcm_int/dnx/algo/port/algo_port_mgmt.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <soc/dnxc/swstate/types/sw_state_mutex.h>
#include <soc/dnxc/swstate/types/sw_state_pbmp.h>
/*
 * TYPEDEFs
 */

typedef int (*dnx_algo_port_db_is_init_cb)(
    int unit, uint8 *is_init);

typedef int (*dnx_algo_port_db_init_cb)(
    int unit);

typedef int (*dnx_algo_port_db_general_dummy_set_cb)(
    int unit, int dummy);

typedef int (*dnx_algo_port_db_general_dummy_get_cb)(
    int unit, int *dummy);

typedef int (*dnx_algo_port_db_general_portmod_mac_soft_reset_cb_lock_create_cb)(
    int unit);

typedef int (*dnx_algo_port_db_general_portmod_mac_soft_reset_cb_lock_is_created_cb)(
    int unit, uint8 *is_created);

typedef int (*dnx_algo_port_db_general_portmod_mac_soft_reset_cb_lock_take_cb)(
    int unit, int usec);

typedef int (*dnx_algo_port_db_general_portmod_mac_soft_reset_cb_lock_give_cb)(
    int unit);

typedef int (*dnx_algo_port_db_logical_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_logical_t *logical);

typedef int (*dnx_algo_port_db_logical_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_logical_t *logical);

typedef int (*dnx_algo_port_db_logical_state_set_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_state_e state);

typedef int (*dnx_algo_port_db_logical_state_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_state_e *state);

typedef int (*dnx_algo_port_db_logical_info_set_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_info_s info);

typedef int (*dnx_algo_port_db_logical_info_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_info_s *info);

typedef int (*dnx_algo_port_db_logical_interface_type_set_cb)(
    int unit, uint32 logical_idx_0, bcm_port_if_t interface_type);

typedef int (*dnx_algo_port_db_logical_interface_type_get_cb)(
    int unit, uint32 logical_idx_0, bcm_port_if_t *interface_type);

typedef int (*dnx_algo_port_db_logical_interface_offset_set_cb)(
    int unit, uint32 logical_idx_0, int interface_offset);

typedef int (*dnx_algo_port_db_logical_interface_offset_get_cb)(
    int unit, uint32 logical_idx_0, int *interface_offset);

typedef int (*dnx_algo_port_db_logical_nif_handle_set_cb)(
    int unit, uint32 logical_idx_0, int nif_handle);

typedef int (*dnx_algo_port_db_logical_nif_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *nif_handle);

typedef int (*dnx_algo_port_db_logical_in_tm_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *in_tm_handle);

typedef int (*dnx_algo_port_db_logical_in_tm_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *in_tm_handle);

typedef int (*dnx_algo_port_db_logical_in_tm_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

typedef int (*dnx_algo_port_db_logical_in_tm_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

typedef int (*dnx_algo_port_db_logical_in_tm_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

typedef int (*dnx_algo_port_db_logical_in_tm_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

typedef int (*dnx_algo_port_db_logical_pp_dsp_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *pp_dsp_handle);

typedef int (*dnx_algo_port_db_logical_pp_dsp_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *pp_dsp_handle);

typedef int (*dnx_algo_port_db_logical_pp_dsp_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

typedef int (*dnx_algo_port_db_logical_pp_dsp_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

typedef int (*dnx_algo_port_db_logical_pp_dsp_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

typedef int (*dnx_algo_port_db_logical_pp_dsp_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

typedef int (*dnx_algo_port_db_logical_sch_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *sch_handle);

typedef int (*dnx_algo_port_db_logical_sch_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *sch_handle);

typedef int (*dnx_algo_port_db_logical_sch_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

typedef int (*dnx_algo_port_db_logical_sch_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

typedef int (*dnx_algo_port_db_logical_sch_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

typedef int (*dnx_algo_port_db_logical_sch_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

typedef int (*dnx_algo_port_db_logical_sch_if_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *sch_if_handle);

typedef int (*dnx_algo_port_db_logical_sch_if_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *sch_if_handle);

typedef int (*dnx_algo_port_db_logical_sch_if_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

typedef int (*dnx_algo_port_db_logical_sch_if_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

typedef int (*dnx_algo_port_db_logical_sch_if_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

typedef int (*dnx_algo_port_db_logical_sch_if_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

typedef int (*dnx_algo_port_db_logical_pp_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *pp_handle);

typedef int (*dnx_algo_port_db_logical_pp_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *pp_handle);

typedef int (*dnx_algo_port_db_logical_pp_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

typedef int (*dnx_algo_port_db_logical_pp_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

typedef int (*dnx_algo_port_db_logical_pp_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

typedef int (*dnx_algo_port_db_logical_pp_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

typedef int (*dnx_algo_port_db_logical_ptc_set_cb)(
    int unit, uint32 logical_idx_0, int ptc);

typedef int (*dnx_algo_port_db_logical_ptc_get_cb)(
    int unit, uint32 logical_idx_0, int *ptc);

typedef int (*dnx_algo_port_db_logical_ilkn_handle_set_cb)(
    int unit, uint32 logical_idx_0, int ilkn_handle);

typedef int (*dnx_algo_port_db_logical_ilkn_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *ilkn_handle);

typedef int (*dnx_algo_port_db_logical_flexe_client_handle_set_cb)(
    int unit, uint32 logical_idx_0, int flexe_client_handle);

typedef int (*dnx_algo_port_db_logical_flexe_client_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *flexe_client_handle);

typedef int (*dnx_algo_port_db_logical_flexe_mac_handle_set_cb)(
    int unit, uint32 logical_idx_0, int flexe_mac_handle);

typedef int (*dnx_algo_port_db_logical_flexe_mac_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *flexe_mac_handle);

typedef int (*dnx_algo_port_db_logical_flexe_sar_handle_set_cb)(
    int unit, uint32 logical_idx_0, int flexe_sar_handle);

typedef int (*dnx_algo_port_db_logical_flexe_sar_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *flexe_sar_handle);

typedef int (*dnx_algo_port_db_logical_flexe_phy_handle_set_cb)(
    int unit, uint32 logical_idx_0, int flexe_phy_handle);

typedef int (*dnx_algo_port_db_logical_flexe_phy_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *flexe_phy_handle);

typedef int (*dnx_algo_port_db_logical_tm_interface_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *tm_interface_handle);

typedef int (*dnx_algo_port_db_logical_tm_interface_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *tm_interface_handle);

typedef int (*dnx_algo_port_db_logical_tm_interface_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

typedef int (*dnx_algo_port_db_logical_tm_interface_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

typedef int (*dnx_algo_port_db_logical_tm_interface_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

typedef int (*dnx_algo_port_db_logical_tm_interface_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

typedef int (*dnx_algo_port_db_logical_interface_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *interface_handle);

typedef int (*dnx_algo_port_db_logical_interface_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *interface_handle);

typedef int (*dnx_algo_port_db_logical_interface_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

typedef int (*dnx_algo_port_db_logical_interface_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

typedef int (*dnx_algo_port_db_logical_interface_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

typedef int (*dnx_algo_port_db_logical_interface_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

typedef int (*dnx_algo_port_db_logical_fabric_handle_set_cb)(
    int unit, uint32 logical_idx_0, int fabric_handle);

typedef int (*dnx_algo_port_db_logical_fabric_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *fabric_handle);

typedef int (*dnx_algo_port_db_logical_in_channel_set_cb)(
    int unit, uint32 logical_idx_0, int in_channel);

typedef int (*dnx_algo_port_db_logical_in_channel_get_cb)(
    int unit, uint32 logical_idx_0, int *in_channel);

typedef int (*dnx_algo_port_db_logical_out_channel_set_cb)(
    int unit, uint32 logical_idx_0, int out_channel);

typedef int (*dnx_algo_port_db_logical_out_channel_get_cb)(
    int unit, uint32 logical_idx_0, int *out_channel);

typedef int (*dnx_algo_port_db_logical_tdm_mode_set_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_tdm_mode_e tdm_mode);

typedef int (*dnx_algo_port_db_logical_tdm_mode_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_tdm_mode_e *tdm_mode);

typedef int (*dnx_algo_port_db_logical_port_app_flags_set_cb)(
    int unit, uint32 logical_idx_0, uint32 port_app_flags);

typedef int (*dnx_algo_port_db_logical_port_app_flags_get_cb)(
    int unit, uint32 logical_idx_0, uint32 *port_app_flags);

typedef int (*dnx_algo_port_db_nif_set_cb)(
    int unit, uint32 nif_idx_0, CONST dnx_algo_port_db_nif_t *nif);

typedef int (*dnx_algo_port_db_nif_get_cb)(
    int unit, uint32 nif_idx_0, dnx_algo_port_db_nif_t *nif);

typedef int (*dnx_algo_port_db_nif_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_algo_port_db_nif_valid_set_cb)(
    int unit, uint32 nif_idx_0, int valid);

typedef int (*dnx_algo_port_db_nif_valid_get_cb)(
    int unit, uint32 nif_idx_0, int *valid);

typedef int (*dnx_algo_port_db_nif_phys_set_cb)(
    int unit, uint32 nif_idx_0, bcm_pbmp_t phys);

typedef int (*dnx_algo_port_db_nif_phys_get_cb)(
    int unit, uint32 nif_idx_0, bcm_pbmp_t *phys);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_neq_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp, uint8 *result);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_eq_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp, uint8 *result);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_member_cb)(
    int unit, uint32 nif_idx_0, uint32 _input_port, uint8 *result);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_not_null_cb)(
    int unit, uint32 nif_idx_0, uint8 *result);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_is_null_cb)(
    int unit, uint32 nif_idx_0, uint8 *result);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_count_cb)(
    int unit, uint32 nif_idx_0, int *result);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_xor_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_remove_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_assign_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_get_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t *output_pbmp);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_and_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_negate_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_or_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_clear_cb)(
    int unit, uint32 nif_idx_0);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_port_add_cb)(
    int unit, uint32 nif_idx_0, uint32 _input_port);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_port_flip_cb)(
    int unit, uint32 nif_idx_0, uint32 _input_port);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_port_remove_cb)(
    int unit, uint32 nif_idx_0, uint32 _input_port);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_port_set_cb)(
    int unit, uint32 nif_idx_0, uint32 _input_port);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_ports_range_add_cb)(
    int unit, uint32 nif_idx_0, uint32 _first_port, uint32 _range);

typedef int (*dnx_algo_port_db_nif_phys_pbmp_fmt_cb)(
    int unit, uint32 nif_idx_0, char* _buffer);

typedef int (*dnx_algo_port_db_nif_first_phy_set_cb)(
    int unit, uint32 nif_idx_0, int first_phy);

typedef int (*dnx_algo_port_db_nif_first_phy_get_cb)(
    int unit, uint32 nif_idx_0, int *first_phy);

typedef int (*dnx_algo_port_db_nif_master_logical_port_set_cb)(
    int unit, uint32 nif_idx_0, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_nif_master_logical_port_get_cb)(
    int unit, uint32 nif_idx_0, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_nif_logical_fifos_set_cb)(
    int unit, uint32 nif_idx_0, uint32 logical_fifos_idx_0, dnx_algo_port_rmc_info_t logical_fifos);

typedef int (*dnx_algo_port_db_nif_logical_fifos_get_cb)(
    int unit, uint32 nif_idx_0, uint32 logical_fifos_idx_0, dnx_algo_port_rmc_info_t *logical_fifos);

typedef int (*dnx_algo_port_db_nif_latch_down_set_cb)(
    int unit, uint32 nif_idx_0, int latch_down);

typedef int (*dnx_algo_port_db_nif_latch_down_get_cb)(
    int unit, uint32 nif_idx_0, int *latch_down);

typedef int (*dnx_algo_port_db_nif_loopback_original_link_training_set_cb)(
    int unit, uint32 nif_idx_0, int loopback_original_link_training);

typedef int (*dnx_algo_port_db_nif_loopback_original_link_training_get_cb)(
    int unit, uint32 nif_idx_0, int *loopback_original_link_training);

typedef int (*dnx_algo_port_db_nif_loopback_original_phy_lane_config_set_cb)(
    int unit, uint32 nif_idx_0, int loopback_original_phy_lane_config);

typedef int (*dnx_algo_port_db_nif_loopback_original_phy_lane_config_get_cb)(
    int unit, uint32 nif_idx_0, int *loopback_original_phy_lane_config);

typedef int (*dnx_algo_port_db_nif_ext_txpi_enable_set_cb)(
    int unit, uint32 nif_idx_0, int ext_txpi_enable);

typedef int (*dnx_algo_port_db_nif_ext_txpi_enable_get_cb)(
    int unit, uint32 nif_idx_0, int *ext_txpi_enable);

typedef int (*dnx_algo_port_db_nif_frame_preemptable_set_cb)(
    int unit, uint32 nif_idx_0, int frame_preemptable);

typedef int (*dnx_algo_port_db_nif_frame_preemptable_get_cb)(
    int unit, uint32 nif_idx_0, int *frame_preemptable);

typedef int (*dnx_algo_port_db_nif_flr_flr_fw_support_set_cb)(
    int unit, uint32 nif_idx_0, int flr_fw_support);

typedef int (*dnx_algo_port_db_nif_flr_flr_fw_support_get_cb)(
    int unit, uint32 nif_idx_0, int *flr_fw_support);

typedef int (*dnx_algo_port_db_nif_flr_link_config_set_cb)(
    int unit, uint32 nif_idx_0, bcm_port_flr_link_config_t link_config);

typedef int (*dnx_algo_port_db_nif_flr_link_config_get_cb)(
    int unit, uint32 nif_idx_0, bcm_port_flr_link_config_t *link_config);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_set_cb)(
    int unit, uint32 phy_config_idx_0, CONST dnx_algo_port_signal_quality_phy_config_t *phy_config);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_get_cb)(
    int unit, uint32 phy_config_idx_0, dnx_algo_port_signal_quality_phy_config_t *phy_config);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_alloc_cb)(
    int unit);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_degrade_thr_set_cb)(
    int unit, uint32 phy_config_idx_0, uint32 degrade_thr);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_degrade_thr_get_cb)(
    int unit, uint32 phy_config_idx_0, uint32 *degrade_thr);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_degrade_cu_thr_set_cb)(
    int unit, uint32 phy_config_idx_0, uint32 degrade_cu_thr);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_degrade_cu_thr_get_cb)(
    int unit, uint32 phy_config_idx_0, uint32 *degrade_cu_thr);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_fail_thr_set_cb)(
    int unit, uint32 phy_config_idx_0, uint32 fail_thr);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_fail_thr_get_cb)(
    int unit, uint32 phy_config_idx_0, uint32 *fail_thr);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_fail_cu_thr_set_cb)(
    int unit, uint32 phy_config_idx_0, uint32 fail_cu_thr);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_fail_cu_thr_get_cb)(
    int unit, uint32 phy_config_idx_0, uint32 *fail_cu_thr);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_interval_set_cb)(
    int unit, uint32 phy_config_idx_0, uint32 interval);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_interval_get_cb)(
    int unit, uint32 phy_config_idx_0, uint32 *interval);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_action_enabled_set_cb)(
    int unit, uint32 phy_config_idx_0, uint32 action_enabled);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_action_enabled_get_cb)(
    int unit, uint32 phy_config_idx_0, uint32 *action_enabled);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_hold_off_interval_set_cb)(
    int unit, uint32 phy_config_idx_0, uint32 hold_off_interval);

typedef int (*dnx_algo_port_db_signal_quality_phy_config_hold_off_interval_get_cb)(
    int unit, uint32 phy_config_idx_0, uint32 *hold_off_interval);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_set_cb)(
    int unit, uint32 phy_state_idx_0, CONST dnx_algo_port_signal_quality_phy_state_t *phy_state);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_get_cb)(
    int unit, uint32 phy_state_idx_0, dnx_algo_port_signal_quality_phy_state_t *phy_state);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_alloc_cb)(
    int unit);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_interval_cnt_set_cb)(
    int unit, uint32 phy_state_idx_0, uint32 interval_cnt);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_interval_cnt_get_cb)(
    int unit, uint32 phy_state_idx_0, uint32 *interval_cnt);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_prev_error_rate_set_cb)(
    int unit, uint32 phy_state_idx_0, uint32 prev_error_rate);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_prev_error_rate_get_cb)(
    int unit, uint32 phy_state_idx_0, uint32 *prev_error_rate);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_prev_cnt_set_cb)(
    int unit, uint32 phy_state_idx_0, uint64 prev_cnt);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_prev_cnt_get_cb)(
    int unit, uint32 phy_state_idx_0, uint64 *prev_cnt);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_prev_uncorrectable_cnt_set_cb)(
    int unit, uint32 phy_state_idx_0, uint64 prev_uncorrectable_cnt);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_prev_uncorrectable_cnt_get_cb)(
    int unit, uint32 phy_state_idx_0, uint64 *prev_uncorrectable_cnt);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_prev_state_handler_set_cb)(
    int unit, uint32 phy_state_idx_0, uint32 prev_state_handler);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_prev_state_handler_get_cb)(
    int unit, uint32 phy_state_idx_0, uint32 *prev_state_handler);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_prev_state_sampler_set_cb)(
    int unit, uint32 phy_state_idx_0, uint32 prev_state_sampler);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_prev_state_sampler_get_cb)(
    int unit, uint32 phy_state_idx_0, uint32 *prev_state_sampler);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_hold_off_interval_cnt_set_cb)(
    int unit, uint32 phy_state_idx_0, uint32 hold_off_interval_cnt);

typedef int (*dnx_algo_port_db_signal_quality_phy_state_hold_off_interval_cnt_get_cb)(
    int unit, uint32 phy_state_idx_0, uint32 *hold_off_interval_cnt);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_set_cb)(
    int unit, bcm_pbmp_t enabled_ports);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_get_cb)(
    int unit, bcm_pbmp_t *enabled_ports);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_neq_cb)(
    int unit, _shr_pbmp_t input_pbmp, uint8 *result);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_eq_cb)(
    int unit, _shr_pbmp_t input_pbmp, uint8 *result);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_member_cb)(
    int unit, uint32 _input_port, uint8 *result);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_not_null_cb)(
    int unit, uint8 *result);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_is_null_cb)(
    int unit, uint8 *result);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_count_cb)(
    int unit, int *result);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_xor_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_remove_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_assign_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_get_cb)(
    int unit, _shr_pbmp_t *output_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_and_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_negate_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_or_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_clear_cb)(
    int unit);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_port_add_cb)(
    int unit, uint32 _input_port);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_port_flip_cb)(
    int unit, uint32 _input_port);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_port_remove_cb)(
    int unit, uint32 _input_port);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_port_set_cb)(
    int unit, uint32 _input_port);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_ports_range_add_cb)(
    int unit, uint32 _first_port, uint32 _range);

typedef int (*dnx_algo_port_db_signal_quality_enabled_ports_pbmp_fmt_cb)(
    int unit, char* _buffer);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_set_cb)(
    int unit, bcm_pbmp_t measure_mode);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_get_cb)(
    int unit, bcm_pbmp_t *measure_mode);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_neq_cb)(
    int unit, _shr_pbmp_t input_pbmp, uint8 *result);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_eq_cb)(
    int unit, _shr_pbmp_t input_pbmp, uint8 *result);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_member_cb)(
    int unit, uint32 _input_port, uint8 *result);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_not_null_cb)(
    int unit, uint8 *result);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_is_null_cb)(
    int unit, uint8 *result);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_count_cb)(
    int unit, int *result);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_xor_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_remove_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_assign_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_get_cb)(
    int unit, _shr_pbmp_t *output_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_and_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_negate_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_or_cb)(
    int unit, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_clear_cb)(
    int unit);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_port_add_cb)(
    int unit, uint32 _input_port);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_port_flip_cb)(
    int unit, uint32 _input_port);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_port_remove_cb)(
    int unit, uint32 _input_port);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_port_set_cb)(
    int unit, uint32 _input_port);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_ports_range_add_cb)(
    int unit, uint32 _first_port, uint32 _range);

typedef int (*dnx_algo_port_db_signal_quality_measure_mode_pbmp_fmt_cb)(
    int unit, char* _buffer);

typedef int (*dnx_algo_port_db_in_tm_set_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, CONST dnx_algo_port_db_in_tm_t *in_tm);

typedef int (*dnx_algo_port_db_in_tm_get_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, dnx_algo_port_db_in_tm_t *in_tm);

typedef int (*dnx_algo_port_db_in_tm_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

typedef int (*dnx_algo_port_db_in_tm_ref_count_set_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, int ref_count);

typedef int (*dnx_algo_port_db_in_tm_ref_count_get_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, int *ref_count);

typedef int (*dnx_algo_port_db_in_tm_ref_count_inc_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, uint32 inc_value);

typedef int (*dnx_algo_port_db_in_tm_ref_count_dec_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, uint32 dec_value);

typedef int (*dnx_algo_port_db_in_tm_in_tm_port_set_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, uint32 in_tm_port);

typedef int (*dnx_algo_port_db_in_tm_in_tm_port_get_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, uint32 *in_tm_port);

typedef int (*dnx_algo_port_db_in_tm_core_set_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, bcm_core_t core);

typedef int (*dnx_algo_port_db_in_tm_core_get_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, bcm_core_t *core);

typedef int (*dnx_algo_port_db_in_tm_in_tm_port_nof_set_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, int in_tm_port_nof);

typedef int (*dnx_algo_port_db_in_tm_in_tm_port_nof_get_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, int *in_tm_port_nof);

typedef int (*dnx_algo_port_db_in_tm_master_logical_port_set_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_in_tm_master_logical_port_get_cb)(
    int unit, uint32 in_tm_idx_0, uint32 in_tm_idx_1, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_pp_dsp_db_set_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, CONST dnx_algo_port_db_pp_dsp_t *pp_dsp_db);

typedef int (*dnx_algo_port_db_pp_dsp_db_get_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, dnx_algo_port_db_pp_dsp_t *pp_dsp_db);

typedef int (*dnx_algo_port_db_pp_dsp_db_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

typedef int (*dnx_algo_port_db_pp_dsp_db_valid_set_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, int valid);

typedef int (*dnx_algo_port_db_pp_dsp_db_valid_get_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, int *valid);

typedef int (*dnx_algo_port_db_pp_dsp_db_pp_dsp_set_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, uint32 pp_dsp);

typedef int (*dnx_algo_port_db_pp_dsp_db_pp_dsp_get_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, uint32 *pp_dsp);

typedef int (*dnx_algo_port_db_pp_dsp_db_core_set_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, bcm_core_t core);

typedef int (*dnx_algo_port_db_pp_dsp_db_core_get_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, bcm_core_t *core);

typedef int (*dnx_algo_port_db_pp_dsp_db_out_tm_handle_set_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, CONST dnx_algo_port_db_2d_handle_t *out_tm_handle);

typedef int (*dnx_algo_port_db_pp_dsp_db_out_tm_handle_get_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, dnx_algo_port_db_2d_handle_t *out_tm_handle);

typedef int (*dnx_algo_port_db_pp_dsp_db_out_tm_handle_h0_set_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, int h0);

typedef int (*dnx_algo_port_db_pp_dsp_db_out_tm_handle_h0_get_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, int *h0);

typedef int (*dnx_algo_port_db_pp_dsp_db_out_tm_handle_h1_set_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, int h1);

typedef int (*dnx_algo_port_db_pp_dsp_db_out_tm_handle_h1_get_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, int *h1);

typedef int (*dnx_algo_port_db_pp_dsp_db_master_logical_port_set_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_pp_dsp_db_master_logical_port_get_cb)(
    int unit, uint32 pp_dsp_db_idx_0, uint32 pp_dsp_db_idx_1, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_out_tm_set_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, CONST dnx_algo_port_db_out_tm_t *out_tm);

typedef int (*dnx_algo_port_db_out_tm_get_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, dnx_algo_port_db_out_tm_t *out_tm);

typedef int (*dnx_algo_port_db_out_tm_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

typedef int (*dnx_algo_port_db_out_tm_ref_count_set_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, int ref_count);

typedef int (*dnx_algo_port_db_out_tm_ref_count_get_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, int *ref_count);

typedef int (*dnx_algo_port_db_out_tm_ref_count_inc_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, uint32 inc_value);

typedef int (*dnx_algo_port_db_out_tm_ref_count_dec_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, uint32 dec_value);

typedef int (*dnx_algo_port_db_out_tm_out_tm_port_set_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, uint32 out_tm_port);

typedef int (*dnx_algo_port_db_out_tm_out_tm_port_get_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, uint32 *out_tm_port);

typedef int (*dnx_algo_port_db_out_tm_core_set_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, bcm_core_t core);

typedef int (*dnx_algo_port_db_out_tm_core_get_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, bcm_core_t *core);

typedef int (*dnx_algo_port_db_out_tm_base_q_pair_set_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, int base_q_pair);

typedef int (*dnx_algo_port_db_out_tm_base_q_pair_get_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, int *base_q_pair);

typedef int (*dnx_algo_port_db_out_tm_priorities_set_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, int priorities);

typedef int (*dnx_algo_port_db_out_tm_priorities_get_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, int *priorities);

typedef int (*dnx_algo_port_db_out_tm_is_mc_set_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, int is_mc);

typedef int (*dnx_algo_port_db_out_tm_is_mc_get_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, int *is_mc);

typedef int (*dnx_algo_port_db_out_tm_master_logical_port_set_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_out_tm_master_logical_port_get_cb)(
    int unit, uint32 out_tm_idx_0, uint32 out_tm_idx_1, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_sch_set_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, CONST dnx_algo_port_db_sch_t *sch);

typedef int (*dnx_algo_port_db_sch_get_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, dnx_algo_port_db_sch_t *sch);

typedef int (*dnx_algo_port_db_sch_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

typedef int (*dnx_algo_port_db_sch_ref_count_set_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int ref_count);

typedef int (*dnx_algo_port_db_sch_ref_count_get_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int *ref_count);

typedef int (*dnx_algo_port_db_sch_ref_count_inc_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, uint32 inc_value);

typedef int (*dnx_algo_port_db_sch_ref_count_dec_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, uint32 dec_value);

typedef int (*dnx_algo_port_db_sch_base_hr_set_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int base_hr);

typedef int (*dnx_algo_port_db_sch_base_hr_get_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int *base_hr);

typedef int (*dnx_algo_port_db_sch_sch_priorities_set_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int sch_priorities);

typedef int (*dnx_algo_port_db_sch_sch_priorities_get_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int *sch_priorities);

typedef int (*dnx_algo_port_db_sch_master_logical_port_set_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_sch_master_logical_port_get_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_pp_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, CONST dnx_algo_port_db_pp_t *pp);

typedef int (*dnx_algo_port_db_pp_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, dnx_algo_port_db_pp_t *pp);

typedef int (*dnx_algo_port_db_pp_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

typedef int (*dnx_algo_port_db_pp_ref_count_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int ref_count);

typedef int (*dnx_algo_port_db_pp_ref_count_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int *ref_count);

typedef int (*dnx_algo_port_db_pp_ref_count_inc_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, uint32 inc_value);

typedef int (*dnx_algo_port_db_pp_ref_count_dec_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, uint32 dec_value);

typedef int (*dnx_algo_port_db_pp_pp_port_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, uint32 pp_port);

typedef int (*dnx_algo_port_db_pp_pp_port_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, uint32 *pp_port);

typedef int (*dnx_algo_port_db_pp_core_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_core_t core);

typedef int (*dnx_algo_port_db_pp_core_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_core_t *core);

typedef int (*dnx_algo_port_db_pp_is_lag_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int is_lag);

typedef int (*dnx_algo_port_db_pp_is_lag_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int *is_lag);

typedef int (*dnx_algo_port_db_pp_lag_id_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_trunk_t lag_id);

typedef int (*dnx_algo_port_db_pp_lag_id_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_trunk_t *lag_id);

typedef int (*dnx_algo_port_db_pp_master_logical_port_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_pp_master_logical_port_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_pp_header_mode_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, dnx_algo_port_header_mode_e header_mode);

typedef int (*dnx_algo_port_db_pp_header_mode_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, dnx_algo_port_header_mode_e *header_mode);

typedef int (*dnx_algo_port_db_pp_ingress_llvp_profile_valid_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int ingress_llvp_profile_valid);

typedef int (*dnx_algo_port_db_pp_ingress_llvp_profile_valid_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int *ingress_llvp_profile_valid);

typedef int (*dnx_algo_port_db_pp_egress_llvp_profile_valid_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int egress_llvp_profile_valid);

typedef int (*dnx_algo_port_db_pp_egress_llvp_profile_valid_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int *egress_llvp_profile_valid);

typedef int (*dnx_algo_port_db_pp_header_type_in_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int header_type_in);

typedef int (*dnx_algo_port_db_pp_header_type_in_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int *header_type_in);

typedef int (*dnx_algo_port_db_pp_header_type_out_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int header_type_out);

typedef int (*dnx_algo_port_db_pp_header_type_out_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int *header_type_out);

typedef int (*dnx_algo_port_db_pp_alloc_set_cb)(
    int unit, uint32 pp_alloc_idx_0, dnx_algo_res_t pp_alloc);

typedef int (*dnx_algo_port_db_pp_alloc_get_cb)(
    int unit, uint32 pp_alloc_idx_0, dnx_algo_res_t *pp_alloc);

typedef int (*dnx_algo_port_db_pp_alloc_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_algo_port_db_pp_alloc_create_cb)(
    int unit, uint32 pp_alloc_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*dnx_algo_port_db_pp_alloc_allocate_single_cb)(
    int unit, uint32 pp_alloc_idx_0, uint32 flags, void *extra_arguments, int *element);

typedef int (*dnx_algo_port_db_pp_alloc_free_single_cb)(
    int unit, uint32 pp_alloc_idx_0, int element, void *extra_arguments);

typedef int (*dnx_algo_port_db_pp_alloc_is_allocated_cb)(
    int unit, uint32 pp_alloc_idx_0, int element, uint8 *is_allocated);

typedef int (*dnx_algo_port_db_ilkn_set_cb)(
    int unit, uint32 ilkn_idx_0, CONST dnx_algo_port_db_ilkn_t *ilkn);

typedef int (*dnx_algo_port_db_ilkn_get_cb)(
    int unit, uint32 ilkn_idx_0, dnx_algo_port_db_ilkn_t *ilkn);

typedef int (*dnx_algo_port_db_ilkn_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_algo_port_db_ilkn_valid_set_cb)(
    int unit, uint32 ilkn_idx_0, int valid);

typedef int (*dnx_algo_port_db_ilkn_valid_get_cb)(
    int unit, uint32 ilkn_idx_0, int *valid);

typedef int (*dnx_algo_port_db_ilkn_master_logical_port_set_cb)(
    int unit, uint32 ilkn_idx_0, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_ilkn_master_logical_port_get_cb)(
    int unit, uint32 ilkn_idx_0, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_ilkn_nof_segments_set_cb)(
    int unit, uint32 ilkn_idx_0, int nof_segments);

typedef int (*dnx_algo_port_db_ilkn_nof_segments_get_cb)(
    int unit, uint32 ilkn_idx_0, int *nof_segments);

typedef int (*dnx_algo_port_db_ilkn_is_over_fabric_set_cb)(
    int unit, uint32 ilkn_idx_0, int is_over_fabric);

typedef int (*dnx_algo_port_db_ilkn_is_over_fabric_get_cb)(
    int unit, uint32 ilkn_idx_0, int *is_over_fabric);

typedef int (*dnx_algo_port_db_ilkn_is_elk_set_cb)(
    int unit, uint32 ilkn_idx_0, int is_elk);

typedef int (*dnx_algo_port_db_ilkn_is_elk_get_cb)(
    int unit, uint32 ilkn_idx_0, int *is_elk);

typedef int (*dnx_algo_port_db_ilkn_lanes_set_cb)(
    int unit, uint32 ilkn_idx_0, bcm_pbmp_t lanes);

typedef int (*dnx_algo_port_db_ilkn_lanes_get_cb)(
    int unit, uint32 ilkn_idx_0, bcm_pbmp_t *lanes);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_neq_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp, uint8 *result);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_eq_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp, uint8 *result);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_member_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _input_port, uint8 *result);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_not_null_cb)(
    int unit, uint32 ilkn_idx_0, uint8 *result);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_is_null_cb)(
    int unit, uint32 ilkn_idx_0, uint8 *result);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_count_cb)(
    int unit, uint32 ilkn_idx_0, int *result);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_xor_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_remove_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_assign_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_get_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t *output_pbmp);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_and_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_negate_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_or_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_clear_cb)(
    int unit, uint32 ilkn_idx_0);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_port_add_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _input_port);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_port_flip_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _input_port);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_port_remove_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _input_port);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_port_set_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _input_port);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_ports_range_add_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _first_port, uint32 _range);

typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_fmt_cb)(
    int unit, uint32 ilkn_idx_0, char* _buffer);

typedef int (*dnx_algo_port_db_ilkn_priority_set_cb)(
    int unit, uint32 ilkn_idx_0, bcm_port_nif_scheduler_t priority);

typedef int (*dnx_algo_port_db_ilkn_priority_get_cb)(
    int unit, uint32 ilkn_idx_0, bcm_port_nif_scheduler_t *priority);

typedef int (*dnx_algo_port_db_flexe_client_set_cb)(
    int unit, uint32 client_idx_0, CONST dnx_algo_port_db_flexe_client_t *client);

typedef int (*dnx_algo_port_db_flexe_client_get_cb)(
    int unit, uint32 client_idx_0, dnx_algo_port_db_flexe_client_t *client);

typedef int (*dnx_algo_port_db_flexe_client_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_algo_port_db_flexe_client_valid_set_cb)(
    int unit, uint32 client_idx_0, int valid);

typedef int (*dnx_algo_port_db_flexe_client_valid_get_cb)(
    int unit, uint32 client_idx_0, int *valid);

typedef int (*dnx_algo_port_db_flexe_client_client_index_set_cb)(
    int unit, uint32 client_idx_0, int client_index);

typedef int (*dnx_algo_port_db_flexe_client_client_index_get_cb)(
    int unit, uint32 client_idx_0, int *client_index);

typedef int (*dnx_algo_port_db_flexe_client_client_id_set_cb)(
    int unit, uint32 client_idx_0, int client_id);

typedef int (*dnx_algo_port_db_flexe_client_client_id_get_cb)(
    int unit, uint32 client_idx_0, int *client_id);

typedef int (*dnx_algo_port_db_flexe_client_master_logical_port_set_cb)(
    int unit, uint32 client_idx_0, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_flexe_client_master_logical_port_get_cb)(
    int unit, uint32 client_idx_0, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_flexe_client_is_bypass_set_cb)(
    int unit, uint32 client_idx_0, int is_bypass);

typedef int (*dnx_algo_port_db_flexe_client_is_bypass_get_cb)(
    int unit, uint32 client_idx_0, int *is_bypass);

typedef int (*dnx_algo_port_db_flexe_client_bas_period_set_cb)(
    int unit, uint32 client_idx_0, bcm_port_flexe_oam_base_period_t bas_period);

typedef int (*dnx_algo_port_db_flexe_client_bas_period_get_cb)(
    int unit, uint32 client_idx_0, bcm_port_flexe_oam_base_period_t *bas_period);

typedef int (*dnx_algo_port_db_flexe_client_stat_channel_set_cb)(
    int unit, uint32 client_idx_0, int stat_channel);

typedef int (*dnx_algo_port_db_flexe_client_stat_channel_get_cb)(
    int unit, uint32 client_idx_0, int *stat_channel);

typedef int (*dnx_algo_port_db_flexe_mac_set_cb)(
    int unit, uint32 mac_idx_0, CONST dnx_algo_port_db_flexe_mac_t *mac);

typedef int (*dnx_algo_port_db_flexe_mac_get_cb)(
    int unit, uint32 mac_idx_0, dnx_algo_port_db_flexe_mac_t *mac);

typedef int (*dnx_algo_port_db_flexe_mac_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_algo_port_db_flexe_mac_valid_set_cb)(
    int unit, uint32 mac_idx_0, int valid);

typedef int (*dnx_algo_port_db_flexe_mac_valid_get_cb)(
    int unit, uint32 mac_idx_0, int *valid);

typedef int (*dnx_algo_port_db_flexe_mac_master_logical_port_set_cb)(
    int unit, uint32 mac_idx_0, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_flexe_mac_master_logical_port_get_cb)(
    int unit, uint32 mac_idx_0, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_flexe_mac_client_index_set_cb)(
    int unit, uint32 mac_idx_0, int client_index);

typedef int (*dnx_algo_port_db_flexe_mac_client_index_get_cb)(
    int unit, uint32 mac_idx_0, int *client_index);

typedef int (*dnx_algo_port_db_flexe_mac_logical_fifos_set_cb)(
    int unit, uint32 mac_idx_0, uint32 logical_fifos_idx_0, dnx_algo_port_rmc_info_t logical_fifos);

typedef int (*dnx_algo_port_db_flexe_mac_logical_fifos_get_cb)(
    int unit, uint32 mac_idx_0, uint32 logical_fifos_idx_0, dnx_algo_port_rmc_info_t *logical_fifos);

typedef int (*dnx_algo_port_db_flexe_mac_loopback_enable_set_cb)(
    int unit, uint32 mac_idx_0, int loopback_enable);

typedef int (*dnx_algo_port_db_flexe_mac_loopback_enable_get_cb)(
    int unit, uint32 mac_idx_0, int *loopback_enable);

typedef int (*dnx_algo_port_db_flexe_mac_mgmt_channel_set_cb)(
    int unit, uint32 mac_idx_0, int mgmt_channel);

typedef int (*dnx_algo_port_db_flexe_mac_mgmt_channel_get_cb)(
    int unit, uint32 mac_idx_0, int *mgmt_channel);

typedef int (*dnx_algo_port_db_flexe_sar_set_cb)(
    int unit, uint32 sar_idx_0, CONST dnx_algo_port_db_flexe_sar_t *sar);

typedef int (*dnx_algo_port_db_flexe_sar_get_cb)(
    int unit, uint32 sar_idx_0, dnx_algo_port_db_flexe_sar_t *sar);

typedef int (*dnx_algo_port_db_flexe_sar_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_algo_port_db_flexe_sar_valid_set_cb)(
    int unit, uint32 sar_idx_0, int valid);

typedef int (*dnx_algo_port_db_flexe_sar_valid_get_cb)(
    int unit, uint32 sar_idx_0, int *valid);

typedef int (*dnx_algo_port_db_flexe_sar_master_logical_port_set_cb)(
    int unit, uint32 sar_idx_0, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_flexe_sar_master_logical_port_get_cb)(
    int unit, uint32 sar_idx_0, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_flexe_sar_client_index_set_cb)(
    int unit, uint32 sar_idx_0, int client_index);

typedef int (*dnx_algo_port_db_flexe_sar_client_index_get_cb)(
    int unit, uint32 sar_idx_0, int *client_index);

typedef int (*dnx_algo_port_db_flexe_sar_virtual_flexe_channel_set_cb)(
    int unit, uint32 sar_idx_0, int virtual_flexe_channel);

typedef int (*dnx_algo_port_db_flexe_sar_virtual_flexe_channel_get_cb)(
    int unit, uint32 sar_idx_0, int *virtual_flexe_channel);

typedef int (*dnx_algo_port_db_flexe_sar_rx_is_eth_set_cb)(
    int unit, uint32 sar_idx_0, int rx_is_eth);

typedef int (*dnx_algo_port_db_flexe_sar_rx_is_eth_get_cb)(
    int unit, uint32 sar_idx_0, int *rx_is_eth);

typedef int (*dnx_algo_port_db_flexe_sar_tx_is_eth_set_cb)(
    int unit, uint32 sar_idx_0, int tx_is_eth);

typedef int (*dnx_algo_port_db_flexe_sar_tx_is_eth_get_cb)(
    int unit, uint32 sar_idx_0, int *tx_is_eth);

typedef int (*dnx_algo_port_db_flexe_phy_set_cb)(
    int unit, uint32 phy_idx_0, CONST dnx_algo_port_db_flexe_phy_t *phy);

typedef int (*dnx_algo_port_db_flexe_phy_get_cb)(
    int unit, uint32 phy_idx_0, dnx_algo_port_db_flexe_phy_t *phy);

typedef int (*dnx_algo_port_db_flexe_phy_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_algo_port_db_flexe_phy_valid_set_cb)(
    int unit, uint32 phy_idx_0, int valid);

typedef int (*dnx_algo_port_db_flexe_phy_valid_get_cb)(
    int unit, uint32 phy_idx_0, int *valid);

typedef int (*dnx_algo_port_db_flexe_phy_master_logical_port_set_cb)(
    int unit, uint32 phy_idx_0, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_flexe_phy_master_logical_port_get_cb)(
    int unit, uint32 phy_idx_0, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_flexe_phy_core_port_set_cb)(
    int unit, uint32 phy_idx_0, int core_port);

typedef int (*dnx_algo_port_db_flexe_phy_core_port_get_cb)(
    int unit, uint32 phy_idx_0, int *core_port);

typedef int (*dnx_algo_port_db_flexe_phy_channel_set_cb)(
    int unit, uint32 phy_idx_0, int channel);

typedef int (*dnx_algo_port_db_flexe_phy_channel_get_cb)(
    int unit, uint32 phy_idx_0, int *channel);

typedef int (*dnx_algo_port_db_flexe_phy_rx_1588_en_set_cb)(
    int unit, uint32 phy_idx_0, int rx_1588_en);

typedef int (*dnx_algo_port_db_flexe_phy_rx_1588_en_get_cb)(
    int unit, uint32 phy_idx_0, int *rx_1588_en);

typedef int (*dnx_algo_port_db_flexe_phy_tx_1588_en_set_cb)(
    int unit, uint32 phy_idx_0, int tx_1588_en);

typedef int (*dnx_algo_port_db_flexe_phy_tx_1588_en_get_cb)(
    int unit, uint32 phy_idx_0, int *tx_1588_en);

typedef int (*dnx_algo_port_db_flexe_phy_mac1_channel_set_cb)(
    int unit, uint32 phy_idx_0, int mac1_channel);

typedef int (*dnx_algo_port_db_flexe_phy_mac1_channel_get_cb)(
    int unit, uint32 phy_idx_0, int *mac1_channel);

typedef int (*dnx_algo_port_db_flexe_phy_mac2_channel_set_cb)(
    int unit, uint32 phy_idx_0, int mac2_channel);

typedef int (*dnx_algo_port_db_flexe_phy_mac2_channel_get_cb)(
    int unit, uint32 phy_idx_0, int *mac2_channel);

typedef int (*dnx_algo_port_db_fabric_set_cb)(
    int unit, uint32 fabric_idx_0, CONST dnx_algo_port_db_fabric_t *fabric);

typedef int (*dnx_algo_port_db_fabric_get_cb)(
    int unit, uint32 fabric_idx_0, dnx_algo_port_db_fabric_t *fabric);

typedef int (*dnx_algo_port_db_fabric_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_algo_port_db_fabric_valid_set_cb)(
    int unit, uint32 fabric_idx_0, int valid);

typedef int (*dnx_algo_port_db_fabric_valid_get_cb)(
    int unit, uint32 fabric_idx_0, int *valid);

typedef int (*dnx_algo_port_db_fabric_link_set_cb)(
    int unit, uint32 fabric_idx_0, int link);

typedef int (*dnx_algo_port_db_fabric_link_get_cb)(
    int unit, uint32 fabric_idx_0, int *link);

typedef int (*dnx_algo_port_db_fabric_master_logical_port_set_cb)(
    int unit, uint32 fabric_idx_0, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_fabric_master_logical_port_get_cb)(
    int unit, uint32 fabric_idx_0, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_fabric_prbs_mode_set_cb)(
    int unit, uint32 fabric_idx_0, int prbs_mode);

typedef int (*dnx_algo_port_db_fabric_prbs_mode_get_cb)(
    int unit, uint32 fabric_idx_0, int *prbs_mode);

typedef int (*dnx_algo_port_db_fabric_speed_set_cb)(
    int unit, uint32 fabric_idx_0, int speed);

typedef int (*dnx_algo_port_db_fabric_speed_get_cb)(
    int unit, uint32 fabric_idx_0, int *speed);

typedef int (*dnx_algo_port_db_fabric_loopback_original_link_training_set_cb)(
    int unit, uint32 fabric_idx_0, int loopback_original_link_training);

typedef int (*dnx_algo_port_db_fabric_loopback_original_link_training_get_cb)(
    int unit, uint32 fabric_idx_0, int *loopback_original_link_training);

typedef int (*dnx_algo_port_db_fabric_loopback_original_phy_lane_config_set_cb)(
    int unit, uint32 fabric_idx_0, int loopback_original_phy_lane_config);

typedef int (*dnx_algo_port_db_fabric_loopback_original_phy_lane_config_get_cb)(
    int unit, uint32 fabric_idx_0, int *loopback_original_phy_lane_config);

typedef int (*dnx_algo_port_db_fabric_fec_type_set_cb)(
    int unit, uint32 fabric_idx_0, int fec_type);

typedef int (*dnx_algo_port_db_fabric_fec_type_get_cb)(
    int unit, uint32 fabric_idx_0, int *fec_type);

typedef int (*dnx_algo_port_db_tm_interface_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, CONST dnx_algo_port_db_tm_interface_t *tm_interface);

typedef int (*dnx_algo_port_db_tm_interface_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, dnx_algo_port_db_tm_interface_t *tm_interface);

typedef int (*dnx_algo_port_db_tm_interface_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

typedef int (*dnx_algo_port_db_tm_interface_valid_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int valid);

typedef int (*dnx_algo_port_db_tm_interface_valid_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int *valid);

typedef int (*dnx_algo_port_db_tm_interface_is_egress_interleave_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int is_egress_interleave);

typedef int (*dnx_algo_port_db_tm_interface_is_egress_interleave_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int *is_egress_interleave);

typedef int (*dnx_algo_port_db_tm_interface_egr_if_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int egr_if);

typedef int (*dnx_algo_port_db_tm_interface_egr_if_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int *egr_if);

typedef int (*dnx_algo_port_db_tm_interface_ch_egr_if_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int ch_egr_if);

typedef int (*dnx_algo_port_db_tm_interface_ch_egr_if_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int *ch_egr_if);

typedef int (*dnx_algo_port_db_tm_interface_master_logical_port_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_tm_interface_master_logical_port_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_tm_interface_rcy_mirror_logical_port_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, bcm_port_t rcy_mirror_logical_port);

typedef int (*dnx_algo_port_db_tm_interface_rcy_mirror_logical_port_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, bcm_port_t *rcy_mirror_logical_port);

typedef int (*dnx_algo_port_db_interface_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, CONST dnx_algo_port_db_interface_t *interface);

typedef int (*dnx_algo_port_db_interface_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, dnx_algo_port_db_interface_t *interface);

typedef int (*dnx_algo_port_db_interface_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

typedef int (*dnx_algo_port_db_interface_valid_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int valid);

typedef int (*dnx_algo_port_db_interface_valid_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int *valid);

typedef int (*dnx_algo_port_db_interface_core_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_core_t core);

typedef int (*dnx_algo_port_db_interface_core_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_core_t *core);

typedef int (*dnx_algo_port_db_interface_is_channelized_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int is_channelized);

typedef int (*dnx_algo_port_db_interface_is_channelized_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int *is_channelized);

typedef int (*dnx_algo_port_db_interface_is_ingress_interleave_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int is_ingress_interleave);

typedef int (*dnx_algo_port_db_interface_is_ingress_interleave_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int *is_ingress_interleave);

typedef int (*dnx_algo_port_db_interface_rx_speed_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int rx_speed);

typedef int (*dnx_algo_port_db_interface_rx_speed_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int *rx_speed);

typedef int (*dnx_algo_port_db_interface_tx_speed_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int tx_speed);

typedef int (*dnx_algo_port_db_interface_tx_speed_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int *tx_speed);

typedef int (*dnx_algo_port_db_interface_tdm_mode_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, dnx_algo_port_if_tdm_mode_e tdm_mode);

typedef int (*dnx_algo_port_db_interface_tdm_mode_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, dnx_algo_port_if_tdm_mode_e *tdm_mode);

typedef int (*dnx_algo_port_db_interface_master_tdm_logical_port_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_port_t master_tdm_logical_port);

typedef int (*dnx_algo_port_db_interface_master_tdm_logical_port_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_port_t *master_tdm_logical_port);

typedef int (*dnx_algo_port_db_interface_master_non_tdm_logical_port_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_port_t master_non_tdm_logical_port);

typedef int (*dnx_algo_port_db_interface_master_non_tdm_logical_port_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_port_t *master_non_tdm_logical_port);

typedef int (*dnx_algo_port_db_interface_master_logical_port_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_interface_master_logical_port_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_interface_tm_interface_handle_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, CONST dnx_algo_port_db_2d_handle_t *tm_interface_handle);

typedef int (*dnx_algo_port_db_interface_tm_interface_handle_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, dnx_algo_port_db_2d_handle_t *tm_interface_handle);

typedef int (*dnx_algo_port_db_interface_tm_interface_handle_h0_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int h0);

typedef int (*dnx_algo_port_db_interface_tm_interface_handle_h0_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int *h0);

typedef int (*dnx_algo_port_db_interface_tm_interface_handle_h1_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int h1);

typedef int (*dnx_algo_port_db_interface_tm_interface_handle_h1_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int *h1);

typedef int (*dnx_algo_port_db_interface_fec_type_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int fec_type);

typedef int (*dnx_algo_port_db_interface_fec_type_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int *fec_type);

typedef int (*dnx_algo_port_db_sch_interface_set_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, CONST dnx_algo_port_db_sch_if_t *sch_interface);

typedef int (*dnx_algo_port_db_sch_interface_get_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, dnx_algo_port_db_sch_if_t *sch_interface);

typedef int (*dnx_algo_port_db_sch_interface_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

typedef int (*dnx_algo_port_db_sch_interface_valid_set_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int valid);

typedef int (*dnx_algo_port_db_sch_interface_valid_get_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int *valid);

typedef int (*dnx_algo_port_db_sch_interface_sch_if_set_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int sch_if);

typedef int (*dnx_algo_port_db_sch_interface_sch_if_get_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int *sch_if);

typedef int (*dnx_algo_port_db_sch_interface_priority_propagation_enable_set_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int priority_propagation_enable);

typedef int (*dnx_algo_port_db_sch_interface_priority_propagation_enable_get_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int *priority_propagation_enable);

typedef int (*dnx_algo_port_db_sch_interface_master_logical_port_set_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, bcm_port_t master_logical_port);

typedef int (*dnx_algo_port_db_sch_interface_master_logical_port_get_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, bcm_port_t *master_logical_port);

typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_set_cb)(
    int unit, dnx_algo_template_t skip_first_user_defined_header_size_profile_data);

typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_get_cb)(
    int unit, dnx_algo_template_t *skip_first_user_defined_header_size_profile_data);

typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_exchange_cb)(
    int unit, uint32 flags, int nof_references, const dnx_algo_skip_first_header_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_profile_data_get_cb)(
    int unit, int profile, int *ref_count, dnx_algo_skip_first_header_info_t *profile_data);

typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_profile_get_cb)(
    int unit, const dnx_algo_skip_first_header_info_t *profile_data, int *profile);

typedef int (*dnx_algo_port_db_prd_set_cb)(
    int unit, uint32 prd_idx_0, uint32 prd_idx_1, CONST dnx_algo_prd_info_t *prd);

typedef int (*dnx_algo_port_db_prd_get_cb)(
    int unit, uint32 prd_idx_0, uint32 prd_idx_1, dnx_algo_prd_info_t *prd);

typedef int (*dnx_algo_port_db_prd_alloc_cb)(
    int unit);

typedef int (*dnx_algo_port_db_prd_port_to_profile_map_set_cb)(
    int unit, uint32 prd_idx_0, uint32 prd_idx_1, uint32 port_to_profile_map);

typedef int (*dnx_algo_port_db_prd_port_to_profile_map_get_cb)(
    int unit, uint32 prd_idx_0, uint32 prd_idx_1, uint32 *port_to_profile_map);

typedef int (*dnx_algo_port_db_ptc_alloc_set_cb)(
    int unit, uint32 ptc_alloc_idx_0, dnx_algo_res_t ptc_alloc);

typedef int (*dnx_algo_port_db_ptc_alloc_get_cb)(
    int unit, uint32 ptc_alloc_idx_0, dnx_algo_res_t *ptc_alloc);

typedef int (*dnx_algo_port_db_ptc_alloc_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_algo_port_db_ptc_alloc_create_cb)(
    int unit, uint32 ptc_alloc_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*dnx_algo_port_db_ptc_alloc_allocate_single_cb)(
    int unit, uint32 ptc_alloc_idx_0, uint32 flags, void *extra_arguments, int *element);

typedef int (*dnx_algo_port_db_ptc_alloc_free_single_cb)(
    int unit, uint32 ptc_alloc_idx_0, int element, void *extra_arguments);

typedef int (*dnx_algo_port_db_ptc_alloc_is_allocated_cb)(
    int unit, uint32 ptc_alloc_idx_0, int element, uint8 *is_allocated);

typedef int (*dnx_algo_port_db_ptc_alloc_print_cb)(
    int unit, uint32 ptc_alloc_idx_0);

typedef int (*dnx_algo_port_db_ptc_alloc_nof_allocated_elements_in_range_get_cb)(
    int unit, uint32 ptc_alloc_idx_0, int range_start, int nof_elements_in_range, int *nof_allocated_elements);

typedef int (*dnx_algo_port_db_ptc_alloc_advanced_algorithm_info_get_cb)(
    int unit, uint32 ptc_alloc_idx_0, void *algorithm_info);

typedef int (*dnx_algo_port_db_counter_port_map_set_cb)(
    int unit, uint32 counter_port_map_idx_0, CONST counter_port_map_t *counter_port_map);

typedef int (*dnx_algo_port_db_counter_port_map_get_cb)(
    int unit, uint32 counter_port_map_idx_0, counter_port_map_t *counter_port_map);

typedef int (*dnx_algo_port_db_counter_port_map_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_algo_port_db_counter_port_map_port_set_cb)(
    int unit, uint32 counter_port_map_idx_0, uint32 port);

typedef int (*dnx_algo_port_db_counter_port_map_port_get_cb)(
    int unit, uint32 counter_port_map_idx_0, uint32 *port);

typedef int (*dnx_algo_port_db_counter_port_map_priority_group_set_cb)(
    int unit, uint32 counter_port_map_idx_0, uint32 priority_group);

typedef int (*dnx_algo_port_db_counter_port_map_priority_group_get_cb)(
    int unit, uint32 counter_port_map_idx_0, uint32 *priority_group);

typedef int (*dnx_algo_port_db_port_rx_fifo_counter_set_cb)(
    int unit, CONST port_rx_fifo_counter_t *port_rx_fifo_counter);

typedef int (*dnx_algo_port_db_port_rx_fifo_counter_get_cb)(
    int unit, port_rx_fifo_counter_t *port_rx_fifo_counter);

typedef int (*dnx_algo_port_db_port_rx_fifo_counter_port_set_cb)(
    int unit, uint32 port);

typedef int (*dnx_algo_port_db_port_rx_fifo_counter_port_get_cb)(
    int unit, uint32 *port);

typedef int (*dnx_algo_port_db_tx_fifo_counter_port_map_set_cb)(
    int unit, uint32 tx_fifo_counter_port_map_idx_0, CONST tx_fifo_counter_port_map_t *tx_fifo_counter_port_map);

typedef int (*dnx_algo_port_db_tx_fifo_counter_port_map_get_cb)(
    int unit, uint32 tx_fifo_counter_port_map_idx_0, tx_fifo_counter_port_map_t *tx_fifo_counter_port_map);

typedef int (*dnx_algo_port_db_tx_fifo_counter_port_map_alloc_cb)(
    int unit);

typedef int (*dnx_algo_port_db_tx_fifo_counter_port_map_port_set_cb)(
    int unit, uint32 tx_fifo_counter_port_map_idx_0, uint32 port);

typedef int (*dnx_algo_port_db_tx_fifo_counter_port_map_port_get_cb)(
    int unit, uint32 tx_fifo_counter_port_map_idx_0, uint32 *port);

/*
 * STRUCTs
 */

typedef struct {
    dnx_algo_port_db_general_dummy_set_cb set;
    dnx_algo_port_db_general_dummy_get_cb get;
} dnx_algo_port_db_general_dummy_cbs;

typedef struct {
    dnx_algo_port_db_general_portmod_mac_soft_reset_cb_lock_create_cb create;
    dnx_algo_port_db_general_portmod_mac_soft_reset_cb_lock_is_created_cb is_created;
    dnx_algo_port_db_general_portmod_mac_soft_reset_cb_lock_take_cb take;
    dnx_algo_port_db_general_portmod_mac_soft_reset_cb_lock_give_cb give;
} dnx_algo_port_db_general_portmod_mac_soft_reset_cb_lock_cbs;

typedef struct {
    dnx_algo_port_db_general_dummy_cbs dummy;
    dnx_algo_port_db_general_portmod_mac_soft_reset_cb_lock_cbs portmod_mac_soft_reset_cb_lock;
} dnx_algo_port_db_general_cbs;

typedef struct {
    dnx_algo_port_db_logical_state_set_cb set;
    dnx_algo_port_db_logical_state_get_cb get;
} dnx_algo_port_db_logical_state_cbs;

typedef struct {
    dnx_algo_port_db_logical_info_set_cb set;
    dnx_algo_port_db_logical_info_get_cb get;
} dnx_algo_port_db_logical_info_cbs;

typedef struct {
    dnx_algo_port_db_logical_interface_type_set_cb set;
    dnx_algo_port_db_logical_interface_type_get_cb get;
} dnx_algo_port_db_logical_interface_type_cbs;

typedef struct {
    dnx_algo_port_db_logical_interface_offset_set_cb set;
    dnx_algo_port_db_logical_interface_offset_get_cb get;
} dnx_algo_port_db_logical_interface_offset_cbs;

typedef struct {
    dnx_algo_port_db_logical_nif_handle_set_cb set;
    dnx_algo_port_db_logical_nif_handle_get_cb get;
} dnx_algo_port_db_logical_nif_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_in_tm_handle_h0_set_cb set;
    dnx_algo_port_db_logical_in_tm_handle_h0_get_cb get;
} dnx_algo_port_db_logical_in_tm_handle_h0_cbs;

typedef struct {
    dnx_algo_port_db_logical_in_tm_handle_h1_set_cb set;
    dnx_algo_port_db_logical_in_tm_handle_h1_get_cb get;
} dnx_algo_port_db_logical_in_tm_handle_h1_cbs;

typedef struct {
    dnx_algo_port_db_logical_in_tm_handle_set_cb set;
    dnx_algo_port_db_logical_in_tm_handle_get_cb get;
    dnx_algo_port_db_logical_in_tm_handle_h0_cbs h0;
    dnx_algo_port_db_logical_in_tm_handle_h1_cbs h1;
} dnx_algo_port_db_logical_in_tm_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_pp_dsp_handle_h0_set_cb set;
    dnx_algo_port_db_logical_pp_dsp_handle_h0_get_cb get;
} dnx_algo_port_db_logical_pp_dsp_handle_h0_cbs;

typedef struct {
    dnx_algo_port_db_logical_pp_dsp_handle_h1_set_cb set;
    dnx_algo_port_db_logical_pp_dsp_handle_h1_get_cb get;
} dnx_algo_port_db_logical_pp_dsp_handle_h1_cbs;

typedef struct {
    dnx_algo_port_db_logical_pp_dsp_handle_set_cb set;
    dnx_algo_port_db_logical_pp_dsp_handle_get_cb get;
    dnx_algo_port_db_logical_pp_dsp_handle_h0_cbs h0;
    dnx_algo_port_db_logical_pp_dsp_handle_h1_cbs h1;
} dnx_algo_port_db_logical_pp_dsp_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_sch_handle_h0_set_cb set;
    dnx_algo_port_db_logical_sch_handle_h0_get_cb get;
} dnx_algo_port_db_logical_sch_handle_h0_cbs;

typedef struct {
    dnx_algo_port_db_logical_sch_handle_h1_set_cb set;
    dnx_algo_port_db_logical_sch_handle_h1_get_cb get;
} dnx_algo_port_db_logical_sch_handle_h1_cbs;

typedef struct {
    dnx_algo_port_db_logical_sch_handle_set_cb set;
    dnx_algo_port_db_logical_sch_handle_get_cb get;
    dnx_algo_port_db_logical_sch_handle_h0_cbs h0;
    dnx_algo_port_db_logical_sch_handle_h1_cbs h1;
} dnx_algo_port_db_logical_sch_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_sch_if_handle_h0_set_cb set;
    dnx_algo_port_db_logical_sch_if_handle_h0_get_cb get;
} dnx_algo_port_db_logical_sch_if_handle_h0_cbs;

typedef struct {
    dnx_algo_port_db_logical_sch_if_handle_h1_set_cb set;
    dnx_algo_port_db_logical_sch_if_handle_h1_get_cb get;
} dnx_algo_port_db_logical_sch_if_handle_h1_cbs;

typedef struct {
    dnx_algo_port_db_logical_sch_if_handle_set_cb set;
    dnx_algo_port_db_logical_sch_if_handle_get_cb get;
    dnx_algo_port_db_logical_sch_if_handle_h0_cbs h0;
    dnx_algo_port_db_logical_sch_if_handle_h1_cbs h1;
} dnx_algo_port_db_logical_sch_if_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_pp_handle_h0_set_cb set;
    dnx_algo_port_db_logical_pp_handle_h0_get_cb get;
} dnx_algo_port_db_logical_pp_handle_h0_cbs;

typedef struct {
    dnx_algo_port_db_logical_pp_handle_h1_set_cb set;
    dnx_algo_port_db_logical_pp_handle_h1_get_cb get;
} dnx_algo_port_db_logical_pp_handle_h1_cbs;

typedef struct {
    dnx_algo_port_db_logical_pp_handle_set_cb set;
    dnx_algo_port_db_logical_pp_handle_get_cb get;
    dnx_algo_port_db_logical_pp_handle_h0_cbs h0;
    dnx_algo_port_db_logical_pp_handle_h1_cbs h1;
} dnx_algo_port_db_logical_pp_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_ptc_set_cb set;
    dnx_algo_port_db_logical_ptc_get_cb get;
} dnx_algo_port_db_logical_ptc_cbs;

typedef struct {
    dnx_algo_port_db_logical_ilkn_handle_set_cb set;
    dnx_algo_port_db_logical_ilkn_handle_get_cb get;
} dnx_algo_port_db_logical_ilkn_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_flexe_client_handle_set_cb set;
    dnx_algo_port_db_logical_flexe_client_handle_get_cb get;
} dnx_algo_port_db_logical_flexe_client_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_flexe_mac_handle_set_cb set;
    dnx_algo_port_db_logical_flexe_mac_handle_get_cb get;
} dnx_algo_port_db_logical_flexe_mac_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_flexe_sar_handle_set_cb set;
    dnx_algo_port_db_logical_flexe_sar_handle_get_cb get;
} dnx_algo_port_db_logical_flexe_sar_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_flexe_phy_handle_set_cb set;
    dnx_algo_port_db_logical_flexe_phy_handle_get_cb get;
} dnx_algo_port_db_logical_flexe_phy_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_tm_interface_handle_h0_set_cb set;
    dnx_algo_port_db_logical_tm_interface_handle_h0_get_cb get;
} dnx_algo_port_db_logical_tm_interface_handle_h0_cbs;

typedef struct {
    dnx_algo_port_db_logical_tm_interface_handle_h1_set_cb set;
    dnx_algo_port_db_logical_tm_interface_handle_h1_get_cb get;
} dnx_algo_port_db_logical_tm_interface_handle_h1_cbs;

typedef struct {
    dnx_algo_port_db_logical_tm_interface_handle_set_cb set;
    dnx_algo_port_db_logical_tm_interface_handle_get_cb get;
    dnx_algo_port_db_logical_tm_interface_handle_h0_cbs h0;
    dnx_algo_port_db_logical_tm_interface_handle_h1_cbs h1;
} dnx_algo_port_db_logical_tm_interface_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_interface_handle_h0_set_cb set;
    dnx_algo_port_db_logical_interface_handle_h0_get_cb get;
} dnx_algo_port_db_logical_interface_handle_h0_cbs;

typedef struct {
    dnx_algo_port_db_logical_interface_handle_h1_set_cb set;
    dnx_algo_port_db_logical_interface_handle_h1_get_cb get;
} dnx_algo_port_db_logical_interface_handle_h1_cbs;

typedef struct {
    dnx_algo_port_db_logical_interface_handle_set_cb set;
    dnx_algo_port_db_logical_interface_handle_get_cb get;
    dnx_algo_port_db_logical_interface_handle_h0_cbs h0;
    dnx_algo_port_db_logical_interface_handle_h1_cbs h1;
} dnx_algo_port_db_logical_interface_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_fabric_handle_set_cb set;
    dnx_algo_port_db_logical_fabric_handle_get_cb get;
} dnx_algo_port_db_logical_fabric_handle_cbs;

typedef struct {
    dnx_algo_port_db_logical_in_channel_set_cb set;
    dnx_algo_port_db_logical_in_channel_get_cb get;
} dnx_algo_port_db_logical_in_channel_cbs;

typedef struct {
    dnx_algo_port_db_logical_out_channel_set_cb set;
    dnx_algo_port_db_logical_out_channel_get_cb get;
} dnx_algo_port_db_logical_out_channel_cbs;

typedef struct {
    dnx_algo_port_db_logical_tdm_mode_set_cb set;
    dnx_algo_port_db_logical_tdm_mode_get_cb get;
} dnx_algo_port_db_logical_tdm_mode_cbs;

typedef struct {
    dnx_algo_port_db_logical_port_app_flags_set_cb set;
    dnx_algo_port_db_logical_port_app_flags_get_cb get;
} dnx_algo_port_db_logical_port_app_flags_cbs;

typedef struct {
    dnx_algo_port_db_logical_set_cb set;
    dnx_algo_port_db_logical_get_cb get;
    dnx_algo_port_db_logical_state_cbs state;
    dnx_algo_port_db_logical_info_cbs info;
    dnx_algo_port_db_logical_interface_type_cbs interface_type;
    dnx_algo_port_db_logical_interface_offset_cbs interface_offset;
    dnx_algo_port_db_logical_nif_handle_cbs nif_handle;
    dnx_algo_port_db_logical_in_tm_handle_cbs in_tm_handle;
    dnx_algo_port_db_logical_pp_dsp_handle_cbs pp_dsp_handle;
    dnx_algo_port_db_logical_sch_handle_cbs sch_handle;
    dnx_algo_port_db_logical_sch_if_handle_cbs sch_if_handle;
    dnx_algo_port_db_logical_pp_handle_cbs pp_handle;
    dnx_algo_port_db_logical_ptc_cbs ptc;
    dnx_algo_port_db_logical_ilkn_handle_cbs ilkn_handle;
    dnx_algo_port_db_logical_flexe_client_handle_cbs flexe_client_handle;
    dnx_algo_port_db_logical_flexe_mac_handle_cbs flexe_mac_handle;
    dnx_algo_port_db_logical_flexe_sar_handle_cbs flexe_sar_handle;
    dnx_algo_port_db_logical_flexe_phy_handle_cbs flexe_phy_handle;
    dnx_algo_port_db_logical_tm_interface_handle_cbs tm_interface_handle;
    dnx_algo_port_db_logical_interface_handle_cbs interface_handle;
    dnx_algo_port_db_logical_fabric_handle_cbs fabric_handle;
    dnx_algo_port_db_logical_in_channel_cbs in_channel;
    dnx_algo_port_db_logical_out_channel_cbs out_channel;
    dnx_algo_port_db_logical_tdm_mode_cbs tdm_mode;
    dnx_algo_port_db_logical_port_app_flags_cbs port_app_flags;
} dnx_algo_port_db_logical_cbs;

typedef struct {
    dnx_algo_port_db_nif_valid_set_cb set;
    dnx_algo_port_db_nif_valid_get_cb get;
} dnx_algo_port_db_nif_valid_cbs;

typedef struct {
    dnx_algo_port_db_nif_phys_set_cb set;
    dnx_algo_port_db_nif_phys_get_cb get;
    dnx_algo_port_db_nif_phys_pbmp_neq_cb pbmp_neq;
    dnx_algo_port_db_nif_phys_pbmp_eq_cb pbmp_eq;
    dnx_algo_port_db_nif_phys_pbmp_member_cb pbmp_member;
    dnx_algo_port_db_nif_phys_pbmp_not_null_cb pbmp_not_null;
    dnx_algo_port_db_nif_phys_pbmp_is_null_cb pbmp_is_null;
    dnx_algo_port_db_nif_phys_pbmp_count_cb pbmp_count;
    dnx_algo_port_db_nif_phys_pbmp_xor_cb pbmp_xor;
    dnx_algo_port_db_nif_phys_pbmp_remove_cb pbmp_remove;
    dnx_algo_port_db_nif_phys_pbmp_assign_cb pbmp_assign;
    dnx_algo_port_db_nif_phys_pbmp_get_cb pbmp_get;
    dnx_algo_port_db_nif_phys_pbmp_and_cb pbmp_and;
    dnx_algo_port_db_nif_phys_pbmp_negate_cb pbmp_negate;
    dnx_algo_port_db_nif_phys_pbmp_or_cb pbmp_or;
    dnx_algo_port_db_nif_phys_pbmp_clear_cb pbmp_clear;
    dnx_algo_port_db_nif_phys_pbmp_port_add_cb pbmp_port_add;
    dnx_algo_port_db_nif_phys_pbmp_port_flip_cb pbmp_port_flip;
    dnx_algo_port_db_nif_phys_pbmp_port_remove_cb pbmp_port_remove;
    dnx_algo_port_db_nif_phys_pbmp_port_set_cb pbmp_port_set;
    dnx_algo_port_db_nif_phys_pbmp_ports_range_add_cb pbmp_ports_range_add;
    dnx_algo_port_db_nif_phys_pbmp_fmt_cb pbmp_fmt;
} dnx_algo_port_db_nif_phys_cbs;

typedef struct {
    dnx_algo_port_db_nif_first_phy_set_cb set;
    dnx_algo_port_db_nif_first_phy_get_cb get;
} dnx_algo_port_db_nif_first_phy_cbs;

typedef struct {
    dnx_algo_port_db_nif_master_logical_port_set_cb set;
    dnx_algo_port_db_nif_master_logical_port_get_cb get;
} dnx_algo_port_db_nif_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_nif_logical_fifos_set_cb set;
    dnx_algo_port_db_nif_logical_fifos_get_cb get;
} dnx_algo_port_db_nif_logical_fifos_cbs;

typedef struct {
    dnx_algo_port_db_nif_latch_down_set_cb set;
    dnx_algo_port_db_nif_latch_down_get_cb get;
} dnx_algo_port_db_nif_latch_down_cbs;

typedef struct {
    dnx_algo_port_db_nif_loopback_original_link_training_set_cb set;
    dnx_algo_port_db_nif_loopback_original_link_training_get_cb get;
} dnx_algo_port_db_nif_loopback_original_link_training_cbs;

typedef struct {
    dnx_algo_port_db_nif_loopback_original_phy_lane_config_set_cb set;
    dnx_algo_port_db_nif_loopback_original_phy_lane_config_get_cb get;
} dnx_algo_port_db_nif_loopback_original_phy_lane_config_cbs;

typedef struct {
    dnx_algo_port_db_nif_ext_txpi_enable_set_cb set;
    dnx_algo_port_db_nif_ext_txpi_enable_get_cb get;
} dnx_algo_port_db_nif_ext_txpi_enable_cbs;

typedef struct {
    dnx_algo_port_db_nif_frame_preemptable_set_cb set;
    dnx_algo_port_db_nif_frame_preemptable_get_cb get;
} dnx_algo_port_db_nif_frame_preemptable_cbs;

typedef struct {
    dnx_algo_port_db_nif_flr_flr_fw_support_set_cb set;
    dnx_algo_port_db_nif_flr_flr_fw_support_get_cb get;
} dnx_algo_port_db_nif_flr_flr_fw_support_cbs;

typedef struct {
    dnx_algo_port_db_nif_flr_link_config_set_cb set;
    dnx_algo_port_db_nif_flr_link_config_get_cb get;
} dnx_algo_port_db_nif_flr_link_config_cbs;

typedef struct {
    dnx_algo_port_db_nif_flr_flr_fw_support_cbs flr_fw_support;
    dnx_algo_port_db_nif_flr_link_config_cbs link_config;
} dnx_algo_port_db_nif_flr_cbs;

typedef struct {
    dnx_algo_port_db_nif_set_cb set;
    dnx_algo_port_db_nif_get_cb get;
    dnx_algo_port_db_nif_alloc_cb alloc;
    dnx_algo_port_db_nif_valid_cbs valid;
    dnx_algo_port_db_nif_phys_cbs phys;
    dnx_algo_port_db_nif_first_phy_cbs first_phy;
    dnx_algo_port_db_nif_master_logical_port_cbs master_logical_port;
    dnx_algo_port_db_nif_logical_fifos_cbs logical_fifos;
    dnx_algo_port_db_nif_latch_down_cbs latch_down;
    dnx_algo_port_db_nif_loopback_original_link_training_cbs loopback_original_link_training;
    dnx_algo_port_db_nif_loopback_original_phy_lane_config_cbs loopback_original_phy_lane_config;
    dnx_algo_port_db_nif_ext_txpi_enable_cbs ext_txpi_enable;
    dnx_algo_port_db_nif_frame_preemptable_cbs frame_preemptable;
    dnx_algo_port_db_nif_flr_cbs flr;
} dnx_algo_port_db_nif_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_config_degrade_thr_set_cb set;
    dnx_algo_port_db_signal_quality_phy_config_degrade_thr_get_cb get;
} dnx_algo_port_db_signal_quality_phy_config_degrade_thr_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_config_degrade_cu_thr_set_cb set;
    dnx_algo_port_db_signal_quality_phy_config_degrade_cu_thr_get_cb get;
} dnx_algo_port_db_signal_quality_phy_config_degrade_cu_thr_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_config_fail_thr_set_cb set;
    dnx_algo_port_db_signal_quality_phy_config_fail_thr_get_cb get;
} dnx_algo_port_db_signal_quality_phy_config_fail_thr_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_config_fail_cu_thr_set_cb set;
    dnx_algo_port_db_signal_quality_phy_config_fail_cu_thr_get_cb get;
} dnx_algo_port_db_signal_quality_phy_config_fail_cu_thr_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_config_interval_set_cb set;
    dnx_algo_port_db_signal_quality_phy_config_interval_get_cb get;
} dnx_algo_port_db_signal_quality_phy_config_interval_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_config_action_enabled_set_cb set;
    dnx_algo_port_db_signal_quality_phy_config_action_enabled_get_cb get;
} dnx_algo_port_db_signal_quality_phy_config_action_enabled_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_config_hold_off_interval_set_cb set;
    dnx_algo_port_db_signal_quality_phy_config_hold_off_interval_get_cb get;
} dnx_algo_port_db_signal_quality_phy_config_hold_off_interval_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_config_set_cb set;
    dnx_algo_port_db_signal_quality_phy_config_get_cb get;
    dnx_algo_port_db_signal_quality_phy_config_alloc_cb alloc;
    dnx_algo_port_db_signal_quality_phy_config_degrade_thr_cbs degrade_thr;
    dnx_algo_port_db_signal_quality_phy_config_degrade_cu_thr_cbs degrade_cu_thr;
    dnx_algo_port_db_signal_quality_phy_config_fail_thr_cbs fail_thr;
    dnx_algo_port_db_signal_quality_phy_config_fail_cu_thr_cbs fail_cu_thr;
    dnx_algo_port_db_signal_quality_phy_config_interval_cbs interval;
    dnx_algo_port_db_signal_quality_phy_config_action_enabled_cbs action_enabled;
    dnx_algo_port_db_signal_quality_phy_config_hold_off_interval_cbs hold_off_interval;
} dnx_algo_port_db_signal_quality_phy_config_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_state_interval_cnt_set_cb set;
    dnx_algo_port_db_signal_quality_phy_state_interval_cnt_get_cb get;
} dnx_algo_port_db_signal_quality_phy_state_interval_cnt_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_state_prev_error_rate_set_cb set;
    dnx_algo_port_db_signal_quality_phy_state_prev_error_rate_get_cb get;
} dnx_algo_port_db_signal_quality_phy_state_prev_error_rate_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_state_prev_cnt_set_cb set;
    dnx_algo_port_db_signal_quality_phy_state_prev_cnt_get_cb get;
} dnx_algo_port_db_signal_quality_phy_state_prev_cnt_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_state_prev_uncorrectable_cnt_set_cb set;
    dnx_algo_port_db_signal_quality_phy_state_prev_uncorrectable_cnt_get_cb get;
} dnx_algo_port_db_signal_quality_phy_state_prev_uncorrectable_cnt_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_state_prev_state_handler_set_cb set;
    dnx_algo_port_db_signal_quality_phy_state_prev_state_handler_get_cb get;
} dnx_algo_port_db_signal_quality_phy_state_prev_state_handler_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_state_prev_state_sampler_set_cb set;
    dnx_algo_port_db_signal_quality_phy_state_prev_state_sampler_get_cb get;
} dnx_algo_port_db_signal_quality_phy_state_prev_state_sampler_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_state_hold_off_interval_cnt_set_cb set;
    dnx_algo_port_db_signal_quality_phy_state_hold_off_interval_cnt_get_cb get;
} dnx_algo_port_db_signal_quality_phy_state_hold_off_interval_cnt_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_state_set_cb set;
    dnx_algo_port_db_signal_quality_phy_state_get_cb get;
    dnx_algo_port_db_signal_quality_phy_state_alloc_cb alloc;
    dnx_algo_port_db_signal_quality_phy_state_interval_cnt_cbs interval_cnt;
    dnx_algo_port_db_signal_quality_phy_state_prev_error_rate_cbs prev_error_rate;
    dnx_algo_port_db_signal_quality_phy_state_prev_cnt_cbs prev_cnt;
    dnx_algo_port_db_signal_quality_phy_state_prev_uncorrectable_cnt_cbs prev_uncorrectable_cnt;
    dnx_algo_port_db_signal_quality_phy_state_prev_state_handler_cbs prev_state_handler;
    dnx_algo_port_db_signal_quality_phy_state_prev_state_sampler_cbs prev_state_sampler;
    dnx_algo_port_db_signal_quality_phy_state_hold_off_interval_cnt_cbs hold_off_interval_cnt;
} dnx_algo_port_db_signal_quality_phy_state_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_enabled_ports_set_cb set;
    dnx_algo_port_db_signal_quality_enabled_ports_get_cb get;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_neq_cb pbmp_neq;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_eq_cb pbmp_eq;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_member_cb pbmp_member;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_not_null_cb pbmp_not_null;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_is_null_cb pbmp_is_null;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_count_cb pbmp_count;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_xor_cb pbmp_xor;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_remove_cb pbmp_remove;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_assign_cb pbmp_assign;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_get_cb pbmp_get;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_and_cb pbmp_and;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_negate_cb pbmp_negate;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_or_cb pbmp_or;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_clear_cb pbmp_clear;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_port_add_cb pbmp_port_add;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_port_flip_cb pbmp_port_flip;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_port_remove_cb pbmp_port_remove;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_port_set_cb pbmp_port_set;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_ports_range_add_cb pbmp_ports_range_add;
    dnx_algo_port_db_signal_quality_enabled_ports_pbmp_fmt_cb pbmp_fmt;
} dnx_algo_port_db_signal_quality_enabled_ports_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_measure_mode_set_cb set;
    dnx_algo_port_db_signal_quality_measure_mode_get_cb get;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_neq_cb pbmp_neq;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_eq_cb pbmp_eq;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_member_cb pbmp_member;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_not_null_cb pbmp_not_null;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_is_null_cb pbmp_is_null;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_count_cb pbmp_count;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_xor_cb pbmp_xor;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_remove_cb pbmp_remove;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_assign_cb pbmp_assign;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_get_cb pbmp_get;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_and_cb pbmp_and;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_negate_cb pbmp_negate;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_or_cb pbmp_or;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_clear_cb pbmp_clear;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_port_add_cb pbmp_port_add;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_port_flip_cb pbmp_port_flip;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_port_remove_cb pbmp_port_remove;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_port_set_cb pbmp_port_set;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_ports_range_add_cb pbmp_ports_range_add;
    dnx_algo_port_db_signal_quality_measure_mode_pbmp_fmt_cb pbmp_fmt;
} dnx_algo_port_db_signal_quality_measure_mode_cbs;

typedef struct {
    dnx_algo_port_db_signal_quality_phy_config_cbs phy_config;
    dnx_algo_port_db_signal_quality_phy_state_cbs phy_state;
    dnx_algo_port_db_signal_quality_enabled_ports_cbs enabled_ports;
    dnx_algo_port_db_signal_quality_measure_mode_cbs measure_mode;
} dnx_algo_port_db_signal_quality_cbs;

typedef struct {
    dnx_algo_port_db_in_tm_ref_count_set_cb set;
    dnx_algo_port_db_in_tm_ref_count_get_cb get;
    dnx_algo_port_db_in_tm_ref_count_inc_cb inc;
    dnx_algo_port_db_in_tm_ref_count_dec_cb dec;
} dnx_algo_port_db_in_tm_ref_count_cbs;

typedef struct {
    dnx_algo_port_db_in_tm_in_tm_port_set_cb set;
    dnx_algo_port_db_in_tm_in_tm_port_get_cb get;
} dnx_algo_port_db_in_tm_in_tm_port_cbs;

typedef struct {
    dnx_algo_port_db_in_tm_core_set_cb set;
    dnx_algo_port_db_in_tm_core_get_cb get;
} dnx_algo_port_db_in_tm_core_cbs;

typedef struct {
    dnx_algo_port_db_in_tm_in_tm_port_nof_set_cb set;
    dnx_algo_port_db_in_tm_in_tm_port_nof_get_cb get;
} dnx_algo_port_db_in_tm_in_tm_port_nof_cbs;

typedef struct {
    dnx_algo_port_db_in_tm_master_logical_port_set_cb set;
    dnx_algo_port_db_in_tm_master_logical_port_get_cb get;
} dnx_algo_port_db_in_tm_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_in_tm_set_cb set;
    dnx_algo_port_db_in_tm_get_cb get;
    dnx_algo_port_db_in_tm_alloc_cb alloc;
    dnx_algo_port_db_in_tm_ref_count_cbs ref_count;
    dnx_algo_port_db_in_tm_in_tm_port_cbs in_tm_port;
    dnx_algo_port_db_in_tm_core_cbs core;
    dnx_algo_port_db_in_tm_in_tm_port_nof_cbs in_tm_port_nof;
    dnx_algo_port_db_in_tm_master_logical_port_cbs master_logical_port;
} dnx_algo_port_db_in_tm_cbs;

typedef struct {
    dnx_algo_port_db_pp_dsp_db_valid_set_cb set;
    dnx_algo_port_db_pp_dsp_db_valid_get_cb get;
} dnx_algo_port_db_pp_dsp_db_valid_cbs;

typedef struct {
    dnx_algo_port_db_pp_dsp_db_pp_dsp_set_cb set;
    dnx_algo_port_db_pp_dsp_db_pp_dsp_get_cb get;
} dnx_algo_port_db_pp_dsp_db_pp_dsp_cbs;

typedef struct {
    dnx_algo_port_db_pp_dsp_db_core_set_cb set;
    dnx_algo_port_db_pp_dsp_db_core_get_cb get;
} dnx_algo_port_db_pp_dsp_db_core_cbs;

typedef struct {
    dnx_algo_port_db_pp_dsp_db_out_tm_handle_h0_set_cb set;
    dnx_algo_port_db_pp_dsp_db_out_tm_handle_h0_get_cb get;
} dnx_algo_port_db_pp_dsp_db_out_tm_handle_h0_cbs;

typedef struct {
    dnx_algo_port_db_pp_dsp_db_out_tm_handle_h1_set_cb set;
    dnx_algo_port_db_pp_dsp_db_out_tm_handle_h1_get_cb get;
} dnx_algo_port_db_pp_dsp_db_out_tm_handle_h1_cbs;

typedef struct {
    dnx_algo_port_db_pp_dsp_db_out_tm_handle_set_cb set;
    dnx_algo_port_db_pp_dsp_db_out_tm_handle_get_cb get;
    dnx_algo_port_db_pp_dsp_db_out_tm_handle_h0_cbs h0;
    dnx_algo_port_db_pp_dsp_db_out_tm_handle_h1_cbs h1;
} dnx_algo_port_db_pp_dsp_db_out_tm_handle_cbs;

typedef struct {
    dnx_algo_port_db_pp_dsp_db_master_logical_port_set_cb set;
    dnx_algo_port_db_pp_dsp_db_master_logical_port_get_cb get;
} dnx_algo_port_db_pp_dsp_db_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_pp_dsp_db_set_cb set;
    dnx_algo_port_db_pp_dsp_db_get_cb get;
    dnx_algo_port_db_pp_dsp_db_alloc_cb alloc;
    dnx_algo_port_db_pp_dsp_db_valid_cbs valid;
    dnx_algo_port_db_pp_dsp_db_pp_dsp_cbs pp_dsp;
    dnx_algo_port_db_pp_dsp_db_core_cbs core;
    dnx_algo_port_db_pp_dsp_db_out_tm_handle_cbs out_tm_handle;
    dnx_algo_port_db_pp_dsp_db_master_logical_port_cbs master_logical_port;
} dnx_algo_port_db_pp_dsp_db_cbs;

typedef struct {
    dnx_algo_port_db_out_tm_ref_count_set_cb set;
    dnx_algo_port_db_out_tm_ref_count_get_cb get;
    dnx_algo_port_db_out_tm_ref_count_inc_cb inc;
    dnx_algo_port_db_out_tm_ref_count_dec_cb dec;
} dnx_algo_port_db_out_tm_ref_count_cbs;

typedef struct {
    dnx_algo_port_db_out_tm_out_tm_port_set_cb set;
    dnx_algo_port_db_out_tm_out_tm_port_get_cb get;
} dnx_algo_port_db_out_tm_out_tm_port_cbs;

typedef struct {
    dnx_algo_port_db_out_tm_core_set_cb set;
    dnx_algo_port_db_out_tm_core_get_cb get;
} dnx_algo_port_db_out_tm_core_cbs;

typedef struct {
    dnx_algo_port_db_out_tm_base_q_pair_set_cb set;
    dnx_algo_port_db_out_tm_base_q_pair_get_cb get;
} dnx_algo_port_db_out_tm_base_q_pair_cbs;

typedef struct {
    dnx_algo_port_db_out_tm_priorities_set_cb set;
    dnx_algo_port_db_out_tm_priorities_get_cb get;
} dnx_algo_port_db_out_tm_priorities_cbs;

typedef struct {
    dnx_algo_port_db_out_tm_is_mc_set_cb set;
    dnx_algo_port_db_out_tm_is_mc_get_cb get;
} dnx_algo_port_db_out_tm_is_mc_cbs;

typedef struct {
    dnx_algo_port_db_out_tm_master_logical_port_set_cb set;
    dnx_algo_port_db_out_tm_master_logical_port_get_cb get;
} dnx_algo_port_db_out_tm_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_out_tm_set_cb set;
    dnx_algo_port_db_out_tm_get_cb get;
    dnx_algo_port_db_out_tm_alloc_cb alloc;
    dnx_algo_port_db_out_tm_ref_count_cbs ref_count;
    dnx_algo_port_db_out_tm_out_tm_port_cbs out_tm_port;
    dnx_algo_port_db_out_tm_core_cbs core;
    dnx_algo_port_db_out_tm_base_q_pair_cbs base_q_pair;
    dnx_algo_port_db_out_tm_priorities_cbs priorities;
    dnx_algo_port_db_out_tm_is_mc_cbs is_mc;
    dnx_algo_port_db_out_tm_master_logical_port_cbs master_logical_port;
} dnx_algo_port_db_out_tm_cbs;

typedef struct {
    dnx_algo_port_db_sch_ref_count_set_cb set;
    dnx_algo_port_db_sch_ref_count_get_cb get;
    dnx_algo_port_db_sch_ref_count_inc_cb inc;
    dnx_algo_port_db_sch_ref_count_dec_cb dec;
} dnx_algo_port_db_sch_ref_count_cbs;

typedef struct {
    dnx_algo_port_db_sch_base_hr_set_cb set;
    dnx_algo_port_db_sch_base_hr_get_cb get;
} dnx_algo_port_db_sch_base_hr_cbs;

typedef struct {
    dnx_algo_port_db_sch_sch_priorities_set_cb set;
    dnx_algo_port_db_sch_sch_priorities_get_cb get;
} dnx_algo_port_db_sch_sch_priorities_cbs;

typedef struct {
    dnx_algo_port_db_sch_master_logical_port_set_cb set;
    dnx_algo_port_db_sch_master_logical_port_get_cb get;
} dnx_algo_port_db_sch_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_sch_set_cb set;
    dnx_algo_port_db_sch_get_cb get;
    dnx_algo_port_db_sch_alloc_cb alloc;
    dnx_algo_port_db_sch_ref_count_cbs ref_count;
    dnx_algo_port_db_sch_base_hr_cbs base_hr;
    dnx_algo_port_db_sch_sch_priorities_cbs sch_priorities;
    dnx_algo_port_db_sch_master_logical_port_cbs master_logical_port;
} dnx_algo_port_db_sch_cbs;

typedef struct {
    dnx_algo_port_db_pp_ref_count_set_cb set;
    dnx_algo_port_db_pp_ref_count_get_cb get;
    dnx_algo_port_db_pp_ref_count_inc_cb inc;
    dnx_algo_port_db_pp_ref_count_dec_cb dec;
} dnx_algo_port_db_pp_ref_count_cbs;

typedef struct {
    dnx_algo_port_db_pp_pp_port_set_cb set;
    dnx_algo_port_db_pp_pp_port_get_cb get;
} dnx_algo_port_db_pp_pp_port_cbs;

typedef struct {
    dnx_algo_port_db_pp_core_set_cb set;
    dnx_algo_port_db_pp_core_get_cb get;
} dnx_algo_port_db_pp_core_cbs;

typedef struct {
    dnx_algo_port_db_pp_is_lag_set_cb set;
    dnx_algo_port_db_pp_is_lag_get_cb get;
} dnx_algo_port_db_pp_is_lag_cbs;

typedef struct {
    dnx_algo_port_db_pp_lag_id_set_cb set;
    dnx_algo_port_db_pp_lag_id_get_cb get;
} dnx_algo_port_db_pp_lag_id_cbs;

typedef struct {
    dnx_algo_port_db_pp_master_logical_port_set_cb set;
    dnx_algo_port_db_pp_master_logical_port_get_cb get;
} dnx_algo_port_db_pp_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_pp_header_mode_set_cb set;
    dnx_algo_port_db_pp_header_mode_get_cb get;
} dnx_algo_port_db_pp_header_mode_cbs;

typedef struct {
    dnx_algo_port_db_pp_ingress_llvp_profile_valid_set_cb set;
    dnx_algo_port_db_pp_ingress_llvp_profile_valid_get_cb get;
} dnx_algo_port_db_pp_ingress_llvp_profile_valid_cbs;

typedef struct {
    dnx_algo_port_db_pp_egress_llvp_profile_valid_set_cb set;
    dnx_algo_port_db_pp_egress_llvp_profile_valid_get_cb get;
} dnx_algo_port_db_pp_egress_llvp_profile_valid_cbs;

typedef struct {
    dnx_algo_port_db_pp_header_type_in_set_cb set;
    dnx_algo_port_db_pp_header_type_in_get_cb get;
} dnx_algo_port_db_pp_header_type_in_cbs;

typedef struct {
    dnx_algo_port_db_pp_header_type_out_set_cb set;
    dnx_algo_port_db_pp_header_type_out_get_cb get;
} dnx_algo_port_db_pp_header_type_out_cbs;

typedef struct {
    dnx_algo_port_db_pp_set_cb set;
    dnx_algo_port_db_pp_get_cb get;
    dnx_algo_port_db_pp_alloc_cb alloc;
    dnx_algo_port_db_pp_ref_count_cbs ref_count;
    dnx_algo_port_db_pp_pp_port_cbs pp_port;
    dnx_algo_port_db_pp_core_cbs core;
    dnx_algo_port_db_pp_is_lag_cbs is_lag;
    dnx_algo_port_db_pp_lag_id_cbs lag_id;
    dnx_algo_port_db_pp_master_logical_port_cbs master_logical_port;
    dnx_algo_port_db_pp_header_mode_cbs header_mode;
    dnx_algo_port_db_pp_ingress_llvp_profile_valid_cbs ingress_llvp_profile_valid;
    dnx_algo_port_db_pp_egress_llvp_profile_valid_cbs egress_llvp_profile_valid;
    dnx_algo_port_db_pp_header_type_in_cbs header_type_in;
    dnx_algo_port_db_pp_header_type_out_cbs header_type_out;
} dnx_algo_port_db_pp_cbs;

typedef struct {
    dnx_algo_port_db_pp_alloc_set_cb set;
    dnx_algo_port_db_pp_alloc_get_cb get;
    dnx_algo_port_db_pp_alloc_alloc_cb alloc;
    dnx_algo_port_db_pp_alloc_create_cb create;
    dnx_algo_port_db_pp_alloc_allocate_single_cb allocate_single;
    dnx_algo_port_db_pp_alloc_free_single_cb free_single;
    dnx_algo_port_db_pp_alloc_is_allocated_cb is_allocated;
} dnx_algo_port_db_pp_alloc_cbs;

typedef struct {
    dnx_algo_port_db_ilkn_valid_set_cb set;
    dnx_algo_port_db_ilkn_valid_get_cb get;
} dnx_algo_port_db_ilkn_valid_cbs;

typedef struct {
    dnx_algo_port_db_ilkn_master_logical_port_set_cb set;
    dnx_algo_port_db_ilkn_master_logical_port_get_cb get;
} dnx_algo_port_db_ilkn_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_ilkn_nof_segments_set_cb set;
    dnx_algo_port_db_ilkn_nof_segments_get_cb get;
} dnx_algo_port_db_ilkn_nof_segments_cbs;

typedef struct {
    dnx_algo_port_db_ilkn_is_over_fabric_set_cb set;
    dnx_algo_port_db_ilkn_is_over_fabric_get_cb get;
} dnx_algo_port_db_ilkn_is_over_fabric_cbs;

typedef struct {
    dnx_algo_port_db_ilkn_is_elk_set_cb set;
    dnx_algo_port_db_ilkn_is_elk_get_cb get;
} dnx_algo_port_db_ilkn_is_elk_cbs;

typedef struct {
    dnx_algo_port_db_ilkn_lanes_set_cb set;
    dnx_algo_port_db_ilkn_lanes_get_cb get;
    dnx_algo_port_db_ilkn_lanes_pbmp_neq_cb pbmp_neq;
    dnx_algo_port_db_ilkn_lanes_pbmp_eq_cb pbmp_eq;
    dnx_algo_port_db_ilkn_lanes_pbmp_member_cb pbmp_member;
    dnx_algo_port_db_ilkn_lanes_pbmp_not_null_cb pbmp_not_null;
    dnx_algo_port_db_ilkn_lanes_pbmp_is_null_cb pbmp_is_null;
    dnx_algo_port_db_ilkn_lanes_pbmp_count_cb pbmp_count;
    dnx_algo_port_db_ilkn_lanes_pbmp_xor_cb pbmp_xor;
    dnx_algo_port_db_ilkn_lanes_pbmp_remove_cb pbmp_remove;
    dnx_algo_port_db_ilkn_lanes_pbmp_assign_cb pbmp_assign;
    dnx_algo_port_db_ilkn_lanes_pbmp_get_cb pbmp_get;
    dnx_algo_port_db_ilkn_lanes_pbmp_and_cb pbmp_and;
    dnx_algo_port_db_ilkn_lanes_pbmp_negate_cb pbmp_negate;
    dnx_algo_port_db_ilkn_lanes_pbmp_or_cb pbmp_or;
    dnx_algo_port_db_ilkn_lanes_pbmp_clear_cb pbmp_clear;
    dnx_algo_port_db_ilkn_lanes_pbmp_port_add_cb pbmp_port_add;
    dnx_algo_port_db_ilkn_lanes_pbmp_port_flip_cb pbmp_port_flip;
    dnx_algo_port_db_ilkn_lanes_pbmp_port_remove_cb pbmp_port_remove;
    dnx_algo_port_db_ilkn_lanes_pbmp_port_set_cb pbmp_port_set;
    dnx_algo_port_db_ilkn_lanes_pbmp_ports_range_add_cb pbmp_ports_range_add;
    dnx_algo_port_db_ilkn_lanes_pbmp_fmt_cb pbmp_fmt;
} dnx_algo_port_db_ilkn_lanes_cbs;

typedef struct {
    dnx_algo_port_db_ilkn_priority_set_cb set;
    dnx_algo_port_db_ilkn_priority_get_cb get;
} dnx_algo_port_db_ilkn_priority_cbs;

typedef struct {
    dnx_algo_port_db_ilkn_set_cb set;
    dnx_algo_port_db_ilkn_get_cb get;
    dnx_algo_port_db_ilkn_alloc_cb alloc;
    dnx_algo_port_db_ilkn_valid_cbs valid;
    dnx_algo_port_db_ilkn_master_logical_port_cbs master_logical_port;
    dnx_algo_port_db_ilkn_nof_segments_cbs nof_segments;
    dnx_algo_port_db_ilkn_is_over_fabric_cbs is_over_fabric;
    dnx_algo_port_db_ilkn_is_elk_cbs is_elk;
    dnx_algo_port_db_ilkn_lanes_cbs lanes;
    dnx_algo_port_db_ilkn_priority_cbs priority;
} dnx_algo_port_db_ilkn_cbs;

typedef struct {
    dnx_algo_port_db_flexe_client_valid_set_cb set;
    dnx_algo_port_db_flexe_client_valid_get_cb get;
} dnx_algo_port_db_flexe_client_valid_cbs;

typedef struct {
    dnx_algo_port_db_flexe_client_client_index_set_cb set;
    dnx_algo_port_db_flexe_client_client_index_get_cb get;
} dnx_algo_port_db_flexe_client_client_index_cbs;

typedef struct {
    dnx_algo_port_db_flexe_client_client_id_set_cb set;
    dnx_algo_port_db_flexe_client_client_id_get_cb get;
} dnx_algo_port_db_flexe_client_client_id_cbs;

typedef struct {
    dnx_algo_port_db_flexe_client_master_logical_port_set_cb set;
    dnx_algo_port_db_flexe_client_master_logical_port_get_cb get;
} dnx_algo_port_db_flexe_client_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_flexe_client_is_bypass_set_cb set;
    dnx_algo_port_db_flexe_client_is_bypass_get_cb get;
} dnx_algo_port_db_flexe_client_is_bypass_cbs;

typedef struct {
    dnx_algo_port_db_flexe_client_bas_period_set_cb set;
    dnx_algo_port_db_flexe_client_bas_period_get_cb get;
} dnx_algo_port_db_flexe_client_bas_period_cbs;

typedef struct {
    dnx_algo_port_db_flexe_client_stat_channel_set_cb set;
    dnx_algo_port_db_flexe_client_stat_channel_get_cb get;
} dnx_algo_port_db_flexe_client_stat_channel_cbs;

typedef struct {
    dnx_algo_port_db_flexe_client_set_cb set;
    dnx_algo_port_db_flexe_client_get_cb get;
    dnx_algo_port_db_flexe_client_alloc_cb alloc;
    dnx_algo_port_db_flexe_client_valid_cbs valid;
    dnx_algo_port_db_flexe_client_client_index_cbs client_index;
    dnx_algo_port_db_flexe_client_client_id_cbs client_id;
    dnx_algo_port_db_flexe_client_master_logical_port_cbs master_logical_port;
    dnx_algo_port_db_flexe_client_is_bypass_cbs is_bypass;
    dnx_algo_port_db_flexe_client_bas_period_cbs bas_period;
    dnx_algo_port_db_flexe_client_stat_channel_cbs stat_channel;
} dnx_algo_port_db_flexe_client_cbs;

typedef struct {
    dnx_algo_port_db_flexe_mac_valid_set_cb set;
    dnx_algo_port_db_flexe_mac_valid_get_cb get;
} dnx_algo_port_db_flexe_mac_valid_cbs;

typedef struct {
    dnx_algo_port_db_flexe_mac_master_logical_port_set_cb set;
    dnx_algo_port_db_flexe_mac_master_logical_port_get_cb get;
} dnx_algo_port_db_flexe_mac_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_flexe_mac_client_index_set_cb set;
    dnx_algo_port_db_flexe_mac_client_index_get_cb get;
} dnx_algo_port_db_flexe_mac_client_index_cbs;

typedef struct {
    dnx_algo_port_db_flexe_mac_logical_fifos_set_cb set;
    dnx_algo_port_db_flexe_mac_logical_fifos_get_cb get;
} dnx_algo_port_db_flexe_mac_logical_fifos_cbs;

typedef struct {
    dnx_algo_port_db_flexe_mac_loopback_enable_set_cb set;
    dnx_algo_port_db_flexe_mac_loopback_enable_get_cb get;
} dnx_algo_port_db_flexe_mac_loopback_enable_cbs;

typedef struct {
    dnx_algo_port_db_flexe_mac_mgmt_channel_set_cb set;
    dnx_algo_port_db_flexe_mac_mgmt_channel_get_cb get;
} dnx_algo_port_db_flexe_mac_mgmt_channel_cbs;

typedef struct {
    dnx_algo_port_db_flexe_mac_set_cb set;
    dnx_algo_port_db_flexe_mac_get_cb get;
    dnx_algo_port_db_flexe_mac_alloc_cb alloc;
    dnx_algo_port_db_flexe_mac_valid_cbs valid;
    dnx_algo_port_db_flexe_mac_master_logical_port_cbs master_logical_port;
    dnx_algo_port_db_flexe_mac_client_index_cbs client_index;
    dnx_algo_port_db_flexe_mac_logical_fifos_cbs logical_fifos;
    dnx_algo_port_db_flexe_mac_loopback_enable_cbs loopback_enable;
    dnx_algo_port_db_flexe_mac_mgmt_channel_cbs mgmt_channel;
} dnx_algo_port_db_flexe_mac_cbs;

typedef struct {
    dnx_algo_port_db_flexe_sar_valid_set_cb set;
    dnx_algo_port_db_flexe_sar_valid_get_cb get;
} dnx_algo_port_db_flexe_sar_valid_cbs;

typedef struct {
    dnx_algo_port_db_flexe_sar_master_logical_port_set_cb set;
    dnx_algo_port_db_flexe_sar_master_logical_port_get_cb get;
} dnx_algo_port_db_flexe_sar_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_flexe_sar_client_index_set_cb set;
    dnx_algo_port_db_flexe_sar_client_index_get_cb get;
} dnx_algo_port_db_flexe_sar_client_index_cbs;

typedef struct {
    dnx_algo_port_db_flexe_sar_virtual_flexe_channel_set_cb set;
    dnx_algo_port_db_flexe_sar_virtual_flexe_channel_get_cb get;
} dnx_algo_port_db_flexe_sar_virtual_flexe_channel_cbs;

typedef struct {
    dnx_algo_port_db_flexe_sar_rx_is_eth_set_cb set;
    dnx_algo_port_db_flexe_sar_rx_is_eth_get_cb get;
} dnx_algo_port_db_flexe_sar_rx_is_eth_cbs;

typedef struct {
    dnx_algo_port_db_flexe_sar_tx_is_eth_set_cb set;
    dnx_algo_port_db_flexe_sar_tx_is_eth_get_cb get;
} dnx_algo_port_db_flexe_sar_tx_is_eth_cbs;

typedef struct {
    dnx_algo_port_db_flexe_sar_set_cb set;
    dnx_algo_port_db_flexe_sar_get_cb get;
    dnx_algo_port_db_flexe_sar_alloc_cb alloc;
    dnx_algo_port_db_flexe_sar_valid_cbs valid;
    dnx_algo_port_db_flexe_sar_master_logical_port_cbs master_logical_port;
    dnx_algo_port_db_flexe_sar_client_index_cbs client_index;
    dnx_algo_port_db_flexe_sar_virtual_flexe_channel_cbs virtual_flexe_channel;
    dnx_algo_port_db_flexe_sar_rx_is_eth_cbs rx_is_eth;
    dnx_algo_port_db_flexe_sar_tx_is_eth_cbs tx_is_eth;
} dnx_algo_port_db_flexe_sar_cbs;

typedef struct {
    dnx_algo_port_db_flexe_phy_valid_set_cb set;
    dnx_algo_port_db_flexe_phy_valid_get_cb get;
} dnx_algo_port_db_flexe_phy_valid_cbs;

typedef struct {
    dnx_algo_port_db_flexe_phy_master_logical_port_set_cb set;
    dnx_algo_port_db_flexe_phy_master_logical_port_get_cb get;
} dnx_algo_port_db_flexe_phy_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_flexe_phy_core_port_set_cb set;
    dnx_algo_port_db_flexe_phy_core_port_get_cb get;
} dnx_algo_port_db_flexe_phy_core_port_cbs;

typedef struct {
    dnx_algo_port_db_flexe_phy_channel_set_cb set;
    dnx_algo_port_db_flexe_phy_channel_get_cb get;
} dnx_algo_port_db_flexe_phy_channel_cbs;

typedef struct {
    dnx_algo_port_db_flexe_phy_rx_1588_en_set_cb set;
    dnx_algo_port_db_flexe_phy_rx_1588_en_get_cb get;
} dnx_algo_port_db_flexe_phy_rx_1588_en_cbs;

typedef struct {
    dnx_algo_port_db_flexe_phy_tx_1588_en_set_cb set;
    dnx_algo_port_db_flexe_phy_tx_1588_en_get_cb get;
} dnx_algo_port_db_flexe_phy_tx_1588_en_cbs;

typedef struct {
    dnx_algo_port_db_flexe_phy_mac1_channel_set_cb set;
    dnx_algo_port_db_flexe_phy_mac1_channel_get_cb get;
} dnx_algo_port_db_flexe_phy_mac1_channel_cbs;

typedef struct {
    dnx_algo_port_db_flexe_phy_mac2_channel_set_cb set;
    dnx_algo_port_db_flexe_phy_mac2_channel_get_cb get;
} dnx_algo_port_db_flexe_phy_mac2_channel_cbs;

typedef struct {
    dnx_algo_port_db_flexe_phy_set_cb set;
    dnx_algo_port_db_flexe_phy_get_cb get;
    dnx_algo_port_db_flexe_phy_alloc_cb alloc;
    dnx_algo_port_db_flexe_phy_valid_cbs valid;
    dnx_algo_port_db_flexe_phy_master_logical_port_cbs master_logical_port;
    dnx_algo_port_db_flexe_phy_core_port_cbs core_port;
    dnx_algo_port_db_flexe_phy_channel_cbs channel;
    dnx_algo_port_db_flexe_phy_rx_1588_en_cbs rx_1588_en;
    dnx_algo_port_db_flexe_phy_tx_1588_en_cbs tx_1588_en;
    dnx_algo_port_db_flexe_phy_mac1_channel_cbs mac1_channel;
    dnx_algo_port_db_flexe_phy_mac2_channel_cbs mac2_channel;
} dnx_algo_port_db_flexe_phy_cbs;

typedef struct {
    dnx_algo_port_db_flexe_client_cbs client;
    dnx_algo_port_db_flexe_mac_cbs mac;
    dnx_algo_port_db_flexe_sar_cbs sar;
    dnx_algo_port_db_flexe_phy_cbs phy;
} dnx_algo_port_db_flexe_cbs;

typedef struct {
    dnx_algo_port_db_fabric_valid_set_cb set;
    dnx_algo_port_db_fabric_valid_get_cb get;
} dnx_algo_port_db_fabric_valid_cbs;

typedef struct {
    dnx_algo_port_db_fabric_link_set_cb set;
    dnx_algo_port_db_fabric_link_get_cb get;
} dnx_algo_port_db_fabric_link_cbs;

typedef struct {
    dnx_algo_port_db_fabric_master_logical_port_set_cb set;
    dnx_algo_port_db_fabric_master_logical_port_get_cb get;
} dnx_algo_port_db_fabric_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_fabric_prbs_mode_set_cb set;
    dnx_algo_port_db_fabric_prbs_mode_get_cb get;
} dnx_algo_port_db_fabric_prbs_mode_cbs;

typedef struct {
    dnx_algo_port_db_fabric_speed_set_cb set;
    dnx_algo_port_db_fabric_speed_get_cb get;
} dnx_algo_port_db_fabric_speed_cbs;

typedef struct {
    dnx_algo_port_db_fabric_loopback_original_link_training_set_cb set;
    dnx_algo_port_db_fabric_loopback_original_link_training_get_cb get;
} dnx_algo_port_db_fabric_loopback_original_link_training_cbs;

typedef struct {
    dnx_algo_port_db_fabric_loopback_original_phy_lane_config_set_cb set;
    dnx_algo_port_db_fabric_loopback_original_phy_lane_config_get_cb get;
} dnx_algo_port_db_fabric_loopback_original_phy_lane_config_cbs;

typedef struct {
    dnx_algo_port_db_fabric_fec_type_set_cb set;
    dnx_algo_port_db_fabric_fec_type_get_cb get;
} dnx_algo_port_db_fabric_fec_type_cbs;

typedef struct {
    dnx_algo_port_db_fabric_set_cb set;
    dnx_algo_port_db_fabric_get_cb get;
    dnx_algo_port_db_fabric_alloc_cb alloc;
    dnx_algo_port_db_fabric_valid_cbs valid;
    dnx_algo_port_db_fabric_link_cbs link;
    dnx_algo_port_db_fabric_master_logical_port_cbs master_logical_port;
    dnx_algo_port_db_fabric_prbs_mode_cbs prbs_mode;
    dnx_algo_port_db_fabric_speed_cbs speed;
    dnx_algo_port_db_fabric_loopback_original_link_training_cbs loopback_original_link_training;
    dnx_algo_port_db_fabric_loopback_original_phy_lane_config_cbs loopback_original_phy_lane_config;
    dnx_algo_port_db_fabric_fec_type_cbs fec_type;
} dnx_algo_port_db_fabric_cbs;

typedef struct {
    dnx_algo_port_db_tm_interface_valid_set_cb set;
    dnx_algo_port_db_tm_interface_valid_get_cb get;
} dnx_algo_port_db_tm_interface_valid_cbs;

typedef struct {
    dnx_algo_port_db_tm_interface_is_egress_interleave_set_cb set;
    dnx_algo_port_db_tm_interface_is_egress_interleave_get_cb get;
} dnx_algo_port_db_tm_interface_is_egress_interleave_cbs;

typedef struct {
    dnx_algo_port_db_tm_interface_egr_if_set_cb set;
    dnx_algo_port_db_tm_interface_egr_if_get_cb get;
} dnx_algo_port_db_tm_interface_egr_if_cbs;

typedef struct {
    dnx_algo_port_db_tm_interface_ch_egr_if_set_cb set;
    dnx_algo_port_db_tm_interface_ch_egr_if_get_cb get;
} dnx_algo_port_db_tm_interface_ch_egr_if_cbs;

typedef struct {
    dnx_algo_port_db_tm_interface_master_logical_port_set_cb set;
    dnx_algo_port_db_tm_interface_master_logical_port_get_cb get;
} dnx_algo_port_db_tm_interface_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_tm_interface_rcy_mirror_logical_port_set_cb set;
    dnx_algo_port_db_tm_interface_rcy_mirror_logical_port_get_cb get;
} dnx_algo_port_db_tm_interface_rcy_mirror_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_tm_interface_set_cb set;
    dnx_algo_port_db_tm_interface_get_cb get;
    dnx_algo_port_db_tm_interface_alloc_cb alloc;
    dnx_algo_port_db_tm_interface_valid_cbs valid;
    dnx_algo_port_db_tm_interface_is_egress_interleave_cbs is_egress_interleave;
    dnx_algo_port_db_tm_interface_egr_if_cbs egr_if;
    dnx_algo_port_db_tm_interface_ch_egr_if_cbs ch_egr_if;
    dnx_algo_port_db_tm_interface_master_logical_port_cbs master_logical_port;
    dnx_algo_port_db_tm_interface_rcy_mirror_logical_port_cbs rcy_mirror_logical_port;
} dnx_algo_port_db_tm_interface_cbs;

typedef struct {
    dnx_algo_port_db_interface_valid_set_cb set;
    dnx_algo_port_db_interface_valid_get_cb get;
} dnx_algo_port_db_interface_valid_cbs;

typedef struct {
    dnx_algo_port_db_interface_core_set_cb set;
    dnx_algo_port_db_interface_core_get_cb get;
} dnx_algo_port_db_interface_core_cbs;

typedef struct {
    dnx_algo_port_db_interface_is_channelized_set_cb set;
    dnx_algo_port_db_interface_is_channelized_get_cb get;
} dnx_algo_port_db_interface_is_channelized_cbs;

typedef struct {
    dnx_algo_port_db_interface_is_ingress_interleave_set_cb set;
    dnx_algo_port_db_interface_is_ingress_interleave_get_cb get;
} dnx_algo_port_db_interface_is_ingress_interleave_cbs;

typedef struct {
    dnx_algo_port_db_interface_rx_speed_set_cb set;
    dnx_algo_port_db_interface_rx_speed_get_cb get;
} dnx_algo_port_db_interface_rx_speed_cbs;

typedef struct {
    dnx_algo_port_db_interface_tx_speed_set_cb set;
    dnx_algo_port_db_interface_tx_speed_get_cb get;
} dnx_algo_port_db_interface_tx_speed_cbs;

typedef struct {
    dnx_algo_port_db_interface_tdm_mode_set_cb set;
    dnx_algo_port_db_interface_tdm_mode_get_cb get;
} dnx_algo_port_db_interface_tdm_mode_cbs;

typedef struct {
    dnx_algo_port_db_interface_master_tdm_logical_port_set_cb set;
    dnx_algo_port_db_interface_master_tdm_logical_port_get_cb get;
} dnx_algo_port_db_interface_master_tdm_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_interface_master_non_tdm_logical_port_set_cb set;
    dnx_algo_port_db_interface_master_non_tdm_logical_port_get_cb get;
} dnx_algo_port_db_interface_master_non_tdm_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_interface_master_logical_port_set_cb set;
    dnx_algo_port_db_interface_master_logical_port_get_cb get;
} dnx_algo_port_db_interface_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_interface_tm_interface_handle_h0_set_cb set;
    dnx_algo_port_db_interface_tm_interface_handle_h0_get_cb get;
} dnx_algo_port_db_interface_tm_interface_handle_h0_cbs;

typedef struct {
    dnx_algo_port_db_interface_tm_interface_handle_h1_set_cb set;
    dnx_algo_port_db_interface_tm_interface_handle_h1_get_cb get;
} dnx_algo_port_db_interface_tm_interface_handle_h1_cbs;

typedef struct {
    dnx_algo_port_db_interface_tm_interface_handle_set_cb set;
    dnx_algo_port_db_interface_tm_interface_handle_get_cb get;
    dnx_algo_port_db_interface_tm_interface_handle_h0_cbs h0;
    dnx_algo_port_db_interface_tm_interface_handle_h1_cbs h1;
} dnx_algo_port_db_interface_tm_interface_handle_cbs;

typedef struct {
    dnx_algo_port_db_interface_fec_type_set_cb set;
    dnx_algo_port_db_interface_fec_type_get_cb get;
} dnx_algo_port_db_interface_fec_type_cbs;

typedef struct {
    dnx_algo_port_db_interface_set_cb set;
    dnx_algo_port_db_interface_get_cb get;
    dnx_algo_port_db_interface_alloc_cb alloc;
    dnx_algo_port_db_interface_valid_cbs valid;
    dnx_algo_port_db_interface_core_cbs core;
    dnx_algo_port_db_interface_is_channelized_cbs is_channelized;
    dnx_algo_port_db_interface_is_ingress_interleave_cbs is_ingress_interleave;
    dnx_algo_port_db_interface_rx_speed_cbs rx_speed;
    dnx_algo_port_db_interface_tx_speed_cbs tx_speed;
    dnx_algo_port_db_interface_tdm_mode_cbs tdm_mode;
    dnx_algo_port_db_interface_master_tdm_logical_port_cbs master_tdm_logical_port;
    dnx_algo_port_db_interface_master_non_tdm_logical_port_cbs master_non_tdm_logical_port;
    dnx_algo_port_db_interface_master_logical_port_cbs master_logical_port;
    dnx_algo_port_db_interface_tm_interface_handle_cbs tm_interface_handle;
    dnx_algo_port_db_interface_fec_type_cbs fec_type;
} dnx_algo_port_db_interface_cbs;

typedef struct {
    dnx_algo_port_db_sch_interface_valid_set_cb set;
    dnx_algo_port_db_sch_interface_valid_get_cb get;
} dnx_algo_port_db_sch_interface_valid_cbs;

typedef struct {
    dnx_algo_port_db_sch_interface_sch_if_set_cb set;
    dnx_algo_port_db_sch_interface_sch_if_get_cb get;
} dnx_algo_port_db_sch_interface_sch_if_cbs;

typedef struct {
    dnx_algo_port_db_sch_interface_priority_propagation_enable_set_cb set;
    dnx_algo_port_db_sch_interface_priority_propagation_enable_get_cb get;
} dnx_algo_port_db_sch_interface_priority_propagation_enable_cbs;

typedef struct {
    dnx_algo_port_db_sch_interface_master_logical_port_set_cb set;
    dnx_algo_port_db_sch_interface_master_logical_port_get_cb get;
} dnx_algo_port_db_sch_interface_master_logical_port_cbs;

typedef struct {
    dnx_algo_port_db_sch_interface_set_cb set;
    dnx_algo_port_db_sch_interface_get_cb get;
    dnx_algo_port_db_sch_interface_alloc_cb alloc;
    dnx_algo_port_db_sch_interface_valid_cbs valid;
    dnx_algo_port_db_sch_interface_sch_if_cbs sch_if;
    dnx_algo_port_db_sch_interface_priority_propagation_enable_cbs priority_propagation_enable;
    dnx_algo_port_db_sch_interface_master_logical_port_cbs master_logical_port;
} dnx_algo_port_db_sch_interface_cbs;

typedef struct {
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_set_cb set;
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_get_cb get;
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_create_cb create;
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_exchange_cb exchange;
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_profile_data_get_cb profile_data_get;
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_profile_get_cb profile_get;
} dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_cbs;

typedef struct {
    dnx_algo_port_db_prd_port_to_profile_map_set_cb set;
    dnx_algo_port_db_prd_port_to_profile_map_get_cb get;
} dnx_algo_port_db_prd_port_to_profile_map_cbs;

typedef struct {
    dnx_algo_port_db_prd_set_cb set;
    dnx_algo_port_db_prd_get_cb get;
    dnx_algo_port_db_prd_alloc_cb alloc;
    dnx_algo_port_db_prd_port_to_profile_map_cbs port_to_profile_map;
} dnx_algo_port_db_prd_cbs;

typedef struct {
    dnx_algo_port_db_ptc_alloc_set_cb set;
    dnx_algo_port_db_ptc_alloc_get_cb get;
    dnx_algo_port_db_ptc_alloc_alloc_cb alloc;
    dnx_algo_port_db_ptc_alloc_create_cb create;
    dnx_algo_port_db_ptc_alloc_allocate_single_cb allocate_single;
    dnx_algo_port_db_ptc_alloc_free_single_cb free_single;
    dnx_algo_port_db_ptc_alloc_is_allocated_cb is_allocated;
    dnx_algo_port_db_ptc_alloc_print_cb print;
    dnx_algo_port_db_ptc_alloc_nof_allocated_elements_in_range_get_cb nof_allocated_elements_in_range_get;
    dnx_algo_port_db_ptc_alloc_advanced_algorithm_info_get_cb advanced_algorithm_info_get;
} dnx_algo_port_db_ptc_alloc_cbs;

typedef struct {
    dnx_algo_port_db_counter_port_map_port_set_cb set;
    dnx_algo_port_db_counter_port_map_port_get_cb get;
} dnx_algo_port_db_counter_port_map_port_cbs;

typedef struct {
    dnx_algo_port_db_counter_port_map_priority_group_set_cb set;
    dnx_algo_port_db_counter_port_map_priority_group_get_cb get;
} dnx_algo_port_db_counter_port_map_priority_group_cbs;

typedef struct {
    dnx_algo_port_db_counter_port_map_set_cb set;
    dnx_algo_port_db_counter_port_map_get_cb get;
    dnx_algo_port_db_counter_port_map_alloc_cb alloc;
    dnx_algo_port_db_counter_port_map_port_cbs port;
    dnx_algo_port_db_counter_port_map_priority_group_cbs priority_group;
} dnx_algo_port_db_counter_port_map_cbs;

typedef struct {
    dnx_algo_port_db_port_rx_fifo_counter_port_set_cb set;
    dnx_algo_port_db_port_rx_fifo_counter_port_get_cb get;
} dnx_algo_port_db_port_rx_fifo_counter_port_cbs;

typedef struct {
    dnx_algo_port_db_port_rx_fifo_counter_set_cb set;
    dnx_algo_port_db_port_rx_fifo_counter_get_cb get;
    dnx_algo_port_db_port_rx_fifo_counter_port_cbs port;
} dnx_algo_port_db_port_rx_fifo_counter_cbs;

typedef struct {
    dnx_algo_port_db_tx_fifo_counter_port_map_port_set_cb set;
    dnx_algo_port_db_tx_fifo_counter_port_map_port_get_cb get;
} dnx_algo_port_db_tx_fifo_counter_port_map_port_cbs;

typedef struct {
    dnx_algo_port_db_tx_fifo_counter_port_map_set_cb set;
    dnx_algo_port_db_tx_fifo_counter_port_map_get_cb get;
    dnx_algo_port_db_tx_fifo_counter_port_map_alloc_cb alloc;
    dnx_algo_port_db_tx_fifo_counter_port_map_port_cbs port;
} dnx_algo_port_db_tx_fifo_counter_port_map_cbs;

typedef struct {
    dnx_algo_port_db_is_init_cb is_init;
    dnx_algo_port_db_init_cb init;
    dnx_algo_port_db_general_cbs general;
    dnx_algo_port_db_logical_cbs logical;
    dnx_algo_port_db_nif_cbs nif;
    dnx_algo_port_db_signal_quality_cbs signal_quality;
    dnx_algo_port_db_in_tm_cbs in_tm;
    dnx_algo_port_db_pp_dsp_db_cbs pp_dsp_db;
    dnx_algo_port_db_out_tm_cbs out_tm;
    dnx_algo_port_db_sch_cbs sch;
    dnx_algo_port_db_pp_cbs pp;
    dnx_algo_port_db_pp_alloc_cbs pp_alloc;
    dnx_algo_port_db_ilkn_cbs ilkn;
    dnx_algo_port_db_flexe_cbs flexe;
    dnx_algo_port_db_fabric_cbs fabric;
    dnx_algo_port_db_tm_interface_cbs tm_interface;
    dnx_algo_port_db_interface_cbs interface;
    dnx_algo_port_db_sch_interface_cbs sch_interface;
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_cbs skip_first_user_defined_header_size_profile_data;
    dnx_algo_port_db_prd_cbs prd;
    dnx_algo_port_db_ptc_alloc_cbs ptc_alloc;
    dnx_algo_port_db_counter_port_map_cbs counter_port_map;
    dnx_algo_port_db_port_rx_fifo_counter_cbs port_rx_fifo_counter;
    dnx_algo_port_db_tx_fifo_counter_port_map_cbs tx_fifo_counter_port_map;
} dnx_algo_port_db_cbs;

/*
 * Global Variables
 */

/*
 * FUNCTIONs
 */

/*
 *
 * get_name function for enum type dnx_algo_port_state_e
 * AUTO-GENERATED - DO NOT MODIFY
 *
 */
const char *
dnx_algo_port_state_e_get_name(dnx_algo_port_state_e value);
/*
 * Global Variables
 */

extern dnx_algo_port_db_cbs dnx_algo_port_db;

#endif /* __DNX_ALGO_PORT_ACCESS_H__ */
