/** \file algo/swstate/auto_generated/access/esem_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __ESEM_ACCESS_H__
#define __ESEM_ACCESS_H__

#include <bcm_int/dnx/algo/swstate/auto_generated/types/esem_types.h>
#include <soc/dnxc/swstate/callbacks/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_htb.h>
/*
 * TYPEDEFs
 */

typedef int (*esem_db_is_init_cb)(
    int unit, uint8 *is_init);

typedef int (*esem_db_init_cb)(
    int unit);

typedef int (*esem_db_esem_key_to_sw_info_htb_create_cb)(
    int unit, sw_state_htb_create_info_t *init_info);

typedef int (*esem_db_esem_key_to_sw_info_htb_find_cb)(
    int unit, const esem_key_t *key, int8 *value);

typedef int (*esem_db_esem_key_to_sw_info_htb_get_next_cb)(
    int unit, uint32 *iter, esem_key_t *key, int8 *value);

typedef int (*esem_db_esem_key_to_sw_info_htb_insert_cb)(
    int unit, const esem_key_t *key, const int8 *value);

typedef int (*esem_db_esem_key_to_sw_info_htb_replace_cb)(
    int unit, const esem_key_t *key, const int8 *value);

typedef int (*esem_db_esem_key_to_sw_info_htb_delete_cb)(
    int unit, const esem_key_t *key);

typedef int (*esem_db_esem_key_to_sw_info_htb_delete_all_cb)(
    int unit);

typedef int (*esem_db_esem_key_to_sw_info_htb_print_cb)(
    int unit);

typedef int (*esem_db_esem_key_to_sw_info_htb_traverse_cb)(
    int unit, sw_state_htb_traverse_cb traverse_func, void *user_data);

/*
 * STRUCTs
 */

typedef struct {
    esem_db_esem_key_to_sw_info_htb_create_cb create;
    esem_db_esem_key_to_sw_info_htb_find_cb find;
    esem_db_esem_key_to_sw_info_htb_get_next_cb get_next;
    esem_db_esem_key_to_sw_info_htb_insert_cb insert;
    esem_db_esem_key_to_sw_info_htb_replace_cb replace;
    esem_db_esem_key_to_sw_info_htb_delete_cb delete;
    esem_db_esem_key_to_sw_info_htb_delete_all_cb delete_all;
    esem_db_esem_key_to_sw_info_htb_print_cb print;
    esem_db_esem_key_to_sw_info_htb_traverse_cb traverse;
} esem_db_esem_key_to_sw_info_htb_cbs;

typedef struct {
    esem_db_is_init_cb is_init;
    esem_db_init_cb init;
    esem_db_esem_key_to_sw_info_htb_cbs esem_key_to_sw_info_htb;
} esem_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern esem_db_cbs esem_db;

#endif /* __ESEM_ACCESS_H__ */
