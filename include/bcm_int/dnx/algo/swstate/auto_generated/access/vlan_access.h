/** \file algo/swstate/auto_generated/access/vlan_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __VLAN_ACCESS_H__
#define __VLAN_ACCESS_H__

#include <bcm_int/dnx/algo/swstate/auto_generated/types/vlan_types.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <bcm_int/dnx/algo/vlan/algo_vlan.h>
#include <include/bcm/types.h>
/*
 * TYPEDEFs
 */

typedef int (*vlan_db_is_init_cb)(
    int unit, uint8 *is_init);

typedef int (*vlan_db_init_cb)(
    int unit);

typedef int (*vlan_db_vlan_info_default_vid_set_cb)(
    int unit, bcm_vlan_t default_vid);

typedef int (*vlan_db_vlan_info_default_vid_get_cb)(
    int unit, bcm_vlan_t *default_vid);

typedef int (*vlan_db_vsi_set_cb)(
    int unit, dnx_algo_res_t vsi);

typedef int (*vlan_db_vsi_get_cb)(
    int unit, dnx_algo_res_t *vsi);

typedef int (*vlan_db_vsi_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*vlan_db_vsi_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*vlan_db_vsi_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*vlan_db_vsi_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*vlan_db_vsi_get_next_cb)(
    int unit, int *element);

typedef int (*vlan_db_action_id_ingress_set_cb)(
    int unit, dnx_algo_res_t action_id_ingress);

typedef int (*vlan_db_action_id_ingress_get_cb)(
    int unit, dnx_algo_res_t *action_id_ingress);

typedef int (*vlan_db_action_id_ingress_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*vlan_db_action_id_ingress_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*vlan_db_action_id_ingress_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*vlan_db_action_id_ingress_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*vlan_db_action_id_egress_set_cb)(
    int unit, dnx_algo_res_t action_id_egress);

typedef int (*vlan_db_action_id_egress_get_cb)(
    int unit, dnx_algo_res_t *action_id_egress);

typedef int (*vlan_db_action_id_egress_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*vlan_db_action_id_egress_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*vlan_db_action_id_egress_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*vlan_db_action_id_egress_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*vlan_db_vlan_port_ingress_virtual_gport_id_set_cb)(
    int unit, dnx_algo_res_t vlan_port_ingress_virtual_gport_id);

typedef int (*vlan_db_vlan_port_ingress_virtual_gport_id_get_cb)(
    int unit, dnx_algo_res_t *vlan_port_ingress_virtual_gport_id);

typedef int (*vlan_db_vlan_port_ingress_virtual_gport_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*vlan_db_vlan_port_ingress_virtual_gport_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*vlan_db_vlan_port_ingress_virtual_gport_id_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*vlan_db_vlan_port_ingress_virtual_gport_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*vlan_db_vlan_port_egress_virtual_gport_id_set_cb)(
    int unit, dnx_algo_res_t vlan_port_egress_virtual_gport_id);

typedef int (*vlan_db_vlan_port_egress_virtual_gport_id_get_cb)(
    int unit, dnx_algo_res_t *vlan_port_egress_virtual_gport_id);

typedef int (*vlan_db_vlan_port_egress_virtual_gport_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*vlan_db_vlan_port_egress_virtual_gport_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*vlan_db_vlan_port_egress_virtual_gport_id_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*vlan_db_vlan_port_egress_virtual_gport_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*vlan_db_vlan_range_outer_profile_set_cb)(
    int unit, dnx_algo_template_t vlan_range_outer_profile);

typedef int (*vlan_db_vlan_range_outer_profile_get_cb)(
    int unit, dnx_algo_template_t *vlan_range_outer_profile);

typedef int (*vlan_db_vlan_range_outer_profile_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*vlan_db_vlan_range_outer_profile_allocate_single_cb)(
    int unit, uint32 flags, vlan_range_profile_template_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

typedef int (*vlan_db_vlan_range_outer_profile_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

typedef int (*vlan_db_vlan_range_outer_profile_exchange_cb)(
    int unit, uint32 flags, int nof_references, const vlan_range_profile_template_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*vlan_db_vlan_range_outer_profile_replace_data_cb)(
    int unit, int profile,  const vlan_range_profile_template_t *new_profile_data);

typedef int (*vlan_db_vlan_range_outer_profile_profile_data_get_cb)(
    int unit, int profile, int *ref_count, vlan_range_profile_template_t *profile_data);

typedef int (*vlan_db_vlan_range_outer_profile_profile_get_cb)(
    int unit, const vlan_range_profile_template_t *profile_data, int *profile);

typedef int (*vlan_db_vlan_range_outer_profile_clear_cb)(
    int unit);

typedef int (*vlan_db_vlan_range_outer_profile_free_all_cb)(
    int unit, int profile);

typedef int (*vlan_db_vlan_range_outer_profile_get_next_cb)(
    int unit, int *current_profile);

typedef int (*vlan_db_vlan_range_outer_profile_dump_info_get_cb)(
    int unit, dnx_algo_template_dump_data_t * info);

typedef int (*vlan_db_vlan_range_inner_profile_set_cb)(
    int unit, dnx_algo_template_t vlan_range_inner_profile);

typedef int (*vlan_db_vlan_range_inner_profile_get_cb)(
    int unit, dnx_algo_template_t *vlan_range_inner_profile);

typedef int (*vlan_db_vlan_range_inner_profile_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*vlan_db_vlan_range_inner_profile_allocate_single_cb)(
    int unit, uint32 flags, vlan_range_profile_template_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

typedef int (*vlan_db_vlan_range_inner_profile_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

typedef int (*vlan_db_vlan_range_inner_profile_exchange_cb)(
    int unit, uint32 flags, int nof_references, const vlan_range_profile_template_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*vlan_db_vlan_range_inner_profile_replace_data_cb)(
    int unit, int profile,  const vlan_range_profile_template_t *new_profile_data);

typedef int (*vlan_db_vlan_range_inner_profile_profile_data_get_cb)(
    int unit, int profile, int *ref_count, vlan_range_profile_template_t *profile_data);

typedef int (*vlan_db_vlan_range_inner_profile_profile_get_cb)(
    int unit, const vlan_range_profile_template_t *profile_data, int *profile);

typedef int (*vlan_db_vlan_range_inner_profile_clear_cb)(
    int unit);

typedef int (*vlan_db_vlan_range_inner_profile_free_all_cb)(
    int unit, int profile);

typedef int (*vlan_db_vlan_range_inner_profile_get_next_cb)(
    int unit, int *current_profile);

typedef int (*vlan_db_vlan_range_inner_profile_dump_info_get_cb)(
    int unit, dnx_algo_template_dump_data_t * info);

/*
 * STRUCTs
 */

typedef struct {
    vlan_db_vlan_info_default_vid_set_cb set;
    vlan_db_vlan_info_default_vid_get_cb get;
} vlan_db_vlan_info_default_vid_cbs;

typedef struct {
    vlan_db_vlan_info_default_vid_cbs default_vid;
} vlan_db_vlan_info_cbs;

typedef struct {
    vlan_db_vsi_set_cb set;
    vlan_db_vsi_get_cb get;
    vlan_db_vsi_create_cb create;
    vlan_db_vsi_allocate_single_cb allocate_single;
    vlan_db_vsi_free_single_cb free_single;
    vlan_db_vsi_is_allocated_cb is_allocated;
    vlan_db_vsi_get_next_cb get_next;
} vlan_db_vsi_cbs;

typedef struct {
    vlan_db_action_id_ingress_set_cb set;
    vlan_db_action_id_ingress_get_cb get;
    vlan_db_action_id_ingress_create_cb create;
    vlan_db_action_id_ingress_allocate_single_cb allocate_single;
    vlan_db_action_id_ingress_free_single_cb free_single;
    vlan_db_action_id_ingress_is_allocated_cb is_allocated;
} vlan_db_action_id_ingress_cbs;

typedef struct {
    vlan_db_action_id_egress_set_cb set;
    vlan_db_action_id_egress_get_cb get;
    vlan_db_action_id_egress_create_cb create;
    vlan_db_action_id_egress_allocate_single_cb allocate_single;
    vlan_db_action_id_egress_free_single_cb free_single;
    vlan_db_action_id_egress_is_allocated_cb is_allocated;
} vlan_db_action_id_egress_cbs;

typedef struct {
    vlan_db_vlan_port_ingress_virtual_gport_id_set_cb set;
    vlan_db_vlan_port_ingress_virtual_gport_id_get_cb get;
    vlan_db_vlan_port_ingress_virtual_gport_id_create_cb create;
    vlan_db_vlan_port_ingress_virtual_gport_id_allocate_single_cb allocate_single;
    vlan_db_vlan_port_ingress_virtual_gport_id_free_single_cb free_single;
    vlan_db_vlan_port_ingress_virtual_gport_id_is_allocated_cb is_allocated;
} vlan_db_vlan_port_ingress_virtual_gport_id_cbs;

typedef struct {
    vlan_db_vlan_port_egress_virtual_gport_id_set_cb set;
    vlan_db_vlan_port_egress_virtual_gport_id_get_cb get;
    vlan_db_vlan_port_egress_virtual_gport_id_create_cb create;
    vlan_db_vlan_port_egress_virtual_gport_id_allocate_single_cb allocate_single;
    vlan_db_vlan_port_egress_virtual_gport_id_free_single_cb free_single;
    vlan_db_vlan_port_egress_virtual_gport_id_is_allocated_cb is_allocated;
} vlan_db_vlan_port_egress_virtual_gport_id_cbs;

typedef struct {
    vlan_db_vlan_range_outer_profile_set_cb set;
    vlan_db_vlan_range_outer_profile_get_cb get;
    vlan_db_vlan_range_outer_profile_create_cb create;
    vlan_db_vlan_range_outer_profile_allocate_single_cb allocate_single;
    vlan_db_vlan_range_outer_profile_free_single_cb free_single;
    vlan_db_vlan_range_outer_profile_exchange_cb exchange;
    vlan_db_vlan_range_outer_profile_replace_data_cb replace_data;
    vlan_db_vlan_range_outer_profile_profile_data_get_cb profile_data_get;
    vlan_db_vlan_range_outer_profile_profile_get_cb profile_get;
    vlan_db_vlan_range_outer_profile_clear_cb clear;
    vlan_db_vlan_range_outer_profile_free_all_cb free_all;
    vlan_db_vlan_range_outer_profile_get_next_cb get_next;
    vlan_db_vlan_range_outer_profile_dump_info_get_cb dump_info_get;
} vlan_db_vlan_range_outer_profile_cbs;

typedef struct {
    vlan_db_vlan_range_inner_profile_set_cb set;
    vlan_db_vlan_range_inner_profile_get_cb get;
    vlan_db_vlan_range_inner_profile_create_cb create;
    vlan_db_vlan_range_inner_profile_allocate_single_cb allocate_single;
    vlan_db_vlan_range_inner_profile_free_single_cb free_single;
    vlan_db_vlan_range_inner_profile_exchange_cb exchange;
    vlan_db_vlan_range_inner_profile_replace_data_cb replace_data;
    vlan_db_vlan_range_inner_profile_profile_data_get_cb profile_data_get;
    vlan_db_vlan_range_inner_profile_profile_get_cb profile_get;
    vlan_db_vlan_range_inner_profile_clear_cb clear;
    vlan_db_vlan_range_inner_profile_free_all_cb free_all;
    vlan_db_vlan_range_inner_profile_get_next_cb get_next;
    vlan_db_vlan_range_inner_profile_dump_info_get_cb dump_info_get;
} vlan_db_vlan_range_inner_profile_cbs;

typedef struct {
    vlan_db_is_init_cb is_init;
    vlan_db_init_cb init;
    vlan_db_vlan_info_cbs vlan_info;
    vlan_db_vsi_cbs vsi;
    vlan_db_action_id_ingress_cbs action_id_ingress;
    vlan_db_action_id_egress_cbs action_id_egress;
    vlan_db_vlan_port_ingress_virtual_gport_id_cbs vlan_port_ingress_virtual_gport_id;
    vlan_db_vlan_port_egress_virtual_gport_id_cbs vlan_port_egress_virtual_gport_id;
    vlan_db_vlan_range_outer_profile_cbs vlan_range_outer_profile;
    vlan_db_vlan_range_inner_profile_cbs vlan_range_inner_profile;
} vlan_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern vlan_db_cbs vlan_db;

#endif /* __VLAN_ACCESS_H__ */
