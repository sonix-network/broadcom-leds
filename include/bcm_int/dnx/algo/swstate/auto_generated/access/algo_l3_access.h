/** \file algo/swstate/auto_generated/access/algo_l3_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __ALGO_L3_ACCESS_H__
#define __ALGO_L3_ACCESS_H__

#include <bcm_int/dnx/algo/swstate/auto_generated/types/algo_l3_types.h>
#include <bcm_int/dnx/algo/l3/source_address_table_allocation.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <bcm_int/dnx/l3/l3_ecmp.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_l3.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_max_l3.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/algo_consistent_hashing_types.h>
/*
 * TYPEDEFs
 */

typedef int (*algo_l3_db_is_init_cb)(
    int unit, uint8 *is_init);

typedef int (*algo_l3_db_init_cb)(
    int unit);

typedef int (*algo_l3_db_source_address_table_allocation_source_address_table_set_cb)(
    int unit, dnx_algo_template_t source_address_table);

typedef int (*algo_l3_db_source_address_table_allocation_source_address_table_get_cb)(
    int unit, dnx_algo_template_t *source_address_table);

typedef int (*algo_l3_db_source_address_table_allocation_source_address_table_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_source_address_table_allocation_source_address_table_allocate_single_cb)(
    int unit, uint32 flags, source_address_entry_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

typedef int (*algo_l3_db_source_address_table_allocation_source_address_table_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

typedef int (*algo_l3_db_source_address_table_allocation_source_address_table_exchange_cb)(
    int unit, uint32 flags, int nof_references, const source_address_entry_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*algo_l3_db_source_address_table_allocation_source_address_table_profile_data_get_cb)(
    int unit, int profile, int *ref_count, source_address_entry_t *profile_data);

typedef int (*algo_l3_db_source_address_table_allocation_source_address_table_profile_get_cb)(
    int unit, const source_address_entry_t *profile_data, int *profile);

typedef int (*algo_l3_db_source_address_table_allocation_source_address_table_get_next_cb)(
    int unit, int *current_profile);

typedef int (*algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_set_cb)(
    int unit, uint32 sub_resource_id, dnx_algo_res_t fec_res_manager);

typedef int (*algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_get_cb)(
    int unit, uint32 sub_resource_id, dnx_algo_res_t *fec_res_manager);

typedef int (*algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_create_cb)(
    int unit, uint32 sub_resource_id, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_allocate_single_cb)(
    int unit, uint32 sub_resource_id, uint32 flags, void *extra_arguments, int *element);

typedef int (*algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_free_single_cb)(
    int unit, uint32 sub_resource_id, int element, void *extra_arguments);

typedef int (*algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_is_allocated_cb)(
    int unit, uint32 sub_resource_id, int element, uint8 *is_allocated);

typedef int (*algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_nof_free_elements_get_cb)(
    int unit, uint32 sub_resource_id, int *nof_free_elements);

typedef int (*algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_get_next_cb)(
    int unit, uint32 sub_resource_id, int *element);

typedef int (*algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_advanced_algorithm_info_get_cb)(
    int unit, uint32 sub_resource_id, void *algorithm_info);

typedef int (*algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_data_per_entry_get_cb)(
    int unit, uint32 sub_resource_id, int element, void *data);

typedef int (*algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_set_cb)(
    int unit, dnx_algo_res_t egr_pointed_res_manager);

typedef int (*algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_get_cb)(
    int unit, dnx_algo_res_t *egr_pointed_res_manager);

typedef int (*algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_consistent_manager_set_cb)(
    int unit, dnx_algo_template_t ecmp_consistent_manager);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_consistent_manager_get_cb)(
    int unit, dnx_algo_template_t *ecmp_consistent_manager);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_consistent_manager_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_consistent_manager_allocate_single_cb)(
    int unit, uint32 flags, dnx_algo_consistent_hashing_manager_template_manager_key_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_consistent_manager_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_consistent_manager_exchange_cb)(
    int unit, uint32 flags, int nof_references, const dnx_algo_consistent_hashing_manager_template_manager_key_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_consistent_manager_profile_data_get_cb)(
    int unit, int profile, int *ref_count, dnx_algo_consistent_hashing_manager_template_manager_key_t *profile_data);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_set_cb)(
    int unit, dnx_algo_template_t vrrp_vsi_tcam_table);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_get_cb)(
    int unit, dnx_algo_template_t *vrrp_vsi_tcam_table);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_allocate_single_cb)(
    int unit, uint32 flags, algo_dnx_l3_vrrp_tcam_key_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_profile_data_get_cb)(
    int unit, int profile, int *ref_count, algo_dnx_l3_vrrp_tcam_key_t *profile_data);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_profile_get_cb)(
    int unit, const algo_dnx_l3_vrrp_tcam_key_t *profile_data, int *profile);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_set_cb)(
    int unit, uint32 ecmp_profile_hier_table_idx_0, dnx_algo_template_t ecmp_profile_hier_table);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_get_cb)(
    int unit, uint32 ecmp_profile_hier_table_idx_0, dnx_algo_template_t *ecmp_profile_hier_table);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_alloc_cb)(
    int unit);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_create_cb)(
    int unit, uint32 ecmp_profile_hier_table_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_allocate_single_cb)(
    int unit, uint32 ecmp_profile_hier_table_idx_0, uint32 flags, dnx_l3_ecmp_profile_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_free_single_cb)(
    int unit, uint32 ecmp_profile_hier_table_idx_0, int profile, uint8 *last_reference);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_profile_data_get_cb)(
    int unit, uint32 ecmp_profile_hier_table_idx_0, int profile, int *ref_count, dnx_l3_ecmp_profile_t *profile_data);

typedef int (*algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_get_next_cb)(
    int unit, uint32 ecmp_profile_hier_table_idx_0, int *current_profile);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_set_cb)(
    int unit, dnx_algo_template_t vrrp_exem_tcam_table);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_get_cb)(
    int unit, dnx_algo_template_t *vrrp_exem_tcam_table);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_allocate_single_cb)(
    int unit, uint32 flags, algo_dnx_l3_vrrp_tcam_key_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

typedef int (*algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_profile_get_cb)(
    int unit, const algo_dnx_l3_vrrp_tcam_key_t *profile_data, int *profile);

typedef int (*algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_set_cb)(
    int unit, dnx_algo_res_t res_bitmap);

typedef int (*algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_get_cb)(
    int unit, dnx_algo_res_t *res_bitmap);

typedef int (*algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

typedef int (*algo_l3_db_vrrp_db_database_enable_set_cb)(
    int unit, uint32 database_enable_idx_0, uint8 database_enable);

typedef int (*algo_l3_db_vrrp_db_database_enable_get_cb)(
    int unit, uint32 database_enable_idx_0, uint8 *database_enable);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_set_cb)(
    int unit, dnx_algo_res_t rif_res_manager);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_get_cb)(
    int unit, dnx_algo_res_t *rif_res_manager);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_allocate_several_cb)(
    int unit, uint32 flags, uint32 nof_elements, void *extra_arguments, int *element);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_free_several_cb)(
    int unit, uint32 nof_elements, int element, void *extra_arguments);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_clear_cb)(
    int unit);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_get_next_cb)(
    int unit, int *element);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_dump_info_get_cb)(
    int unit, dnx_algo_res_dump_data_t * info);

typedef int (*algo_l3_db_rif_alloc_rif_res_manager_nof_allocated_elements_in_range_get_cb)(
    int unit, int range_start, int nof_elements_in_range, int *nof_allocated_elements);

typedef int (*algo_l3_db_rif_alloc_intf_rif_res_mngr_set_cb)(
    int unit, dnx_algo_res_t intf_rif_res_mngr);

typedef int (*algo_l3_db_rif_alloc_intf_rif_res_mngr_get_cb)(
    int unit, dnx_algo_res_t *intf_rif_res_mngr);

typedef int (*algo_l3_db_rif_alloc_intf_rif_res_mngr_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_rif_alloc_intf_rif_res_mngr_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*algo_l3_db_rif_alloc_intf_rif_res_mngr_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*algo_l3_db_rif_alloc_intf_rif_res_mngr_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*algo_l3_db_rif_alloc_intf_rif_res_mngr_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

typedef int (*algo_l3_db_rif_alloc_intf_rif_res_mngr_get_next_cb)(
    int unit, int *element);

typedef int (*algo_l3_db_rif_alloc_intf_rif_res_mngr_nof_allocated_elements_in_range_get_cb)(
    int unit, int range_start, int nof_elements_in_range, int *nof_allocated_elements);

typedef int (*algo_l3_db_tp_modes_alloc_cb)(
    int unit);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_set_cb)(
    int unit, uint32 tp_modes_idx_0, dnx_algo_res_t l3_ecmp_tunnel_priority_modes_res_mngr);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_get_cb)(
    int unit, uint32 tp_modes_idx_0, dnx_algo_res_t *l3_ecmp_tunnel_priority_modes_res_mngr);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_create_cb)(
    int unit, uint32 tp_modes_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_allocate_single_cb)(
    int unit, uint32 tp_modes_idx_0, uint32 flags, void *extra_arguments, int *element);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_allocate_several_cb)(
    int unit, uint32 tp_modes_idx_0, uint32 flags, uint32 nof_elements, void *extra_arguments, int *element);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_free_single_cb)(
    int unit, uint32 tp_modes_idx_0, int element, void *extra_arguments);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_free_several_cb)(
    int unit, uint32 tp_modes_idx_0, uint32 nof_elements, int element, void *extra_arguments);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_is_allocated_cb)(
    int unit, uint32 tp_modes_idx_0, int element, uint8 *is_allocated);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_clear_cb)(
    int unit, uint32 tp_modes_idx_0);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_nof_free_elements_get_cb)(
    int unit, uint32 tp_modes_idx_0, int *nof_free_elements);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_get_next_cb)(
    int unit, uint32 tp_modes_idx_0, int *element);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_dump_info_get_cb)(
    int unit, uint32 tp_modes_idx_0, dnx_algo_res_dump_data_t * info);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_nof_allocated_elements_in_range_get_cb)(
    int unit, uint32 tp_modes_idx_0, int range_start, int nof_elements_in_range, int *nof_allocated_elements);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_advanced_algorithm_info_set_cb)(
    int unit, uint32 tp_modes_idx_0, void *algorithm_info);

typedef int (*algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_advanced_algorithm_info_get_cb)(
    int unit, uint32 tp_modes_idx_0, void *algorithm_info);

typedef int (*algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_set_cb)(
    int unit, dnx_algo_res_t vip_ecmp_res_manager);

typedef int (*algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_get_cb)(
    int unit, dnx_algo_res_t *vip_ecmp_res_manager);

typedef int (*algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

typedef int (*algo_l3_db_fec_db_info_fec_db_set_cb)(
    int unit, uint32 direction, uint32 hierarhy, mdb_physical_table_e fec_db);

typedef int (*algo_l3_db_fec_db_info_fec_db_get_cb)(
    int unit, uint32 direction, uint32 hierarhy, mdb_physical_table_e *fec_db);

typedef int (*algo_l3_db_fec_db_info_fec_db_alloc_cb)(
    int unit);

typedef int (*algo_l3_db_out_rif_result_type_info_set_cb)(
    int unit, uint32 out_rif_result_type_info_idx_0, int out_rif_result_type_info);

typedef int (*algo_l3_db_out_rif_result_type_info_get_cb)(
    int unit, uint32 out_rif_result_type_info_idx_0, int *out_rif_result_type_info);

typedef int (*algo_l3_db_out_rif_result_type_info_alloc_cb)(
    int unit);

typedef int (*algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_alloc_bitmap_cb)(
    int unit, uint32 _nof_bits_to_alloc);

typedef int (*algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_bit_set_cb)(
    int unit, uint32 _bit_num);

typedef int (*algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_bit_clear_cb)(
    int unit, uint32 _bit_num);

typedef int (*algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_bit_get_cb)(
    int unit, uint32 _bit_num, uint8* result);

typedef int (*algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_bit_range_count_cb)(
    int unit, uint32 _first, uint32 _range, int *result);

typedef int (*algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_alloc_bitmap_cb)(
    int unit, uint32 _nof_bits_to_alloc);

typedef int (*algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_bit_set_cb)(
    int unit, uint32 _bit_num);

typedef int (*algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_bit_clear_cb)(
    int unit, uint32 _bit_num);

typedef int (*algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_bit_get_cb)(
    int unit, uint32 _bit_num, uint8* result);

typedef int (*algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_bit_range_count_cb)(
    int unit, uint32 _first, uint32 _range, int *result);

typedef int (*algo_l3_db_mac_compress_ref_set_cb)(
    int unit, uint32 mac_compress_ref_idx_0, uint32 mac_compress_ref);

typedef int (*algo_l3_db_mac_compress_ref_get_cb)(
    int unit, uint32 mac_compress_ref_idx_0, uint32 *mac_compress_ref);

typedef int (*algo_l3_db_mac_compress_ref_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*algo_l3_db_ipv6_msb32_compress_ref_set_cb)(
    int unit, uint32 ipv6_msb32_compress_ref_idx_0, uint32 ipv6_msb32_compress_ref);

typedef int (*algo_l3_db_ipv6_msb32_compress_ref_get_cb)(
    int unit, uint32 ipv6_msb32_compress_ref_idx_0, uint32 *ipv6_msb32_compress_ref);

typedef int (*algo_l3_db_ipv6_msb32_compress_ref_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/*
 * STRUCTs
 */

typedef struct {
    algo_l3_db_source_address_table_allocation_source_address_table_set_cb set;
    algo_l3_db_source_address_table_allocation_source_address_table_get_cb get;
    algo_l3_db_source_address_table_allocation_source_address_table_create_cb create;
    algo_l3_db_source_address_table_allocation_source_address_table_allocate_single_cb allocate_single;
    algo_l3_db_source_address_table_allocation_source_address_table_free_single_cb free_single;
    algo_l3_db_source_address_table_allocation_source_address_table_exchange_cb exchange;
    algo_l3_db_source_address_table_allocation_source_address_table_profile_data_get_cb profile_data_get;
    algo_l3_db_source_address_table_allocation_source_address_table_profile_get_cb profile_get;
    algo_l3_db_source_address_table_allocation_source_address_table_get_next_cb get_next;
} algo_l3_db_source_address_table_allocation_source_address_table_cbs;

typedef struct {
    algo_l3_db_source_address_table_allocation_source_address_table_cbs source_address_table;
} algo_l3_db_source_address_table_allocation_cbs;

typedef struct {
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_set_cb set;
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_get_cb get;
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_alloc_cb alloc;
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_create_cb create;
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_allocate_single_cb allocate_single;
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_free_single_cb free_single;
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_is_allocated_cb is_allocated;
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_nof_free_elements_get_cb nof_free_elements_get;
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_get_next_cb get_next;
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_advanced_algorithm_info_get_cb advanced_algorithm_info_get;
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_data_per_entry_get_cb data_per_entry_get;
} algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_cbs;

typedef struct {
    algo_l3_db_fec_alloc_l3_fec_res_mngr_fec_res_manager_cbs fec_res_manager;
} algo_l3_db_fec_alloc_l3_fec_res_mngr_cbs;

typedef struct {
    algo_l3_db_fec_alloc_l3_fec_res_mngr_cbs l3_fec_res_mngr;
} algo_l3_db_fec_alloc_cbs;

typedef struct {
    algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_set_cb set;
    algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_get_cb get;
    algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_create_cb create;
    algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_allocate_single_cb allocate_single;
    algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_free_single_cb free_single;
    algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_is_allocated_cb is_allocated;
} algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_cbs;

typedef struct {
    algo_l3_db_egr_pointed_alloc_egr_pointed_res_manager_cbs egr_pointed_res_manager;
} algo_l3_db_egr_pointed_alloc_cbs;

typedef struct {
    algo_l3_db_algo_l3_templates_ecmp_consistent_manager_set_cb set;
    algo_l3_db_algo_l3_templates_ecmp_consistent_manager_get_cb get;
    algo_l3_db_algo_l3_templates_ecmp_consistent_manager_create_cb create;
    algo_l3_db_algo_l3_templates_ecmp_consistent_manager_allocate_single_cb allocate_single;
    algo_l3_db_algo_l3_templates_ecmp_consistent_manager_free_single_cb free_single;
    algo_l3_db_algo_l3_templates_ecmp_consistent_manager_exchange_cb exchange;
    algo_l3_db_algo_l3_templates_ecmp_consistent_manager_profile_data_get_cb profile_data_get;
} algo_l3_db_algo_l3_templates_ecmp_consistent_manager_cbs;

typedef struct {
    algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_set_cb set;
    algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_get_cb get;
    algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_create_cb create;
    algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_allocate_single_cb allocate_single;
    algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_free_single_cb free_single;
    algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_profile_data_get_cb profile_data_get;
    algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_profile_get_cb profile_get;
} algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_cbs;

typedef struct {
    algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_set_cb set;
    algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_get_cb get;
    algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_alloc_cb alloc;
    algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_create_cb create;
    algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_allocate_single_cb allocate_single;
    algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_free_single_cb free_single;
    algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_profile_data_get_cb profile_data_get;
    algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_get_next_cb get_next;
} algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_cbs;

typedef struct {
    algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_set_cb set;
    algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_get_cb get;
    algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_create_cb create;
    algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_allocate_single_cb allocate_single;
    algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_free_single_cb free_single;
    algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_profile_get_cb profile_get;
} algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_cbs;

typedef struct {
    algo_l3_db_algo_l3_templates_ecmp_consistent_manager_cbs ecmp_consistent_manager;
    algo_l3_db_algo_l3_templates_vrrp_vsi_tcam_table_cbs vrrp_vsi_tcam_table;
    algo_l3_db_algo_l3_templates_ecmp_profile_hier_table_cbs ecmp_profile_hier_table;
    algo_l3_db_algo_l3_templates_vrrp_exem_tcam_table_cbs vrrp_exem_tcam_table;
} algo_l3_db_algo_l3_templates_cbs;

typedef struct {
    algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_set_cb set;
    algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_get_cb get;
    algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_create_cb create;
    algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_allocate_single_cb allocate_single;
    algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_free_single_cb free_single;
    algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_is_allocated_cb is_allocated;
    algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_nof_free_elements_get_cb nof_free_elements_get;
} algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_cbs;

typedef struct {
    algo_l3_db_vrrp_exem_l2_station_id_alloc_res_bitmap_cbs res_bitmap;
} algo_l3_db_vrrp_exem_l2_station_id_alloc_cbs;

typedef struct {
    algo_l3_db_vrrp_db_database_enable_set_cb set;
    algo_l3_db_vrrp_db_database_enable_get_cb get;
} algo_l3_db_vrrp_db_database_enable_cbs;

typedef struct {
    algo_l3_db_vrrp_db_database_enable_cbs database_enable;
} algo_l3_db_vrrp_db_cbs;

typedef struct {
    algo_l3_db_rif_alloc_rif_res_manager_set_cb set;
    algo_l3_db_rif_alloc_rif_res_manager_get_cb get;
    algo_l3_db_rif_alloc_rif_res_manager_create_cb create;
    algo_l3_db_rif_alloc_rif_res_manager_allocate_single_cb allocate_single;
    algo_l3_db_rif_alloc_rif_res_manager_allocate_several_cb allocate_several;
    algo_l3_db_rif_alloc_rif_res_manager_free_single_cb free_single;
    algo_l3_db_rif_alloc_rif_res_manager_free_several_cb free_several;
    algo_l3_db_rif_alloc_rif_res_manager_is_allocated_cb is_allocated;
    algo_l3_db_rif_alloc_rif_res_manager_clear_cb clear;
    algo_l3_db_rif_alloc_rif_res_manager_nof_free_elements_get_cb nof_free_elements_get;
    algo_l3_db_rif_alloc_rif_res_manager_get_next_cb get_next;
    algo_l3_db_rif_alloc_rif_res_manager_dump_info_get_cb dump_info_get;
    algo_l3_db_rif_alloc_rif_res_manager_nof_allocated_elements_in_range_get_cb nof_allocated_elements_in_range_get;
} algo_l3_db_rif_alloc_rif_res_manager_cbs;

typedef struct {
    algo_l3_db_rif_alloc_intf_rif_res_mngr_set_cb set;
    algo_l3_db_rif_alloc_intf_rif_res_mngr_get_cb get;
    algo_l3_db_rif_alloc_intf_rif_res_mngr_create_cb create;
    algo_l3_db_rif_alloc_intf_rif_res_mngr_allocate_single_cb allocate_single;
    algo_l3_db_rif_alloc_intf_rif_res_mngr_free_single_cb free_single;
    algo_l3_db_rif_alloc_intf_rif_res_mngr_is_allocated_cb is_allocated;
    algo_l3_db_rif_alloc_intf_rif_res_mngr_nof_free_elements_get_cb nof_free_elements_get;
    algo_l3_db_rif_alloc_intf_rif_res_mngr_get_next_cb get_next;
    algo_l3_db_rif_alloc_intf_rif_res_mngr_nof_allocated_elements_in_range_get_cb nof_allocated_elements_in_range_get;
} algo_l3_db_rif_alloc_intf_rif_res_mngr_cbs;

typedef struct {
    algo_l3_db_rif_alloc_rif_res_manager_cbs rif_res_manager;
    algo_l3_db_rif_alloc_intf_rif_res_mngr_cbs intf_rif_res_mngr;
} algo_l3_db_rif_alloc_cbs;

typedef struct {
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_set_cb set;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_get_cb get;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_create_cb create;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_allocate_single_cb allocate_single;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_allocate_several_cb allocate_several;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_free_single_cb free_single;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_free_several_cb free_several;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_is_allocated_cb is_allocated;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_clear_cb clear;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_nof_free_elements_get_cb nof_free_elements_get;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_get_next_cb get_next;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_dump_info_get_cb dump_info_get;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_nof_allocated_elements_in_range_get_cb nof_allocated_elements_in_range_get;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_advanced_algorithm_info_set_cb advanced_algorithm_info_set;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_advanced_algorithm_info_get_cb advanced_algorithm_info_get;
} algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_cbs;

typedef struct {
    algo_l3_db_tp_modes_alloc_cb alloc;
    algo_l3_db_tp_modes_l3_ecmp_tunnel_priority_modes_res_mngr_cbs l3_ecmp_tunnel_priority_modes_res_mngr;
} algo_l3_db_tp_modes_cbs;

typedef struct {
    algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_set_cb set;
    algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_get_cb get;
    algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_create_cb create;
    algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_allocate_single_cb allocate_single;
    algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_free_single_cb free_single;
    algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_is_allocated_cb is_allocated;
    algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_nof_free_elements_get_cb nof_free_elements_get;
} algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_cbs;

typedef struct {
    algo_l3_db_vip_ecmp_alloc_vip_ecmp_res_manager_cbs vip_ecmp_res_manager;
} algo_l3_db_vip_ecmp_alloc_cbs;

typedef struct {
    algo_l3_db_fec_db_info_fec_db_set_cb set;
    algo_l3_db_fec_db_info_fec_db_get_cb get;
    algo_l3_db_fec_db_info_fec_db_alloc_cb alloc;
} algo_l3_db_fec_db_info_fec_db_cbs;

typedef struct {
    algo_l3_db_fec_db_info_fec_db_cbs fec_db;
} algo_l3_db_fec_db_info_cbs;

typedef struct {
    algo_l3_db_out_rif_result_type_info_set_cb set;
    algo_l3_db_out_rif_result_type_info_get_cb get;
    algo_l3_db_out_rif_result_type_info_alloc_cb alloc;
} algo_l3_db_out_rif_result_type_info_cbs;

typedef struct {
    algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_alloc_bitmap_cb alloc_bitmap;
    algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_bit_set_cb bit_set;
    algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_bit_clear_cb bit_clear;
    algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_bit_get_cb bit_get;
    algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_bit_range_count_cb bit_range_count;
} algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_cbs;

typedef struct {
    algo_l3_db_mac_compress_id_alloc_mac_compress_id_bitmap_cbs mac_compress_id_bitmap;
} algo_l3_db_mac_compress_id_alloc_cbs;

typedef struct {
    algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_alloc_bitmap_cb alloc_bitmap;
    algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_bit_set_cb bit_set;
    algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_bit_clear_cb bit_clear;
    algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_bit_get_cb bit_get;
    algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_bit_range_count_cb bit_range_count;
} algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_cbs;

typedef struct {
    algo_l3_db_ipv6_msb32_compress_id_alloc_ipv6_msb32_compress_id_bitmap_cbs ipv6_msb32_compress_id_bitmap;
} algo_l3_db_ipv6_msb32_compress_id_alloc_cbs;

typedef struct {
    algo_l3_db_mac_compress_ref_set_cb set;
    algo_l3_db_mac_compress_ref_get_cb get;
    algo_l3_db_mac_compress_ref_alloc_cb alloc;
} algo_l3_db_mac_compress_ref_cbs;

typedef struct {
    algo_l3_db_ipv6_msb32_compress_ref_set_cb set;
    algo_l3_db_ipv6_msb32_compress_ref_get_cb get;
    algo_l3_db_ipv6_msb32_compress_ref_alloc_cb alloc;
} algo_l3_db_ipv6_msb32_compress_ref_cbs;

typedef struct {
    algo_l3_db_is_init_cb is_init;
    algo_l3_db_init_cb init;
    algo_l3_db_source_address_table_allocation_cbs source_address_table_allocation;
    algo_l3_db_fec_alloc_cbs fec_alloc;
    algo_l3_db_egr_pointed_alloc_cbs egr_pointed_alloc;
    algo_l3_db_algo_l3_templates_cbs algo_l3_templates;
    algo_l3_db_vrrp_exem_l2_station_id_alloc_cbs vrrp_exem_l2_station_id_alloc;
    algo_l3_db_vrrp_db_cbs vrrp_db;
    algo_l3_db_rif_alloc_cbs rif_alloc;
    algo_l3_db_tp_modes_cbs tp_modes;
    algo_l3_db_vip_ecmp_alloc_cbs vip_ecmp_alloc;
    algo_l3_db_fec_db_info_cbs fec_db_info;
    algo_l3_db_out_rif_result_type_info_cbs out_rif_result_type_info;
    algo_l3_db_mac_compress_id_alloc_cbs mac_compress_id_alloc;
    algo_l3_db_ipv6_msb32_compress_id_alloc_cbs ipv6_msb32_compress_id_alloc;
    algo_l3_db_mac_compress_ref_cbs mac_compress_ref;
    algo_l3_db_ipv6_msb32_compress_ref_cbs ipv6_msb32_compress_ref;
} algo_l3_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern algo_l3_db_cbs algo_l3_db;

#endif /* __ALGO_L3_ACCESS_H__ */
