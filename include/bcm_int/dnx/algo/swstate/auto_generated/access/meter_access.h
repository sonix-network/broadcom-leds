/** \file algo/swstate/auto_generated/access/meter_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __METER_ACCESS_H__
#define __METER_ACCESS_H__

#include <bcm_int/dnx/algo/swstate/auto_generated/types/meter_types.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <bcm_int/dnx/policer/policer_mgmt.h>
#include <include/bcm/policer.h>
/*
 * TYPEDEFs
 */

typedef int (*dnx_meter_db_is_init_cb)(
    int unit, uint8 *is_init);

typedef int (*dnx_meter_db_init_cb)(
    int unit);

typedef int (*dnx_meter_db_profile_limits_info_set_cb)(
    int unit, CONST dnx_policer_profile_limits_info_t *profile_limits_info);

typedef int (*dnx_meter_db_profile_limits_info_get_cb)(
    int unit, dnx_policer_profile_limits_info_t *profile_limits_info);

typedef int (*dnx_meter_db_profile_limits_info_max_rate_set_cb)(
    int unit, uint32 max_rate);

typedef int (*dnx_meter_db_profile_limits_info_max_rate_get_cb)(
    int unit, uint32 *max_rate);

typedef int (*dnx_meter_db_profile_limits_info_max_burst_normal_mode_set_cb)(
    int unit, uint32 max_burst_normal_mode);

typedef int (*dnx_meter_db_profile_limits_info_max_burst_normal_mode_get_cb)(
    int unit, uint32 *max_burst_normal_mode);

typedef int (*dnx_meter_db_profile_limits_info_max_burst_large_mode_set_cb)(
    int unit, uint32 max_burst_large_mode);

typedef int (*dnx_meter_db_profile_limits_info_max_burst_large_mode_get_cb)(
    int unit, uint32 *max_burst_large_mode);

typedef int (*dnx_meter_db_profile_limits_info_min_rate_set_cb)(
    int unit, uint32 min_rate);

typedef int (*dnx_meter_db_profile_limits_info_min_rate_get_cb)(
    int unit, uint32 *min_rate);

typedef int (*dnx_meter_db_profile_limits_info_min_burst_set_cb)(
    int unit, uint32 min_burst);

typedef int (*dnx_meter_db_profile_limits_info_min_burst_get_cb)(
    int unit, uint32 *min_burst);

typedef int (*dnx_meter_db_profile_limits_info_max_cbs_mant_set_cb)(
    int unit, uint32 max_cbs_mant);

typedef int (*dnx_meter_db_profile_limits_info_max_cbs_mant_get_cb)(
    int unit, uint32 *max_cbs_mant);

typedef int (*dnx_meter_db_profile_limits_info_max_cbs_exp_set_cb)(
    int unit, uint32 max_cbs_exp);

typedef int (*dnx_meter_db_profile_limits_info_max_cbs_exp_get_cb)(
    int unit, uint32 *max_cbs_exp);

typedef int (*dnx_meter_db_profile_limits_info_max_ir_mant_set_cb)(
    int unit, uint32 max_ir_mant);

typedef int (*dnx_meter_db_profile_limits_info_max_ir_mant_get_cb)(
    int unit, uint32 *max_ir_mant);

typedef int (*dnx_meter_db_profile_limits_info_max_ir_exp_set_cb)(
    int unit, uint32 max_ir_exp);

typedef int (*dnx_meter_db_profile_limits_info_max_ir_exp_get_cb)(
    int unit, uint32 *max_ir_exp);

typedef int (*dnx_meter_db_global_meter_enabled_set_cb)(
    int unit, uint32 global_meter_enabled_idx_0, int global_meter_enabled);

typedef int (*dnx_meter_db_global_meter_enabled_get_cb)(
    int unit, uint32 global_meter_enabled_idx_0, int *global_meter_enabled);

typedef int (*dnx_meter_db_global_meter_enabled_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_meter_db_generic_meter_info_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

typedef int (*dnx_meter_db_generic_meter_info_db_info_alloc_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 nof_instances_to_alloc_1);

typedef int (*dnx_meter_db_generic_meter_info_db_info_enable_set_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 enable);

typedef int (*dnx_meter_db_generic_meter_info_db_info_enable_get_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 *enable);

typedef int (*dnx_meter_db_generic_meter_info_db_info_created_set_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 created);

typedef int (*dnx_meter_db_generic_meter_info_db_info_created_get_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 *created);

typedef int (*dnx_meter_db_generic_meter_info_db_info_expansion_enable_set_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 expansion_enable);

typedef int (*dnx_meter_db_generic_meter_info_db_info_expansion_enable_get_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 *expansion_enable);

typedef int (*dnx_meter_db_generic_meter_info_db_info_expansion_is_per_tc_set_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 expansion_is_per_tc);

typedef int (*dnx_meter_db_generic_meter_info_db_info_expansion_is_per_tc_get_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 *expansion_is_per_tc);

typedef int (*dnx_meter_db_generic_meter_info_db_info_is_single_bucket_set_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 is_single_bucket);

typedef int (*dnx_meter_db_generic_meter_info_db_info_is_single_bucket_get_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 *is_single_bucket);

typedef int (*dnx_meter_db_generic_meter_info_db_info_use_small_engine_set_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, int use_small_engine);

typedef int (*dnx_meter_db_generic_meter_info_db_info_use_small_engine_get_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, int *use_small_engine);

typedef int (*dnx_meter_db_generic_meter_info_db_info_nof_generic_banks_set_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 nof_generic_banks);

typedef int (*dnx_meter_db_generic_meter_info_db_info_nof_generic_banks_get_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 *nof_generic_banks);

typedef int (*dnx_meter_db_generic_meter_info_db_info_banks_arr_bank_id_set_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 banks_arr_idx_0, int bank_id);

typedef int (*dnx_meter_db_generic_meter_info_db_info_banks_arr_bank_id_get_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 banks_arr_idx_0, int *bank_id);

typedef int (*dnx_meter_db_generic_meter_info_db_info_banks_arr_base_meter_index_set_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 banks_arr_idx_0, int base_meter_index);

typedef int (*dnx_meter_db_generic_meter_info_db_info_banks_arr_base_meter_index_get_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 banks_arr_idx_0, int *base_meter_index);

typedef int (*dnx_meter_db_generic_meter_info_db_info_expansion_bitmap_set_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 expansion_bitmap);

typedef int (*dnx_meter_db_generic_meter_info_db_info_expansion_bitmap_get_cb)(
    int unit, uint32 generic_meter_info_idx_0, uint32 db_info_idx_0, uint32 db_info_idx_1, uint32 *expansion_bitmap);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db0_set_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, dnx_algo_template_t policer_ingress_db0);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db0_get_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, dnx_algo_template_t *policer_ingress_db0);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db0_alloc_cb)(
    int unit);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db0_create_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db0_exchange_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, uint32 flags, int nof_references, const dnx_meter_profile_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db0_replace_data_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, int profile,  const dnx_meter_profile_info_t *new_profile_data);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db0_profile_data_get_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, int profile, int *ref_count, dnx_meter_profile_info_t *profile_data);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db0_clear_cb)(
    int unit, uint32 policer_ingress_db0_idx_0);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db1_set_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, dnx_algo_template_t policer_ingress_db1);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db1_get_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, dnx_algo_template_t *policer_ingress_db1);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db1_alloc_cb)(
    int unit);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db1_create_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db1_exchange_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, uint32 flags, int nof_references, const dnx_meter_profile_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db1_replace_data_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, int profile,  const dnx_meter_profile_info_t *new_profile_data);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db1_profile_data_get_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, int profile, int *ref_count, dnx_meter_profile_info_t *profile_data);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db1_clear_cb)(
    int unit, uint32 policer_ingress_db1_idx_0);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db2_set_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, dnx_algo_template_t policer_ingress_db2);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db2_get_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, dnx_algo_template_t *policer_ingress_db2);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db2_alloc_cb)(
    int unit);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db2_create_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db2_exchange_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, uint32 flags, int nof_references, const dnx_meter_profile_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db2_replace_data_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, int profile,  const dnx_meter_profile_info_t *new_profile_data);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db2_profile_data_get_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, int profile, int *ref_count, dnx_meter_profile_info_t *profile_data);

typedef int (*dnx_meter_db_policer_templates_policer_ingress_db2_clear_cb)(
    int unit, uint32 policer_ingress_db2_idx_0);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db0_set_cb)(
    int unit, uint32 policer_egress_db0_idx_0, dnx_algo_template_t policer_egress_db0);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db0_get_cb)(
    int unit, uint32 policer_egress_db0_idx_0, dnx_algo_template_t *policer_egress_db0);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db0_alloc_cb)(
    int unit);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db0_create_cb)(
    int unit, uint32 policer_egress_db0_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db0_exchange_cb)(
    int unit, uint32 policer_egress_db0_idx_0, uint32 flags, int nof_references, const dnx_meter_profile_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db0_replace_data_cb)(
    int unit, uint32 policer_egress_db0_idx_0, int profile,  const dnx_meter_profile_info_t *new_profile_data);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db0_profile_data_get_cb)(
    int unit, uint32 policer_egress_db0_idx_0, int profile, int *ref_count, dnx_meter_profile_info_t *profile_data);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db0_clear_cb)(
    int unit, uint32 policer_egress_db0_idx_0);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db1_set_cb)(
    int unit, uint32 policer_egress_db1_idx_0, dnx_algo_template_t policer_egress_db1);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db1_get_cb)(
    int unit, uint32 policer_egress_db1_idx_0, dnx_algo_template_t *policer_egress_db1);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db1_alloc_cb)(
    int unit);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db1_create_cb)(
    int unit, uint32 policer_egress_db1_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db1_exchange_cb)(
    int unit, uint32 policer_egress_db1_idx_0, uint32 flags, int nof_references, const dnx_meter_profile_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db1_replace_data_cb)(
    int unit, uint32 policer_egress_db1_idx_0, int profile,  const dnx_meter_profile_info_t *new_profile_data);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db1_profile_data_get_cb)(
    int unit, uint32 policer_egress_db1_idx_0, int profile, int *ref_count, dnx_meter_profile_info_t *profile_data);

typedef int (*dnx_meter_db_policer_templates_policer_egress_db1_clear_cb)(
    int unit, uint32 policer_egress_db1_idx_0);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db0_set_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, dnx_algo_template_t policer_ingress_db0);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db0_get_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, dnx_algo_template_t *policer_ingress_db0);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db0_alloc_cb)(
    int unit);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db0_create_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db0_exchange_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, uint32 flags, int nof_references, const dnx_meter_compensation_profile_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db0_replace_data_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, int profile,  const dnx_meter_compensation_profile_info_t *new_profile_data);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db0_profile_data_get_cb)(
    int unit, uint32 policer_ingress_db0_idx_0, int profile, int *ref_count, dnx_meter_compensation_profile_info_t *profile_data);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db0_clear_cb)(
    int unit, uint32 policer_ingress_db0_idx_0);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db1_set_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, dnx_algo_template_t policer_ingress_db1);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db1_get_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, dnx_algo_template_t *policer_ingress_db1);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db1_alloc_cb)(
    int unit);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db1_create_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db1_exchange_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, uint32 flags, int nof_references, const dnx_meter_compensation_profile_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db1_replace_data_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, int profile,  const dnx_meter_compensation_profile_info_t *new_profile_data);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db1_profile_data_get_cb)(
    int unit, uint32 policer_ingress_db1_idx_0, int profile, int *ref_count, dnx_meter_compensation_profile_info_t *profile_data);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db1_clear_cb)(
    int unit, uint32 policer_ingress_db1_idx_0);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db2_set_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, dnx_algo_template_t policer_ingress_db2);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db2_get_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, dnx_algo_template_t *policer_ingress_db2);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db2_alloc_cb)(
    int unit);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db2_create_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db2_exchange_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, uint32 flags, int nof_references, const dnx_meter_compensation_profile_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db2_replace_data_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, int profile,  const dnx_meter_compensation_profile_info_t *new_profile_data);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db2_profile_data_get_cb)(
    int unit, uint32 policer_ingress_db2_idx_0, int profile, int *ref_count, dnx_meter_compensation_profile_info_t *profile_data);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_ingress_db2_clear_cb)(
    int unit, uint32 policer_ingress_db2_idx_0);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db0_set_cb)(
    int unit, uint32 policer_egress_db0_idx_0, dnx_algo_template_t policer_egress_db0);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db0_get_cb)(
    int unit, uint32 policer_egress_db0_idx_0, dnx_algo_template_t *policer_egress_db0);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db0_alloc_cb)(
    int unit);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db0_create_cb)(
    int unit, uint32 policer_egress_db0_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db0_exchange_cb)(
    int unit, uint32 policer_egress_db0_idx_0, uint32 flags, int nof_references, const dnx_meter_compensation_profile_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db0_replace_data_cb)(
    int unit, uint32 policer_egress_db0_idx_0, int profile,  const dnx_meter_compensation_profile_info_t *new_profile_data);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db0_profile_data_get_cb)(
    int unit, uint32 policer_egress_db0_idx_0, int profile, int *ref_count, dnx_meter_compensation_profile_info_t *profile_data);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db0_clear_cb)(
    int unit, uint32 policer_egress_db0_idx_0);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db1_set_cb)(
    int unit, uint32 policer_egress_db1_idx_0, dnx_algo_template_t policer_egress_db1);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db1_get_cb)(
    int unit, uint32 policer_egress_db1_idx_0, dnx_algo_template_t *policer_egress_db1);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db1_alloc_cb)(
    int unit);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db1_create_cb)(
    int unit, uint32 policer_egress_db1_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db1_exchange_cb)(
    int unit, uint32 policer_egress_db1_idx_0, uint32 flags, int nof_references, const dnx_meter_compensation_profile_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db1_replace_data_cb)(
    int unit, uint32 policer_egress_db1_idx_0, int profile,  const dnx_meter_compensation_profile_info_t *new_profile_data);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db1_profile_data_get_cb)(
    int unit, uint32 policer_egress_db1_idx_0, int profile, int *ref_count, dnx_meter_compensation_profile_info_t *profile_data);

typedef int (*dnx_meter_db_policer_compensation_templates_policer_egress_db1_clear_cb)(
    int unit, uint32 policer_egress_db1_idx_0);

/*
 * STRUCTs
 */

typedef struct {
    dnx_meter_db_profile_limits_info_max_rate_set_cb set;
    dnx_meter_db_profile_limits_info_max_rate_get_cb get;
} dnx_meter_db_profile_limits_info_max_rate_cbs;

typedef struct {
    dnx_meter_db_profile_limits_info_max_burst_normal_mode_set_cb set;
    dnx_meter_db_profile_limits_info_max_burst_normal_mode_get_cb get;
} dnx_meter_db_profile_limits_info_max_burst_normal_mode_cbs;

typedef struct {
    dnx_meter_db_profile_limits_info_max_burst_large_mode_set_cb set;
    dnx_meter_db_profile_limits_info_max_burst_large_mode_get_cb get;
} dnx_meter_db_profile_limits_info_max_burst_large_mode_cbs;

typedef struct {
    dnx_meter_db_profile_limits_info_min_rate_set_cb set;
    dnx_meter_db_profile_limits_info_min_rate_get_cb get;
} dnx_meter_db_profile_limits_info_min_rate_cbs;

typedef struct {
    dnx_meter_db_profile_limits_info_min_burst_set_cb set;
    dnx_meter_db_profile_limits_info_min_burst_get_cb get;
} dnx_meter_db_profile_limits_info_min_burst_cbs;

typedef struct {
    dnx_meter_db_profile_limits_info_max_cbs_mant_set_cb set;
    dnx_meter_db_profile_limits_info_max_cbs_mant_get_cb get;
} dnx_meter_db_profile_limits_info_max_cbs_mant_cbs;

typedef struct {
    dnx_meter_db_profile_limits_info_max_cbs_exp_set_cb set;
    dnx_meter_db_profile_limits_info_max_cbs_exp_get_cb get;
} dnx_meter_db_profile_limits_info_max_cbs_exp_cbs;

typedef struct {
    dnx_meter_db_profile_limits_info_max_ir_mant_set_cb set;
    dnx_meter_db_profile_limits_info_max_ir_mant_get_cb get;
} dnx_meter_db_profile_limits_info_max_ir_mant_cbs;

typedef struct {
    dnx_meter_db_profile_limits_info_max_ir_exp_set_cb set;
    dnx_meter_db_profile_limits_info_max_ir_exp_get_cb get;
} dnx_meter_db_profile_limits_info_max_ir_exp_cbs;

typedef struct {
    dnx_meter_db_profile_limits_info_set_cb set;
    dnx_meter_db_profile_limits_info_get_cb get;
    dnx_meter_db_profile_limits_info_max_rate_cbs max_rate;
    dnx_meter_db_profile_limits_info_max_burst_normal_mode_cbs max_burst_normal_mode;
    dnx_meter_db_profile_limits_info_max_burst_large_mode_cbs max_burst_large_mode;
    dnx_meter_db_profile_limits_info_min_rate_cbs min_rate;
    dnx_meter_db_profile_limits_info_min_burst_cbs min_burst;
    dnx_meter_db_profile_limits_info_max_cbs_mant_cbs max_cbs_mant;
    dnx_meter_db_profile_limits_info_max_cbs_exp_cbs max_cbs_exp;
    dnx_meter_db_profile_limits_info_max_ir_mant_cbs max_ir_mant;
    dnx_meter_db_profile_limits_info_max_ir_exp_cbs max_ir_exp;
} dnx_meter_db_profile_limits_info_cbs;

typedef struct {
    dnx_meter_db_global_meter_enabled_set_cb set;
    dnx_meter_db_global_meter_enabled_get_cb get;
    dnx_meter_db_global_meter_enabled_alloc_cb alloc;
} dnx_meter_db_global_meter_enabled_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_enable_set_cb set;
    dnx_meter_db_generic_meter_info_db_info_enable_get_cb get;
} dnx_meter_db_generic_meter_info_db_info_enable_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_created_set_cb set;
    dnx_meter_db_generic_meter_info_db_info_created_get_cb get;
} dnx_meter_db_generic_meter_info_db_info_created_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_expansion_enable_set_cb set;
    dnx_meter_db_generic_meter_info_db_info_expansion_enable_get_cb get;
} dnx_meter_db_generic_meter_info_db_info_expansion_enable_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_expansion_is_per_tc_set_cb set;
    dnx_meter_db_generic_meter_info_db_info_expansion_is_per_tc_get_cb get;
} dnx_meter_db_generic_meter_info_db_info_expansion_is_per_tc_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_is_single_bucket_set_cb set;
    dnx_meter_db_generic_meter_info_db_info_is_single_bucket_get_cb get;
} dnx_meter_db_generic_meter_info_db_info_is_single_bucket_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_use_small_engine_set_cb set;
    dnx_meter_db_generic_meter_info_db_info_use_small_engine_get_cb get;
} dnx_meter_db_generic_meter_info_db_info_use_small_engine_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_nof_generic_banks_set_cb set;
    dnx_meter_db_generic_meter_info_db_info_nof_generic_banks_get_cb get;
} dnx_meter_db_generic_meter_info_db_info_nof_generic_banks_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_banks_arr_bank_id_set_cb set;
    dnx_meter_db_generic_meter_info_db_info_banks_arr_bank_id_get_cb get;
} dnx_meter_db_generic_meter_info_db_info_banks_arr_bank_id_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_banks_arr_base_meter_index_set_cb set;
    dnx_meter_db_generic_meter_info_db_info_banks_arr_base_meter_index_get_cb get;
} dnx_meter_db_generic_meter_info_db_info_banks_arr_base_meter_index_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_banks_arr_bank_id_cbs bank_id;
    dnx_meter_db_generic_meter_info_db_info_banks_arr_base_meter_index_cbs base_meter_index;
} dnx_meter_db_generic_meter_info_db_info_banks_arr_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_expansion_bitmap_set_cb set;
    dnx_meter_db_generic_meter_info_db_info_expansion_bitmap_get_cb get;
} dnx_meter_db_generic_meter_info_db_info_expansion_bitmap_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_db_info_alloc_cb alloc;
    dnx_meter_db_generic_meter_info_db_info_enable_cbs enable;
    dnx_meter_db_generic_meter_info_db_info_created_cbs created;
    dnx_meter_db_generic_meter_info_db_info_expansion_enable_cbs expansion_enable;
    dnx_meter_db_generic_meter_info_db_info_expansion_is_per_tc_cbs expansion_is_per_tc;
    dnx_meter_db_generic_meter_info_db_info_is_single_bucket_cbs is_single_bucket;
    dnx_meter_db_generic_meter_info_db_info_use_small_engine_cbs use_small_engine;
    dnx_meter_db_generic_meter_info_db_info_nof_generic_banks_cbs nof_generic_banks;
    dnx_meter_db_generic_meter_info_db_info_banks_arr_cbs banks_arr;
    dnx_meter_db_generic_meter_info_db_info_expansion_bitmap_cbs expansion_bitmap;
} dnx_meter_db_generic_meter_info_db_info_cbs;

typedef struct {
    dnx_meter_db_generic_meter_info_alloc_cb alloc;
    dnx_meter_db_generic_meter_info_db_info_cbs db_info;
} dnx_meter_db_generic_meter_info_cbs;

typedef struct {
    dnx_meter_db_policer_templates_policer_ingress_db0_set_cb set;
    dnx_meter_db_policer_templates_policer_ingress_db0_get_cb get;
    dnx_meter_db_policer_templates_policer_ingress_db0_alloc_cb alloc;
    dnx_meter_db_policer_templates_policer_ingress_db0_create_cb create;
    dnx_meter_db_policer_templates_policer_ingress_db0_exchange_cb exchange;
    dnx_meter_db_policer_templates_policer_ingress_db0_replace_data_cb replace_data;
    dnx_meter_db_policer_templates_policer_ingress_db0_profile_data_get_cb profile_data_get;
    dnx_meter_db_policer_templates_policer_ingress_db0_clear_cb clear;
} dnx_meter_db_policer_templates_policer_ingress_db0_cbs;

typedef struct {
    dnx_meter_db_policer_templates_policer_ingress_db1_set_cb set;
    dnx_meter_db_policer_templates_policer_ingress_db1_get_cb get;
    dnx_meter_db_policer_templates_policer_ingress_db1_alloc_cb alloc;
    dnx_meter_db_policer_templates_policer_ingress_db1_create_cb create;
    dnx_meter_db_policer_templates_policer_ingress_db1_exchange_cb exchange;
    dnx_meter_db_policer_templates_policer_ingress_db1_replace_data_cb replace_data;
    dnx_meter_db_policer_templates_policer_ingress_db1_profile_data_get_cb profile_data_get;
    dnx_meter_db_policer_templates_policer_ingress_db1_clear_cb clear;
} dnx_meter_db_policer_templates_policer_ingress_db1_cbs;

typedef struct {
    dnx_meter_db_policer_templates_policer_ingress_db2_set_cb set;
    dnx_meter_db_policer_templates_policer_ingress_db2_get_cb get;
    dnx_meter_db_policer_templates_policer_ingress_db2_alloc_cb alloc;
    dnx_meter_db_policer_templates_policer_ingress_db2_create_cb create;
    dnx_meter_db_policer_templates_policer_ingress_db2_exchange_cb exchange;
    dnx_meter_db_policer_templates_policer_ingress_db2_replace_data_cb replace_data;
    dnx_meter_db_policer_templates_policer_ingress_db2_profile_data_get_cb profile_data_get;
    dnx_meter_db_policer_templates_policer_ingress_db2_clear_cb clear;
} dnx_meter_db_policer_templates_policer_ingress_db2_cbs;

typedef struct {
    dnx_meter_db_policer_templates_policer_egress_db0_set_cb set;
    dnx_meter_db_policer_templates_policer_egress_db0_get_cb get;
    dnx_meter_db_policer_templates_policer_egress_db0_alloc_cb alloc;
    dnx_meter_db_policer_templates_policer_egress_db0_create_cb create;
    dnx_meter_db_policer_templates_policer_egress_db0_exchange_cb exchange;
    dnx_meter_db_policer_templates_policer_egress_db0_replace_data_cb replace_data;
    dnx_meter_db_policer_templates_policer_egress_db0_profile_data_get_cb profile_data_get;
    dnx_meter_db_policer_templates_policer_egress_db0_clear_cb clear;
} dnx_meter_db_policer_templates_policer_egress_db0_cbs;

typedef struct {
    dnx_meter_db_policer_templates_policer_egress_db1_set_cb set;
    dnx_meter_db_policer_templates_policer_egress_db1_get_cb get;
    dnx_meter_db_policer_templates_policer_egress_db1_alloc_cb alloc;
    dnx_meter_db_policer_templates_policer_egress_db1_create_cb create;
    dnx_meter_db_policer_templates_policer_egress_db1_exchange_cb exchange;
    dnx_meter_db_policer_templates_policer_egress_db1_replace_data_cb replace_data;
    dnx_meter_db_policer_templates_policer_egress_db1_profile_data_get_cb profile_data_get;
    dnx_meter_db_policer_templates_policer_egress_db1_clear_cb clear;
} dnx_meter_db_policer_templates_policer_egress_db1_cbs;

typedef struct {
    dnx_meter_db_policer_templates_policer_ingress_db0_cbs policer_ingress_db0;
    dnx_meter_db_policer_templates_policer_ingress_db1_cbs policer_ingress_db1;
    dnx_meter_db_policer_templates_policer_ingress_db2_cbs policer_ingress_db2;
    dnx_meter_db_policer_templates_policer_egress_db0_cbs policer_egress_db0;
    dnx_meter_db_policer_templates_policer_egress_db1_cbs policer_egress_db1;
} dnx_meter_db_policer_templates_cbs;

typedef struct {
    dnx_meter_db_policer_compensation_templates_policer_ingress_db0_set_cb set;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db0_get_cb get;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db0_alloc_cb alloc;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db0_create_cb create;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db0_exchange_cb exchange;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db0_replace_data_cb replace_data;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db0_profile_data_get_cb profile_data_get;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db0_clear_cb clear;
} dnx_meter_db_policer_compensation_templates_policer_ingress_db0_cbs;

typedef struct {
    dnx_meter_db_policer_compensation_templates_policer_ingress_db1_set_cb set;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db1_get_cb get;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db1_alloc_cb alloc;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db1_create_cb create;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db1_exchange_cb exchange;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db1_replace_data_cb replace_data;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db1_profile_data_get_cb profile_data_get;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db1_clear_cb clear;
} dnx_meter_db_policer_compensation_templates_policer_ingress_db1_cbs;

typedef struct {
    dnx_meter_db_policer_compensation_templates_policer_ingress_db2_set_cb set;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db2_get_cb get;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db2_alloc_cb alloc;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db2_create_cb create;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db2_exchange_cb exchange;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db2_replace_data_cb replace_data;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db2_profile_data_get_cb profile_data_get;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db2_clear_cb clear;
} dnx_meter_db_policer_compensation_templates_policer_ingress_db2_cbs;

typedef struct {
    dnx_meter_db_policer_compensation_templates_policer_egress_db0_set_cb set;
    dnx_meter_db_policer_compensation_templates_policer_egress_db0_get_cb get;
    dnx_meter_db_policer_compensation_templates_policer_egress_db0_alloc_cb alloc;
    dnx_meter_db_policer_compensation_templates_policer_egress_db0_create_cb create;
    dnx_meter_db_policer_compensation_templates_policer_egress_db0_exchange_cb exchange;
    dnx_meter_db_policer_compensation_templates_policer_egress_db0_replace_data_cb replace_data;
    dnx_meter_db_policer_compensation_templates_policer_egress_db0_profile_data_get_cb profile_data_get;
    dnx_meter_db_policer_compensation_templates_policer_egress_db0_clear_cb clear;
} dnx_meter_db_policer_compensation_templates_policer_egress_db0_cbs;

typedef struct {
    dnx_meter_db_policer_compensation_templates_policer_egress_db1_set_cb set;
    dnx_meter_db_policer_compensation_templates_policer_egress_db1_get_cb get;
    dnx_meter_db_policer_compensation_templates_policer_egress_db1_alloc_cb alloc;
    dnx_meter_db_policer_compensation_templates_policer_egress_db1_create_cb create;
    dnx_meter_db_policer_compensation_templates_policer_egress_db1_exchange_cb exchange;
    dnx_meter_db_policer_compensation_templates_policer_egress_db1_replace_data_cb replace_data;
    dnx_meter_db_policer_compensation_templates_policer_egress_db1_profile_data_get_cb profile_data_get;
    dnx_meter_db_policer_compensation_templates_policer_egress_db1_clear_cb clear;
} dnx_meter_db_policer_compensation_templates_policer_egress_db1_cbs;

typedef struct {
    dnx_meter_db_policer_compensation_templates_policer_ingress_db0_cbs policer_ingress_db0;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db1_cbs policer_ingress_db1;
    dnx_meter_db_policer_compensation_templates_policer_ingress_db2_cbs policer_ingress_db2;
    dnx_meter_db_policer_compensation_templates_policer_egress_db0_cbs policer_egress_db0;
    dnx_meter_db_policer_compensation_templates_policer_egress_db1_cbs policer_egress_db1;
} dnx_meter_db_policer_compensation_templates_cbs;

typedef struct {
    dnx_meter_db_is_init_cb is_init;
    dnx_meter_db_init_cb init;
    dnx_meter_db_profile_limits_info_cbs profile_limits_info;
    dnx_meter_db_global_meter_enabled_cbs global_meter_enabled;
    dnx_meter_db_generic_meter_info_cbs generic_meter_info;
    dnx_meter_db_policer_templates_cbs policer_templates;
    dnx_meter_db_policer_compensation_templates_cbs policer_compensation_templates;
} dnx_meter_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern dnx_meter_db_cbs dnx_meter_db;

#endif /* __METER_ACCESS_H__ */
