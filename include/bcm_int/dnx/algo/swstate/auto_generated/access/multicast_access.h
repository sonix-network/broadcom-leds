/** \file algo/swstate/auto_generated/access/multicast_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2022 Broadcom Inc. All rights reserved.
 */

#ifndef __MULTICAST_ACCESS_H__
#define __MULTICAST_ACCESS_H__

#include <bcm_int/dnx/algo/swstate/auto_generated/types/multicast_types.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/multicast/multicast_template_print_cb.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_multicast.h>
#include <soc/dnxc/swstate/callbacks/sw_state_htb_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_htb.h>
/*
 * TYPEDEFs
 */

typedef int (*multicast_db_is_init_cb)(
    int unit, uint8 *is_init);

typedef int (*multicast_db_init_cb)(
    int unit);

typedef int (*multicast_db_mcdb_set_cb)(
    int unit, dnx_algo_res_t mcdb);

typedef int (*multicast_db_mcdb_get_cb)(
    int unit, dnx_algo_res_t *mcdb);

typedef int (*multicast_db_mcdb_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*multicast_db_mcdb_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*multicast_db_mcdb_allocate_several_cb)(
    int unit, uint32 flags, uint32 nof_elements, void *extra_arguments, int *element);

typedef int (*multicast_db_mcdb_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*multicast_db_mcdb_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*multicast_db_mcdb_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

typedef int (*multicast_db_key_2_mcdb_id_hash_create_cb)(
    int unit, sw_state_htb_create_info_t *init_info);

typedef int (*multicast_db_key_2_mcdb_id_hash_find_cb)(
    int unit, const mcdb_hash_table_key_t *key, uint32 *value);

typedef int (*multicast_db_key_2_mcdb_id_hash_get_next_cb)(
    int unit, uint32 *iter, mcdb_hash_table_key_t *key, uint32 *value);

typedef int (*multicast_db_key_2_mcdb_id_hash_insert_cb)(
    int unit, const mcdb_hash_table_key_t *key, const uint32 *value);

typedef int (*multicast_db_key_2_mcdb_id_hash_replace_cb)(
    int unit, const mcdb_hash_table_key_t *key, const uint32 *value);

typedef int (*multicast_db_key_2_mcdb_id_hash_delete_cb)(
    int unit, const mcdb_hash_table_key_t *key);

typedef int (*multicast_db_group_is_tdm_set_cb)(
    int unit, dnx_algo_res_t group_is_tdm);

typedef int (*multicast_db_group_is_tdm_get_cb)(
    int unit, dnx_algo_res_t *group_is_tdm);

typedef int (*multicast_db_group_is_tdm_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*multicast_db_group_is_tdm_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*multicast_db_group_is_tdm_allocate_several_cb)(
    int unit, uint32 flags, uint32 nof_elements, void *extra_arguments, int *element);

typedef int (*multicast_db_group_is_tdm_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*multicast_db_group_is_tdm_free_several_cb)(
    int unit, uint32 nof_elements, int element, void *extra_arguments);

typedef int (*multicast_db_group_is_tdm_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*multicast_db_group_is_tdm_clear_cb)(
    int unit);

typedef int (*multicast_db_group_is_tdm_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

typedef int (*multicast_db_group_is_tdm_get_next_cb)(
    int unit, int *element);

typedef int (*multicast_db_group_is_tdm_dump_info_get_cb)(
    int unit, dnx_algo_res_dump_data_t * info);

typedef int (*multicast_db_group_is_tdm_nof_allocated_elements_in_range_get_cb)(
    int unit, int range_start, int nof_elements_in_range, int *nof_allocated_elements);

typedef int (*multicast_db_group_is_tdm_advanced_algorithm_info_set_cb)(
    int unit, void *algorithm_info);

typedef int (*multicast_db_group_is_tdm_advanced_algorithm_info_get_cb)(
    int unit, void *algorithm_info);

typedef int (*multicast_db_group_is_sar_set_cb)(
    int unit, dnx_algo_res_t group_is_sar);

typedef int (*multicast_db_group_is_sar_get_cb)(
    int unit, dnx_algo_res_t *group_is_sar);

typedef int (*multicast_db_group_is_sar_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

typedef int (*multicast_db_group_is_sar_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

typedef int (*multicast_db_group_is_sar_allocate_several_cb)(
    int unit, uint32 flags, uint32 nof_elements, void *extra_arguments, int *element);

typedef int (*multicast_db_group_is_sar_free_single_cb)(
    int unit, int element, void *extra_arguments);

typedef int (*multicast_db_group_is_sar_free_several_cb)(
    int unit, uint32 nof_elements, int element, void *extra_arguments);

typedef int (*multicast_db_group_is_sar_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

typedef int (*multicast_db_group_is_sar_clear_cb)(
    int unit);

typedef int (*multicast_db_group_is_sar_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

typedef int (*multicast_db_group_is_sar_get_next_cb)(
    int unit, int *element);

typedef int (*multicast_db_group_is_sar_dump_info_get_cb)(
    int unit, dnx_algo_res_dump_data_t * info);

typedef int (*multicast_db_group_is_sar_nof_allocated_elements_in_range_get_cb)(
    int unit, int range_start, int nof_elements_in_range, int *nof_allocated_elements);

typedef int (*multicast_db_group_is_sar_advanced_algorithm_info_set_cb)(
    int unit, void *algorithm_info);

typedef int (*multicast_db_group_is_sar_advanced_algorithm_info_get_cb)(
    int unit, void *algorithm_info);

/*
 * STRUCTs
 */

typedef struct {
    multicast_db_mcdb_set_cb set;
    multicast_db_mcdb_get_cb get;
    multicast_db_mcdb_create_cb create;
    multicast_db_mcdb_allocate_single_cb allocate_single;
    multicast_db_mcdb_allocate_several_cb allocate_several;
    multicast_db_mcdb_free_single_cb free_single;
    multicast_db_mcdb_is_allocated_cb is_allocated;
    multicast_db_mcdb_nof_free_elements_get_cb nof_free_elements_get;
} multicast_db_mcdb_cbs;

typedef struct {
    multicast_db_key_2_mcdb_id_hash_create_cb create;
    multicast_db_key_2_mcdb_id_hash_find_cb find;
    multicast_db_key_2_mcdb_id_hash_get_next_cb get_next;
    multicast_db_key_2_mcdb_id_hash_insert_cb insert;
    multicast_db_key_2_mcdb_id_hash_replace_cb replace;
    multicast_db_key_2_mcdb_id_hash_delete_cb delete;
} multicast_db_key_2_mcdb_id_hash_cbs;

typedef struct {
    multicast_db_group_is_tdm_set_cb set;
    multicast_db_group_is_tdm_get_cb get;
    multicast_db_group_is_tdm_create_cb create;
    multicast_db_group_is_tdm_allocate_single_cb allocate_single;
    multicast_db_group_is_tdm_allocate_several_cb allocate_several;
    multicast_db_group_is_tdm_free_single_cb free_single;
    multicast_db_group_is_tdm_free_several_cb free_several;
    multicast_db_group_is_tdm_is_allocated_cb is_allocated;
    multicast_db_group_is_tdm_clear_cb clear;
    multicast_db_group_is_tdm_nof_free_elements_get_cb nof_free_elements_get;
    multicast_db_group_is_tdm_get_next_cb get_next;
    multicast_db_group_is_tdm_dump_info_get_cb dump_info_get;
    multicast_db_group_is_tdm_nof_allocated_elements_in_range_get_cb nof_allocated_elements_in_range_get;
    multicast_db_group_is_tdm_advanced_algorithm_info_set_cb advanced_algorithm_info_set;
    multicast_db_group_is_tdm_advanced_algorithm_info_get_cb advanced_algorithm_info_get;
} multicast_db_group_is_tdm_cbs;

typedef struct {
    multicast_db_group_is_sar_set_cb set;
    multicast_db_group_is_sar_get_cb get;
    multicast_db_group_is_sar_create_cb create;
    multicast_db_group_is_sar_allocate_single_cb allocate_single;
    multicast_db_group_is_sar_allocate_several_cb allocate_several;
    multicast_db_group_is_sar_free_single_cb free_single;
    multicast_db_group_is_sar_free_several_cb free_several;
    multicast_db_group_is_sar_is_allocated_cb is_allocated;
    multicast_db_group_is_sar_clear_cb clear;
    multicast_db_group_is_sar_nof_free_elements_get_cb nof_free_elements_get;
    multicast_db_group_is_sar_get_next_cb get_next;
    multicast_db_group_is_sar_dump_info_get_cb dump_info_get;
    multicast_db_group_is_sar_nof_allocated_elements_in_range_get_cb nof_allocated_elements_in_range_get;
    multicast_db_group_is_sar_advanced_algorithm_info_set_cb advanced_algorithm_info_set;
    multicast_db_group_is_sar_advanced_algorithm_info_get_cb advanced_algorithm_info_get;
} multicast_db_group_is_sar_cbs;

typedef struct {
    multicast_db_is_init_cb is_init;
    multicast_db_init_cb init;
    multicast_db_mcdb_cbs mcdb;
    multicast_db_key_2_mcdb_id_hash_cbs key_2_mcdb_id_hash;
    multicast_db_group_is_tdm_cbs group_is_tdm;
    multicast_db_group_is_sar_cbs group_is_sar;
} multicast_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern multicast_db_cbs multicast_db;

#endif /* __MULTICAST_ACCESS_H__ */
